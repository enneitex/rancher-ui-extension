traefik:
  description: Traefik resources manage HTTP, TCP, and UDP routing with advanced load balancing, middleware, and TLS termination capabilities.

  # Common translations
  entryPoints:
    title: EntryPoints
    noEntryPoints: No entrypoint configured

  route: Route
  configuration: Configuration

  # IngressRoute specific translations
  ingressRoute:
    description: IngressRoute defines HTTP routing rules from external traffic to internal services based on host, path, and middleware configurations.
    ingressClass:
      label: Ingress Class
      tab: Ingress Class
      placeholder: "Select an ingress class"
      description: "IngressClass specifies which ingress controller will handle this IngressRoute. If not specified, the default ingress controller will be used."
      tooltip: "The ingress class to use for this IngressRoute (optional). Controls which ingress controller will handle this resource."
      none: "None (use default)"
      noIngressClasses: "No IngressClass resources found in the cluster. You may need to create an IngressClass first."
    entryPoints:
      label: EntryPoints
      description: Network EntryPoints where Traefik listens for incoming traffic
      websecure: "websecure (HTTPS - 443)"
    routes:
      label: Routes
      routeLabel: "Route {index}"
      match:
        label: Match Rule
        placeholder: "e.g. Host(`example.com`) && Path(`/api`)"
        tooltip: "Traefik matching rules using Go template syntax. Examples: Host(`domain.com`), Path(`/api`), PathPrefix(`/v1`)"
      service:
        label: Target Service
        placeholder: Select a service
        tooltip: Kubernetes service that will receive the matched traffic
      port:
        label: Port
        placeholder: "e.g. 80 or http"
        tooltip: Service port number or named port
    middleware:
      label: Middleware
      noMiddlewaresAvailable: No middleware available in this namespace
      name:
        label: Middleware Name
        placeholder: "Select a middleware"
        tooltip: Namespace of the middleware resource
    tls:
      label: TLS Configuration
      enabled: TLS is enabled for this IngressRoute
      notConfigured: TLS is not configured for this IngressRoute. Using default TLS settings.
      mode:
        enabled: Enabled
        disabled: Disabled
      validation:
        atLeastOne: When TLS is enabled, at least one field must be configured
      secretName:
        label: TLS Secret Name
        placeholder: "e.g. my-tls-secret"
        tooltip: Kubernetes secret containing TLS certificate and key
      certResolver:
        label: Certificate Resolver
        placeholder: "e.g. letsencrypt"
        tooltip: Traefik certificate resolver for automatic TLS certificate generation
      domains:
        label: Domains
        addDomain: Add Domain
        main:
          label: Main Domain
          placeholder: "e.g. example.com"
        sans:
          label: Subject Alternative Names
          placeholder: "e.g. www.example.com, api.example.com"
          tooltip: Additional domain names for the certificate
      options:
        label: TLS Options
        placeholder: "e.g. default"
        tooltip: Reference to TLSOption resource for advanced TLS configuration
      store:
        label: TLS Store
        placeholder: "e.g. default"
        tooltip: Reference to TLSStore resource for certificate storage
    validation:
      entryPointsRequired: At least one entry point must be specified

  # IngressRouteTCP specific translations
  ingressRouteTCP:
    description: IngressRouteTCP defines TCP routing rules for non-HTTP traffic like databases, messaging systems, and other TCP services.
    entryPoints:
      label: EntryPoints
      description: TCP entryPoints where Traefik listens for incoming TCP traffic
      placeholder: "e.g. 31000, 31001"
      tooltip: "Comma-separated list of TCP entryPoints configured in Traefik. Examples: 31000, 31001"
    validation:
      entryPointsRequired: At least one entryPoint must be specified
    route:
      label: TCP Route
      match:
        label: Match Rule
      service:
        label: Service
      port:
        label: Port
    middleware:
      label: MiddlewareTCP
      noMiddlewaresAvailable: No middlewareTCP available in this namespace
    tls:
      enabled: TLS is enabled for this IngressRouteTCP
      label: TLS Configuration
      notConfigured: "TLS is not configured for this IngressRouteTCP. Using default TLS settings."
      passthrough:
        label: Enable TLS Passthrough
        description: "TLS Passthrough is enabled, traffic is forwarded as-is to the backend service without terminating TLS at Traefik."
        tooltip: "When enabled, traffic is forwarded as-is to the backend service without terminating TLS at Traefik."

  # Middleware specific translations
  middleware:
    description: Middleware components that can transform requests and responses before they reach services.
    type:
      label: Middleware Type
      addHeaders: Add Headers
      basicAuth: Basic Authentication
      compress: Compression
      errors: Error Pages
      forwardAuth: Forward Authentication
      headers: Headers
      ipWhiteList: IP Whitelist
      rateLimit: Rate Limiting
      redirectRegex: Redirect Regex
      redirectScheme: Redirect Scheme
      replacePath: Replace Path
      replacePathRegex: Replace Path Regex
      stripPrefix: Strip Prefix
      stripPrefixRegex: Strip Prefix Regex
      retry: Retry
      circuitBreaker: Circuit Breaker
    spec:
      label: Configuration

  # TLS Options specific translations
  tlsOption:
    description: TLS Options define advanced TLS configurations including cipher suites, TLS versions, and client authentication.
    minVersion: Minimum TLS Version
    maxVersion: Maximum TLS Version
    cipherSuites: Cipher Suites
    curvePreferences: Curve Preferences
    clientAuth:
      label: Client Authentication
      caFiles:
        label: CA Files

  # Headers used in tables
  headers:
    entryPoints: "EntryPoints"
    routes: "Routes"
    match: "Match Rules"

  product:
    label: "Traefik"

# Type labels (only implemented types)
typeLabel:
  'traefik.io.ingressroute': "IngressRoute"
  'traefik.io.ingressroutetcp': "IngressRouteTCP"
  'traefik.io.middleware': "Middleware"
  'traefik.io.tlsoption': "TLSOption"