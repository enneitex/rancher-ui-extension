{"version":3,"file":"policy-report-0.1.0.umd.min.formatters.js","mappings":"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","sources":["webpack://policy-report-0.1.0/./formatters/PolicyReportSummary.vue?1bf0","webpack://policy-report-0.1.0/./formatters/PolicyReportSummary.vue?7b7e","webpack://policy-report-0.1.0/./formatters/PolicyReportSummary.vue","webpack://policy-report-0.1.0/./formatters/PolicyReportSummary.vue?0805","webpack://policy-report-0.1.0/./formatters/PolicyReportSummary.vue?a974"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".pr-summary[data-v-39accc52]{position:relative}.pr-summary__container[data-v-39accc52]{display:flex;align-items:center;justify-content:flex-start;width:100%;height:30px}.pr-summary__container .badge[data-v-39accc52]{padding:4px;margin:2px;border-radius:8px}.pr-summary__container .sizzle-warning-bg[data-v-39accc52]{background-color:#614ea2;color:#fff}.pr-summary__content[data-v-39accc52]{z-index:14;width:100%}.pr-summary__content>div[data-v-39accc52]{padding:10px}.pr-summary__content .counts[data-v-39accc52]{display:flex;justify-content:space-between}.pr-summary__content .text-warning[data-v-39accc52]{color:var(--warning)!important}.pr-summary__content .text-darker[data-v-39accc52]{color:var(--dark)!important}.pr-summary__content .sizzle-warning[data-v-39accc52]{color:#614ea2}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  \"data-testid\": \"resource-tab-loading\"\n}\nconst _hoisted_2 = {\n  key: 1,\n  class: \"pr-summary\"\n}\nconst _hoisted_3 = { class: \"pr-summary__container\" }\nconst _hoisted_4 = { class: \"pr-summary__content\" }\nconst _hoisted_5 = { class: \"text-right\" }\nconst _hoisted_6 = {\n  key: 2,\n  class: \"text-muted\"\n}\n\nimport { computed, useAttrs } from 'vue';\nimport { useStore } from 'vuex';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { sortBy } from '@shell/utils/sort';\n\nimport { Result, PolicyReportSummary } from '../types';\nimport { colorForResult } from '../modules/policyReporter';\n\ninterface ValueType {\n  id?: string;\n  [key: string]: any;\n}\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'PolicyReportSummary',\n  props: {\n    value: {}\n  },\n  setup(__props: any) {\n\nconst attrs = useAttrs();\n\nconst props = __props;\nconst store = useStore();\n\nconst loadingReports = computed(() => store.getters['policyReport/loadingReports']);\n\nconst summary = computed<PolicyReportSummary>(() => {\n  const resourceId = props.value?.id;\n\n  return store.getters['policyReport/summaryByResourceId'](resourceId);\n});\n\n// Determine if there's anything to show by checking for non-empty summary counts\nconst canShow = computed(() => {\n  const s = summary.value;\n\n  if (!isEmpty(s)) {\n    const counts = Object.values(s).filter(Boolean);\n\n    return counts.length > 0;\n  }\n\n  return false;\n});\n\nfunction policySummarySort(color: string, display: string): string {\n  const SORT_ORDER: Record<string, number> = {\n    fail:    1,\n    pass:    2,\n    error:   3,\n    warning: 4,\n    skip:    5,\n    other:   6\n  };\n\n  color = color.replace(/^(text|bg|sizzle)-/, '');\n\n  return `${ SORT_ORDER[display] || SORT_ORDER.other } ${ display }`;\n}\n\n// Build the summary parts array with additional display data and sort order\nconst summaryParts = computed(() => {\n  const out: Record<string, any> = {};\n\n  for (const [result, value] of Object.entries(summary.value) as [Result, number][]) {\n    const textColor = colorForResult(result);\n\n    const replacedTextColor = textColor.includes('sizzle') ? textColor : textColor.replace(/text-/, 'bg-');\n    const bgColor = textColor.includes('sizzle') ? textColor.concat('-bg') : textColor.replace(/text-/, 'bg-');\n\n    const key = `${ textColor }/${ result }`;\n\n    out[key] = {\n      key,\n      label: result.charAt(0).toUpperCase() + result.slice(1),\n      color: replacedTextColor,\n      bgColor,\n      textColor,\n      value,\n      sort:  policySummarySort(textColor, result)\n    };\n  }\n\n  return sortBy(Object.values(out), 'sort:desc', 'desc').reverse();\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_VDropdown = _resolveComponent(\"VDropdown\")!\n  const _directive_clean_tooltip = _resolveDirective(\"clean-tooltip\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _normalizeProps(_guardReactiveProps(_unref(attrs))), [\n    (loadingReports.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [\n          _createElementVNode(\"i\", { class: \"icon icon-lg icon-spinner icon-spin\" }, null, -1)\n        ])))\n      : (canShow.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n            _createVNode(_component_VDropdown, {\n              class: \"text-center hand\",\n              placement: \"top\",\n              \"open-group\": props?.value?.id,\n              trigger: \"click\",\n              offset: \"1\"\n            }, {\n              popper: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_4, [\n                  _createElementVNode(\"div\", null, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(summaryParts.value, (obj) => {\n                      return (_openBlock(), _createElementBlock(\"div\", {\n                        key: obj.key,\n                        class: \"counts\"\n                      }, [\n                        _createElementVNode(\"span\", {\n                          class: _normalizeClass([\"text-left pr-20\", { [obj.textColor]: true }])\n                        }, _toDisplayString(obj.label), 3),\n                        _createElementVNode(\"span\", _hoisted_5, _toDisplayString(obj.value), 1)\n                      ]))\n                    }), 128))\n                  ])\n                ])\n              ]),\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(summaryParts.value, (obj) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: `${obj.key}-badge`\n                    }, [\n                      (obj.value)\n                        ? (_openBlock(), _createElementBlock(\"div\", {\n                            key: 0,\n                            class: _normalizeClass([\"badge\", { [obj.bgColor]: true }])\n                          }, [\n                            _withDirectives((_openBlock(), _createElementBlock(\"span\", null, [\n                              _createTextVNode(_toDisplayString(obj.value), 1)\n                            ])), [\n                              [_directive_clean_tooltip, obj.label]\n                            ])\n                          ], 2))\n                        : _createCommentVNode(\"\", true)\n                    ]))\n                  }), 128))\n                ])\n              ]),\n              _: 1\n            }, 8, [\"open-group\"])\n          ]))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"—\"))\n  ], 16))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport { computed, useAttrs } from 'vue';\nimport { useStore } from 'vuex';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { sortBy } from '@shell/utils/sort';\n\nimport { Result, PolicyReportSummary } from '../types';\nimport { colorForResult } from '../modules/policyReporter';\n\nconst attrs = useAttrs();\n\ninterface ValueType {\n  id?: string;\n  [key: string]: any;\n}\n\nconst props = defineProps<{ value?: ValueType }>();\nconst store = useStore();\n\nconst loadingReports = computed(() => store.getters['policyReport/loadingReports']);\n\nconst summary = computed<PolicyReportSummary>(() => {\n  const resourceId = props.value?.id;\n\n  return store.getters['policyReport/summaryByResourceId'](resourceId);\n});\n\n// Determine if there's anything to show by checking for non-empty summary counts\nconst canShow = computed(() => {\n  const s = summary.value;\n\n  if (!isEmpty(s)) {\n    const counts = Object.values(s).filter(Boolean);\n\n    return counts.length > 0;\n  }\n\n  return false;\n});\n\nfunction policySummarySort(color: string, display: string): string {\n  const SORT_ORDER: Record<string, number> = {\n    fail:    1,\n    pass:    2,\n    error:   3,\n    warning: 4,\n    skip:    5,\n    other:   6\n  };\n\n  color = color.replace(/^(text|bg|sizzle)-/, '');\n\n  return `${ SORT_ORDER[display] || SORT_ORDER.other } ${ display }`;\n}\n\n// Build the summary parts array with additional display data and sort order\nconst summaryParts = computed(() => {\n  const out: Record<string, any> = {};\n\n  for (const [result, value] of Object.entries(summary.value) as [Result, number][]) {\n    const textColor = colorForResult(result);\n\n    const replacedTextColor = textColor.includes('sizzle') ? textColor : textColor.replace(/text-/, 'bg-');\n    const bgColor = textColor.includes('sizzle') ? textColor.concat('-bg') : textColor.replace(/text-/, 'bg-');\n\n    const key = `${ textColor }/${ result }`;\n\n    out[key] = {\n      key,\n      label: result.charAt(0).toUpperCase() + result.slice(1),\n      color: replacedTextColor,\n      bgColor,\n      textColor,\n      value,\n      sort:  policySummarySort(textColor, result)\n    };\n  }\n\n  return sortBy(Object.values(out), 'sort:desc', 'desc').reverse();\n});\n</script>\n\n<template>\n  <div v-bind=\"attrs\">\n    <div v-if=\"loadingReports\" data-testid=\"resource-tab-loading\">\n      <i class=\"icon icon-lg icon-spinner icon-spin\" />\n    </div>\n    <div v-else-if=\"canShow\" class=\"pr-summary\">\n      <VDropdown class=\"text-center hand\" placement=\"top\" :open-group=\"props?.value?.id\" trigger=\"click\" offset=\"1\">\n        <div class=\"pr-summary__container\">\n          <div v-for=\"obj in summaryParts\" :key=\"`${obj.key}-badge`\">\n            <div v-if=\"obj.value\" class=\"badge\" :class=\"{ [obj.bgColor]: true }\">\n              <span v-clean-tooltip=\"obj.label\">{{ obj.value }}</span>\n            </div>\n          </div>\n        </div>\n\n        <template #popper>\n          <div class=\"pr-summary__content\">\n            <div>\n              <div v-for=\"obj in summaryParts\" :key=\"obj.key\" class=\"counts\">\n                <span class=\"text-left pr-20\" :class=\"{ [obj.textColor]: true }\">\n                  {{ obj.label }}\n                </span>\n                <span class=\"text-right\">\n                  {{ obj.value }}\n                </span>\n              </div>\n            </div>\n          </div>\n        </template>\n      </VDropdown>\n    </div>\n    <div v-else class=\"text-muted\">—</div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n$height: 30px;\n$width: 100%;\n$error: #614ea2;\n\n.pr-summary {\n  position: relative;\n\n  &__container {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    width: $width;\n    height: $height;\n\n    .badge {\n      padding: 4px;\n      margin: 2px;\n      border-radius: 8px;\n    }\n\n    .sizzle-warning-bg {\n      background-color: $error;\n      color: #fff;\n    }\n  }\n\n  &__content {\n    z-index: 14;\n    width: $width;\n\n    &>div {\n      padding: 10px;\n    }\n\n    .counts {\n      display: flex;\n      justify-content: space-between;\n    }\n\n    .text-warning {\n      color: var(--warning) !important;\n    }\n\n    .text-darker {\n      color: var(--dark) !important;\n    }\n\n    .sizzle-warning {\n      color: $error;\n    }\n  }\n}\n</style>\n","import script from \"./PolicyReportSummary.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PolicyReportSummary.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./PolicyReportSummary.vue?vue&type=style&index=0&id=39accc52&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39accc52\"]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./PolicyReportSummary.vue?vue&type=style&index=0&id=39accc52&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"77e65db1\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["___CSS_LOADER_EXPORT___","push","module","id","_hoisted_1","key","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_defineComponent","__name","props","value","setup","__props","attrs","useAttrs","store","useStore","loadingReports","computed","getters","summary","resourceId","_a","canShow","s","isEmpty","counts","Object","values","filter","Boolean","length","policySummarySort","color","display","SORT_ORDER","fail","pass","error","warning","skip","other","replace","summaryParts","out","result","entries","textColor","colorForResult","replacedTextColor","includes","bgColor","concat","label","charAt","toUpperCase","slice","sort","sortBy","reverse","_ctx","_cache","_component_VDropdown","_resolveComponent","_directive_clean_tooltip","_resolveDirective","_openBlock","_createElementBlock","_normalizeProps","_guardReactiveProps","_unref","_createElementVNode","_createVNode","placement","trigger","offset","popper","_withCtx","_Fragment","_renderList","obj","_normalizeClass","_toDisplayString","default","_withDirectives","_createTextVNode","_createCommentVNode","_","__exports__","content","__esModule","locals","exports","add"],"sourceRoot":""}