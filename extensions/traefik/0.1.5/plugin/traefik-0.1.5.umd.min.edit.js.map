{"version":3,"file":"traefik-0.1.5.umd.min.edit.js","mappings":"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","sources":["webpack://traefik-0.1.5/./edit/traefik.io.ingressroutetcp/index.vue","webpack://traefik-0.1.5/./edit/traefik.io.ingressroutetcp/index.vue?fea1","webpack://traefik-0.1.5/./edit/common/TLSDomain.vue?c377","webpack://traefik-0.1.5/./edit/common/TLSDomains.vue?1590","webpack://traefik-0.1.5/./components/Routes.vue?ffc3","webpack://traefik-0.1.5/./edit/common/TLSConfiguration.vue?6c07","webpack://traefik-0.1.5/./components/IngressClassTab.vue","webpack://traefik-0.1.5/./components/IngressClassTab.vue?fefc","webpack://traefik-0.1.5/./edit/common/TLSDomains.vue?6b45","webpack://traefik-0.1.5/./components/Routes.vue","webpack://traefik-0.1.5/./components/Route.vue","webpack://traefik-0.1.5/./components/Route.vue?8ed5","webpack://traefik-0.1.5/./components/Routes.vue?9043","webpack://traefik-0.1.5/./edit/common/TLSDomain.vue?c5cd","webpack://traefik-0.1.5/./components/Route.vue?215d","webpack://traefik-0.1.5/./components/Routes.vue?16d2","webpack://traefik-0.1.5/./edit/traefik.io.tlsoption/index.vue?51c0","webpack://traefik-0.1.5/./components/Route.vue?8238","webpack://traefik-0.1.5/./edit/common/TLSConfiguration.vue","webpack://traefik-0.1.5/./edit/common/TLSDomains.vue","webpack://traefik-0.1.5/./edit/common/TLSDomain.vue","webpack://traefik-0.1.5/./edit/common/TLSDomain.vue?6a3f","webpack://traefik-0.1.5/./edit/common/TLSDomains.vue?5550","webpack://traefik-0.1.5/./edit/common/TLSConfiguration.vue?1df6","webpack://traefik-0.1.5/./edit/traefik.io.ingressroute/index.vue","webpack://traefik-0.1.5/./edit/traefik.io.ingressroute/index.vue?3360","webpack://traefik-0.1.5/./edit/traefik.io.tlsoption/index.vue","webpack://traefik-0.1.5/./edit/traefik.io.tlsoption/index.vue?8d03","webpack://traefik-0.1.5/./components/IngressClassTab.vue?49ee","webpack://traefik-0.1.5/./edit/common/TLSConfiguration.vue?e322","webpack://traefik-0.1.5/./components/IngressClassTab.vue?4f1d","webpack://traefik-0.1.5/./edit/traefik.io.tlsoption/index.vue?5740"],"sourcesContent":["<script>\nimport merge from 'lodash/merge';\nimport { allHashSettled } from '@shell/utils/promise';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport { SERVICE, SECRET } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport ResourceManager from '@shell/mixins/resource-manager';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Tabbed from '@shell/components/Tabbed';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport Routes from '../../components/Routes';\nimport TLSConfiguration from '../common/TLSConfiguration';\nimport IngressClassTab from '../../components/IngressClassTab.vue';\n\nexport default {\n  name:         'CRUIngressRouteTCP',\n  inheritAttrs: false,\n  emits:        ['input'],\n  components:   {\n    CruResource,\n    NameNsDescription,\n    Routes,\n    TLSConfiguration,\n    Labels,\n    Tab,\n    Tabbed,\n    LabeledSelect,\n    LabeledInput,\n    Banner,\n    Loading,\n    IngressClassTab\n  },\n\n  mixins: [CreateEditView, FormValidation, ResourceManager],\n\n  async fetch() {\n    // Configuration pour le ResourceManager\n    const namespace = this.value?.metadata?.namespace || null;\n\n    const secondaryResourceDataConfig = {\n      namespace,\n      data: {\n        [SERVICE]: {\n          applyTo: [\n            { var: 'services', classify: true }\n          ]\n        },\n        [SECRET]: {\n          applyTo: [\n            { var: 'secrets', classify: true }\n          ]\n        },\n        'traefik.io.middlewaretcp': {\n          applyTo: [\n            { var: 'middlewares', classify: true }\n          ]\n        },\n        'traefik.io.tlsoption': {\n          applyTo: [\n            { var: 'tlsOptions', classify: true }\n          ]\n        },\n        'traefik.io.tlsstore': {\n          applyTo: [\n            { var: 'tlsStores', classify: true }\n          ]\n        }\n      }\n    };\n\n    // Charger les ressources namespaced avec ResourceManager\n    await this.resourceManagerFetchSecondaryResources(secondaryResourceDataConfig);\n\n    // Charger les ressources non-namespaced séparément\n    const promises = {\n      ingressClasses: this.$store.dispatch('cluster/findAll', { type: 'networking.k8s.io.ingressclass', opt: { force: true } })\n    };\n\n    const hash = await allHashSettled(promises);\n\n    if (hash.ingressClasses?.status === 'fulfilled') {\n      this.ingressClasses = hash.ingressClasses.value || [];\n    }\n  },\n\n  data() {\n    const emptySpec = {\n      entryPoints: [],\n      routes: [{\n        match:       'HostSNI(`*`)',\n        services:    [{ name: '', port: '', kind: 'Service' }],\n        middlewares: []\n      }]\n    };\n\n    if (this.mode === _CREATE) {\n      this.value['spec'] = merge(this.value.spec, emptySpec);\n    } else {\n      // Ensure existing spec structure for edit mode\n      this.value.spec = this.value.spec || {};\n      this.value.spec.entryPoints = this.value.spec.entryPoints || [];\n      this.value.spec.routes = this.value.spec.routes || [];\n      if (this.value.spec.routes.length === 0) {\n        this.value.spec.routes.push({\n          match:       'HostSNI(`*`)',\n          services:    [{ name: '', port: '', kind: 'Service' }],\n          middlewares: []\n        });\n      }\n    }\n\n    return {\n      // Ressources chargées par ResourceManager\n      services:       [],\n      secrets:        [],\n      middlewaretcps: [],\n      tlsOptions:     [],\n      tlsStores:      [],\n\n      // Ressources non-namespaced\n      ingressClasses: [],\n\n      // État du composant\n      errors:         [],\n      routesValid:    false,\n      tlsValid:       true,\n\n      // Entry points as comma-separated string for UI\n      entryPointsString: (this.value.spec.entryPoints || []).join(', '),\n\n      // FormValidation configuration\n      fvReportedValidationPaths: [\n        'spec.routes.match',\n        'spec.routes.services.name',\n        'spec.routes.services.port',\n        'spec.entryPoints'\n      ],\n\n      fvFormRuleSets: [\n        // Match validation\n        {\n          path: 'spec.routes.match',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.route.match.label'\n        },\n        // Service validation\n        {\n          path: 'spec.routes.services.name',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.route.service.label'\n        },\n        {\n          path: 'spec.routes.services.port',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.route.port.label'\n        },\n        // Entry Points validation\n        {\n          path: 'spec.entryPoints',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.entryPoints.label'\n        }\n      ]\n    };\n  },\n\n  computed: {\n    // Computed for tab error indicators\n    tabErrors() {\n      return {\n        entrypoints: !this.entryPointsValid,\n        routes:      !this.routesValid || this.fvGetPathErrors(['spec.routes.match', 'spec.routes.services.name', 'spec.routes.services.port']).length > 0,\n        tls:         !this.tlsValid\n      };\n    },\n\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    entryPointsValid() {\n      return this.value.spec.entryPoints && this.value.spec.entryPoints.length > 0;\n    },\n\n    // Use the FormValidation mixin for validation\n    validationPassed() {\n      return this.fvFormIsValid && this.routesValid && this.tlsValid && this.entryPointsValid;\n    },\n\n    validationErrors() {\n      const errors = [];\n      return [...this.fvUnreportedValidationErrors, ...errors, ...this.errors];\n    },\n\n    serviceTargets() {\n      return this.services\n        .map(service => ({\n          label: service.metadata.name,\n          value: service.metadata.name,\n          ports: service.spec?.ports || []\n        }));\n    },\n\n    secretTargets() {\n      return this.secrets\n        .filter(secret => secret._type === 'kubernetes.io/tls')\n        .map(secret => ({\n          label: secret.metadata.name,\n          value: secret.metadata.name\n        }));\n    },\n\n    middlewareTcpTargets() {\n      return this.middlewaretcps\n        .map(middleware => ({\n          label: middleware.metadata.name,\n          value: middleware.metadata.name,\n          namespace: middleware.metadata.namespace\n        }));\n    },\n\n    tlsOptionsTargets() {\n      return this.tlsOptions\n        .map(tlsOption => ({\n          label: tlsOption.metadata.name,\n          value: tlsOption.metadata.name\n        }));\n    },\n\n    tlsStoresTargets() {\n      return this.tlsStores\n        .map(tlsStore => ({\n          label: tlsStore.metadata.name,\n          value: tlsStore.metadata.name\n        }));\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  watch: {\n    'value.spec.routes': {\n      handler(routes) {\n        // Watch routes to update validations if necessary\n        this.routesValid = routes && routes.length > 0 && routes.every(route => !!route.match);\n      },\n      deep: true,\n      immediate: true\n    },\n\n    // Watch entryPointsString and sync with array\n    entryPointsString(val) {\n      if (val) {\n        // Split by comma and trim whitespace\n        this.value.spec.entryPoints = val.split(',').map(ep => ep.trim()).filter(ep => ep);\n      } else {\n        this.value.spec.entryPoints = [];\n      }\n    },\n\n    // Watch namespace changes to reload resources\n    async 'value.metadata.namespace'(neu) {\n      if (neu && !this.$fetchState.pending) {\n        const config = {\n          namespace: neu,\n          data: {\n            [SERVICE]: {\n              applyTo: [{ var: 'services', classify: true }]\n            },\n            [SECRET]: {\n              applyTo: [{ var: 'secrets', classify: true }]\n            },\n            'traefik.io.middlewaretcp': {\n              applyTo: [{ var: 'middlewaretcps', classify: true }]\n            },\n            'traefik.io.tlsoption': {\n              applyTo: [{ var: 'tlsOptions', classify: true }]\n            },\n            'traefik.io.tlsstore': {\n              applyTo: [{ var: 'tlsStores', classify: true }]\n            }\n          }\n        };\n\n        await this.resourceManagerFetchSecondaryResources(config);\n      }\n    }\n  },\n\n  methods: {\n    willSave() {\n      // IngressClassTab component already manages the ingress class annotation directly\n\n      // Clean up vKey from all routes\n      this.value.spec.routes.forEach(route => {\n        delete route.vKey;\n        if (route.services) {\n          route.services.forEach(service => {\n            delete service.vKey;\n            // Ensure service.name and service.port are primitives, not objects\n            if (typeof service.name === 'object') {\n              service.name = service.name?.label || service.name?.value || '';\n            }\n            if (typeof service.port === 'object') {\n              service.port = service.port?.label || service.port?.value || '';\n            }\n          });\n        }\n        if (route.middlewares) {\n          route.middlewares.forEach(middleware => delete middleware.vKey);\n        }\n      });\n\n      // Clean up vKey from TLS domains\n      if (this.value.spec.tls?.domains) {\n        this.value.spec.tls.domains.forEach(domain => delete domain.vKey);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"validationPassed\"\n    :errors=\"validationErrors\"\n    @error=\"e => errors = e\"\n    @finish=\"save\"\n  >\n    <div v-if=\"value\">\n      <div>\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n        />\n      </div>\n\n      <Tabbed :side-tabs=\"true\">\n        <!-- Entry Points Tab -->\n        <Tab\n          name=\"entrypoints\"\n          :label=\"t('traefik.ingressRouteTCP.entryPoints.label')\"\n          :weight=\"10\"\n          :error=\"tabErrors.entrypoints\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.ingressRouteTCP.entryPoints.description')\"\n              />\n            </div>\n          </div>\n\n          <div v-if=\"!entryPointsValid\" class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"error\"\n                :label=\"t('traefik.ingressRouteTCP.validation.entryPointsRequired')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <LabeledInput\n                v-model:value=\"entryPointsString\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRouteTCP.entryPoints.label')\"\n                :placeholder=\"t('traefik.ingressRouteTCP.entryPoints.placeholder')\"\n                :tooltip=\"t('traefik.ingressRouteTCP.entryPoints.tooltip')\"\n                :error=\"!entryPointsValid ? t('traefik.ingressRouteTCP.validation.entryPointsRequired') : null\"\n              />\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Routes Tab -->\n        <Tab\n          name=\"routes\"\n          :label=\"t('traefik.ingressRouteTCP.route.label')\"\n          :weight=\"9\"\n          :error=\"tabErrors.routes\"\n        >\n          <Routes\n            :value=\"value\"\n            :mode=\"mode\"\n            :service-targets=\"serviceTargets\"\n            :middleware-targets=\"middlewareTcpTargets\"\n            @validation-changed=\"val => routesValid = val\"\n          />\n        </Tab>\n\n        <!-- TLS Tab -->\n        <Tab\n          name=\"tls\"\n          :label=\"t('traefik.ingressRouteTCP.tls.label')\"\n          :weight=\"8\"\n          :error=\"tabErrors.tls\"\n        >\n          <TLSConfiguration\n            :value=\"value\"\n            :mode=\"mode\"\n            :secret-targets=\"secretTargets\"\n            :tls-options-targets=\"tlsOptionsTargets\"\n            :tls-stores-targets=\"tlsStoresTargets\"\n            :namespace=\"value.metadata.namespace\"\n            :support-passthrough=\"true\"\n            :is-tcp=\"true\"\n            @tls-validation-changed=\"val => tlsValid = val\"\n          />\n        </Tab>\n\n        <!-- IngressClass Tab -->\n        <Tab\n          name=\"ingress-class\"\n          :label=\"t('traefik.ingressRoute.ingressClass.tab')\"\n          :weight=\"7\"\n        >\n          <IngressClassTab\n            :value=\"value\"\n            :mode=\"mode\"\n            :ingress-classes=\"ingressClasses\"\n          />\n        </Tab>\n\n        <!-- Labels & Annotations -->\n        <Tab\n          name=\"labels-and-annotations\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"-1\"\n        >\n          <Labels\n            default-container-class=\"labels-and-annotations-container\"\n            :value=\"value\"\n            :mode=\"mode\"\n            :display-side-by-side=\"false\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n  </CruResource>\n</template>","import { render } from \"./index.vue?vue&type=template&id=03903468\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./TLSDomain.vue?vue&type=style&index=0&id=1daad2c6&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3d05377f\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".routes-section[data-v-0158da48]{margin-bottom:20px}.container-group[data-v-0158da48]{padding:20px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./TLSConfiguration.vue?vue&type=style&index=0&id=548c5b1d&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f3e47c2c\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","<script>\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\n\nexport default {\n  name: 'IngressClassTab',\n\n  emits: ['update'],\n\n  components: {\n    LabeledSelect,\n    Banner\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    ingressClasses: {\n      type:    Array,\n      default: () => []\n    },\n  },\n\n  computed: {\n    // Direct computed property following Rancher patterns\n    currentIngressClass: {\n      get() {\n        return this.value?.metadata?.annotations?.['kubernetes.io/ingress.class'] || '';\n      },\n      set(val) {\n        // Ensure the value object has the required structure (following Rancher pattern)\n        if (!this.value.metadata) {\n          this.value.metadata = {};\n        }\n\n        if (!this.value.metadata.annotations) {\n          this.value.metadata.annotations = {};\n        }\n\n        if (val && val !== '') {\n          // Direct assignment following Rancher pattern\n          this.value.metadata.annotations['kubernetes.io/ingress.class'] = val;\n        } else {\n          // Direct delete following Rancher pattern\n          delete this.value.metadata.annotations['kubernetes.io/ingress.class'];\n        }\n\n        // Emit update event to notify parent\n        this.$emit('update');\n      }\n    },\n\n    ingressClassOptions() {\n      const options = this.ingressClasses.map(ingressClass => ({\n        label: ingressClass.metadata.name,\n        value: ingressClass.metadata.name\n      }));\n\n      // Add an option for \"None\" to allow clearing the annotation\n      return [\n        { label: this.t('traefik.ingressRoute.ingressClass.none'), value: '' },\n        ...options\n      ];\n    },\n\n    hasIngressClasses() {\n      return this.ingressClasses && this.ingressClasses.length > 0;\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"ingress-class-tab\">\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <Banner\n          color=\"info\"\n          :label=\"t('traefik.ingressRoute.ingressClass.description')\"\n        />\n      </div>\n    </div>\n\n    <div v-if=\"!hasIngressClasses && mode !== 'view'\" class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <Banner\n          color=\"warning\"\n          :label=\"t('traefik.ingressRoute.ingressClass.noIngressClasses')\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col span-12\">\n        <LabeledSelect\n          v-model:value=\"currentIngressClass\"\n          :mode=\"mode\"\n          :label=\"t('traefik.ingressRoute.ingressClass.label')\"\n          :placeholder=\"t('traefik.ingressRoute.ingressClass.placeholder')\"\n          :tooltip=\"t('traefik.ingressRoute.ingressClass.tooltip')\"\n          :options=\"ingressClassOptions\"\n          :disabled=\"!hasIngressClasses && mode !== 'view'\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.ingress-class-tab {\n  .row {\n    margin-bottom: 20px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n</style>","import { render } from \"./IngressClassTab.vue?vue&type=template&id=1348605e&scoped=true\"\nimport script from \"./IngressClassTab.vue?vue&type=script&lang=js\"\nexport * from \"./IngressClassTab.vue?vue&type=script&lang=js\"\n\nimport \"./IngressClassTab.vue?vue&type=style&index=0&id=1348605e&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1348605e\"]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./TLSDomains.vue?vue&type=style&index=0&id=b92792de&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1e0376ca\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","<script>\nimport { Banner } from '@components/Banner';\nimport { random32 } from '@shell/utils/string';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Tabbed from '@shell/components/Tabbed';\nimport { removeAt } from '@shell/utils/array';\nimport Route from './Route';\n\nexport default {\n  emits: ['validation-changed'],\n  components: {\n    Banner,\n    Route,\n    Tab,\n    Tabbed\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    serviceTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    middlewareTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    useTabbedHash: {\n      type:    Boolean,\n      default: undefined\n    },\n\n    isTcp: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      routeValidations: {}\n    };\n  },\n\n  beforeUpdate() {\n    // Ensure each route has a unique key for v-for tracking (UI only)\n    for (const route of this.value.spec.routes) {\n      if (!route.vKey) {\n        route['vKey'] = random32(1);\n      }\n    }\n  },\n\n  computed: {\n    isValid() {\n      // Check if there are routes and all routes are valid\n      if (this.value.spec.routes.length === 0) {\n        return false;\n      }\n\n      // Vérifiez si toutes les routes ont été validées\n      const allRoutesValidated = this.value.spec.routes.length === Object.keys(this.routeValidations).length;\n\n      if (!allRoutesValidated) {\n        return false;\n      }\n\n      // Return true only if all routes have validation status and are valid\n      return Object.values(this.routeValidations).every(v => v === true);\n    }\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid);\n      },\n      immediate: true\n    },\n    'value.spec.routes.length'() {\n      // Nettoyer les validations obsolètes\n      const currentRoutesCount = this.value.spec.routes.length;\n      const validationKeys = Object.keys(this.routeValidations);\n\n      // Supprimer les validations pour les routes qui n'existent plus\n      validationKeys.forEach(idx => {\n        const numericIdx = parseInt(idx, 10);\n        if (numericIdx >= currentRoutesCount) {\n          delete this.routeValidations[idx];\n        }\n      });\n\n      this.updateValidationStatus();\n    }\n  },\n\n  methods: {\n    updateValidationStatus() {\n      // S'assurer que toutes les routes ont un statut de validation\n      // afin que isValid puisse être correctement calculé\n      const routesCount = this.value.spec.routes.length;\n\n      for (let i = 0; i < routesCount; i++) {\n        // Si une route n'a pas encore de statut de validation (undefined),\n        // lui donner un statut initial basé sur la route\n        if (this.routeValidations[i] === undefined) {\n          const route = this.value.spec.routes[i];\n          // Logique simplifiée ici, identique à celle de Route.vue\n          const hasMatch = !!route.match;\n          const hasValidServices = route.services?.length > 0 &&\n                               route.services.every(s => !!s.name && !!s.port);\n          this.routeValidations[i] = hasMatch && hasValidServices;\n        }\n      }\n\n      // Emit current validation status\n      this.$emit('validation-changed', this.isValid);\n    },\n\n    routeValidationChanged(isValid, index) {\n      // Store validation status for the route\n      this.routeValidations[index] = isValid;\n    },\n\n    addRoute() {\n      const newRoute = this.isTcp \n        ? {\n            vKey:     random32(1),\n            match:    'HostSNI(`*`)',\n            services: [{ name: '', port: '' }]\n          }\n        : {\n            vKey:        random32(1),\n            match:       '',\n            services:    [{ name: '', port: '', kind: 'Service' }],\n            middlewares: []\n          };\n\n      this.value.spec.routes.push(newRoute);\n\n      // Forcer la mise à jour de la validation pour la nouvelle route\n      // La nouvelle route sera initialement considérée comme non validée\n      // jusqu'à ce que le composant Route émette un événement de validation\n      this.updateValidationStatus();\n    },\n\n    removeRoute(index) {\n      removeAt(this.value.spec.routes, index);\n\n      // Réinitialiser les validations après suppression d'une route\n      const newValidations = {};\n\n      // Réindexer les validations restantes\n      Object.keys(this.routeValidations).forEach(oldIdx => {\n        const numericIdx = parseInt(oldIdx, 10);\n\n        if (numericIdx < index) {\n          // Les routes avant celle supprimée gardent leur index\n          newValidations[numericIdx] = this.routeValidations[numericIdx];\n        } else if (numericIdx > index) {\n          // Les routes après celle supprimée sont décalées de -1\n          newValidations[numericIdx - 1] = this.routeValidations[numericIdx];\n        }\n        // La route à l'index supprimé est ignorée\n      });\n\n      // Mettre à jour les validations\n      this.routeValidations = newValidations;\n\n      // Forcer la mise à jour de la validation\n      this.updateValidationStatus();\n    },\n\n    routeLabel(idx) {\n      return this.t('traefik.ingressRoute.routes.routeLabel', { index: idx + 1 });\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"routes-section\">\n    <div class=\"row mb-40\">\n      <div class=\"col span-12\">\n        <Tabbed\n          :side-tabs=\"true\"\n          :show-tabs-add-remove=\"mode !== 'view'\"\n          :use-hash=\"useTabbedHash\"\n          @addTab=\"addRoute\"\n          @removeTab=\"removeRoute\"\n        >\n          <Tab\n            v-for=\"(route, idx) in value.spec.routes\"\n            :key=\"route.vKey\"\n            :name=\"'route-' + idx\"\n            :label=\"routeLabel(idx)\"\n            :error=\"routeValidations[idx] === false\"\n            :show-header=\"false\"\n            class=\"container-group\"\n          >\n            <Route\n              :value=\"route\"\n              :mode=\"mode\"\n              :index=\"idx\"\n              :service-targets=\"serviceTargets\"\n              :middleware-targets=\"middlewareTargets\"\n              :can-remove=\"value.spec.routes.length > 1\"\n              :is-tcp=\"isTcp\"\n              @remove=\"removeRoute(idx)\"\n              @validation-changed=\"(valid) => routeValidationChanged(valid, idx)\"\n            />\n          </Tab>\n        </Tabbed>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.routes-section {\n  margin-bottom: 20px;\n}\n\n.container-group {\n  padding: 20px;\n}\n</style>","<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport { Banner } from '@components/Banner';\n\nexport default {\n  emits:      ['remove', 'validation-changed'],\n  components: {\n    LabeledInput,\n    LabeledSelect,\n    ArrayListGrouped,\n    Banner\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    index: {\n      type:     Number,\n      required: true\n    },\n\n    serviceTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    middlewareTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    canRemove: {\n      type:    Boolean,\n      default: true\n    },\n\n    isTcp: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {};\n  },\n\n  created() {\n    // Initialize empty arrays if not present\n    if (!this.value.services) {\n      this.value.services = [];\n    }\n    // TCP routes don't have middlewares\n    if (!this.isTcp && !this.value.middlewares) {\n      this.value.middlewares = [];\n    }\n  },\n\n  computed: {\n    routeTitle() {\n      return this.t('traefik.route') + ' ' + (this.index + 1);\n    },\n\n    isValid() {\n      const validMatch = !!this.value.match;\n      const validServices = this.value.services?.length > 0 &&\n      this.value.services.every(s => {\n        // Service name is always required\n        if (!s.name) return false;\n\n        // Port is only required for K8s Services, not for TraefikService\n        const selectedService = this.serviceTargets.find(svc => svc.value === s.name);\n        if (selectedService?.kind === 'TraefikService') {\n          return true; // TraefikService doesn't need port\n        }\n\n        return !!s.port; // K8s Service needs port\n      });\n\n      return validMatch && validServices;\n    },\n\n    matchError() {\n      return !this.value.match ? this.t('validation.required', { key: this.t('traefik.ingressRoute.routes.match.label') }) : '';\n    },\n\n    hasOrOperators() {\n      return this.value.match && this.value.match.includes('||');\n    },\n\n    // Liste des options de middlewares pour le sélecteur\n    middlewareOptions() {\n      return this.middlewareTargets.map(middleware => ({\n        label: middleware.label,\n        value: middleware.value\n      }));\n    },\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid);\n      },\n      immediate: true\n    },\n  },\n\n  methods: {\n    remove() {\n      this.$emit('remove');\n    },\n\n    focus() {\n      this.$refs.match.focus();\n    },\n\n    updateServiceName(service, serviceName) {\n      // Ensure serviceName is always a string (handle both string and {label: \"value\"} objects)\n      const serviceNameValue = typeof serviceName === 'string' ? serviceName : serviceName?.label || serviceName?.value || '';\n      service.name = serviceNameValue;\n\n      // Find the selected service in serviceTargets to auto-fill port and kind\n      const selectedService = this.serviceTargets.find(s => s.value === serviceNameValue);\n      if (selectedService) {\n        // Auto-detect and set the service kind (Service or TraefikService)\n        service.kind = selectedService.kind || 'Service';\n\n        // Auto-fill port only for K8s Services (not TraefikService)\n        if (selectedService.kind === 'Service' && selectedService.ports && selectedService.ports.length > 0) {\n          const firstPort = selectedService.ports[0];\n          // Auto-select first port (prefer name over port number)\n          service.port = firstPort.name || firstPort.port || '';\n        } else if (selectedService.kind === 'TraefikService') {\n          // TraefikServices don't have ports in the IngressRoute reference\n          service.port = '';\n        }\n      }\n    },\n\n    updateServicePort(service, portValue) {\n      // Ensure port is always a string or number (handle both string and {label: \"value\"} objects)\n      const portValueClean = typeof portValue === 'string' || typeof portValue === 'number' ? portValue : portValue?.label || portValue?.value || '';\n      service.port = portValueClean;\n    },\n\n    getPortOptions(service) {\n      const selectedService = this.serviceTargets.find(s => s.value === service.name);\n      if (!selectedService || !selectedService.ports) {\n        return [];\n      }\n\n      return selectedService.ports.map(port => ({\n        label: port.name ? `${port.name} (${port.port})` : port.port,\n        value: port.name || port.port\n      }));\n    },\n\n    isTraefikService(service) {\n      const selectedService = this.serviceTargets.find(s => s.value === service.name);\n      return selectedService?.kind === 'TraefikService';\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"route-card\">\n    <div class=\"route-header\">\n      <h4>{{ routeTitle }}</h4>\n      <button\n        v-if=\"canRemove\"\n        type=\"button\"\n        class=\"btn role-link\"\n        @click=\"remove\"\n      >\n        {{ t('generic.remove') }}\n      </button>\n    </div>\n\n    <!-- Match Rule -->\n    <div class=\"row mb-15\">\n      <div class=\"col span-12\">\n        <LabeledInput\n          ref=\"match\"\n          v-model:value=\"value.match\"\n          :mode=\"mode\"\n          :label=\"t('traefik.ingressRoute.routes.match.label')\"\n          :placeholder=\"t('traefik.ingressRoute.routes.match.placeholder')\"\n          :tooltip=\"t('traefik.ingressRoute.routes.match.tooltip')\"\n          :required=\"true\"\n          :error=\"matchError\"\n        />\n      </div>\n    </div>\n\n    <!-- Warning for multiple OR operators -->\n    <div v-if=\"hasOrOperators && mode !== 'view'\" class=\"row mb-15\">\n      <div class=\"col span-12\">\n        <Banner\n          color=\"warning\"\n          :label=\"t('traefik.ingressRoute.routes.match.warningMultipleOr')\"\n        />\n      </div>\n    </div>\n\n\n    <!-- Services Section -->\n    <div class=\"services-section\">\n      <h5>{{ t('traefik.ingressRoute.routes.service.label') }}</h5>\n\n      <ArrayListGrouped\n        v-model:value=\"value.services\"\n        :mode=\"mode\"\n        :add-label=\"`${t('generic.add')} ${t('traefik.ingressRoute.routes.service.label')}`\"\n        :default-add-value=\"isTcp ? { name: '', port: '' } : { name: '', port: '', kind: 'Service' }\"\n        :initial-empty-row=\"false\"\n        @add=\"() => {}\"\n      >\n        <template #default=\"{ row }\">\n          <div class=\"row mb-10\">\n            <div :class=\"isTraefikService(row.value) ? 'col span-12' : 'col span-6'\">\n              <LabeledSelect\n                v-model:value=\"row.value.name\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.routes.service.label')\"\n                :tooltip=\"t('traefik.ingressRoute.routes.service.tooltip')\"\n                :placeholder=\"t('traefik.ingressRoute.routes.service.placeholder')\"\n                :options=\"serviceTargets\"\n                :required=\"true\"\n                :error=\"row.value.name ? '' : t('validation.required', { key: t('traefik.ingressRoute.routes.service.label') })\"\n                @update:model-value=\"updateServiceName(row.value, $event)\"\n              />\n            </div>\n            <div v-if=\"!isTraefikService(row.value)\" class=\"col span-6\">\n              <LabeledSelect\n                v-model:value=\"row.value.port\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.routes.port.label')\"\n                :placeholder=\"t('traefik.ingressRoute.routes.port.placeholder')\"\n                :tooltip=\"t('traefik.ingressRoute.routes.port.tooltip')\"\n                :options=\"getPortOptions(row.value)\"\n                :required=\"true\"\n                :error=\"row.value.port ? '' : t('validation.required', { key: t('traefik.ingressRoute.routes.port.label') })\"\n                @update:model-value=\"updateServicePort(row.value, $event)\"\n              />\n            </div>\n          </div>\n        </template>\n      </ArrayListGrouped>\n    </div>\n\n    <!-- Middlewares Section -->\n    <div class=\"middleware-section\">\n      <h5>{{ isTcp ? t('traefik.ingressRouteTCP.middleware.label') : t('traefik.ingressRoute.middleware.label') }}</h5>\n\n      <Banner\n        v-if=\"mode !== 'view' && middlewareTargets.length === 0\"\n        color=\"info\"\n        :label=\"isTcp ? t('traefik.ingressRouteTCP.middleware.noMiddlewaresAvailable') : t('traefik.ingressRoute.middleware.noMiddlewaresAvailable')\"\n      />\n\n      <ArrayListGrouped\n        v-if=\"middlewareTargets.length > 0\"\n        v-model:value=\"value.middlewares\"\n        :mode=\"mode\"\n        :add-label=\"`${t('generic.add')} ${isTcp ? t('traefik.ingressRouteTCP.middleware.label') : t('traefik.ingressRoute.middleware.label')}`\"\n        :default-add-value=\"{ name: '', namespace: '' }\"\n        :initial-empty-row=\"false\"\n        @add=\"() => {}\"\n      >\n        <template #default=\"{ row }\">\n          <div class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <LabeledSelect\n                v-model:value=\"row.value.name\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.middleware.name.label')\"\n                :placeholder=\"t('traefik.ingressRoute.middleware.name.placeholder')\"\n                :tooltip=\"t('traefik.ingressRoute.middleware.name.tooltip')\"\n                :options=\"middlewareOptions\"\n                @update:model-value=\"(value) => {\n                  row.value.name = value;\n                  const target = middlewareTargets.find(m => m.value === value);\n                  if (target) {\n                    row.value.namespace = target.namespace;\n                  }\n                }\"\n              />\n            </div>\n          </div>\n        </template>\n      </ArrayListGrouped>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.route-wrapper {\n  margin-bottom: 20px;\n}\n\n.route-card {\n  border: 1px solid var(--border);\n  border-radius: var(--border-radius);\n  padding: 20px;\n  background: var(--box-bg);\n}\n\n.route-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  h4 {\n    margin: 0;\n    color: var(--primary);\n  }\n}\n\n.services-section,\n.middleware-section {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid var(--border);\n\n  h5 {\n    margin-bottom: 15px;\n    color: var(--text-color);\n  }\n}\n\n.service-row {\n  margin-bottom: 15px;\n  padding: 15px;\n  background: var(--accent-btn);\n  border-radius: var(--border-radius);\n}\n\n.remove-btn {\n  margin-top: 30px;\n}\n</style>","import { render } from \"./Route.vue?vue&type=template&id=af9ab0c4&scoped=true\"\nimport script from \"./Route.vue?vue&type=script&lang=js\"\nexport * from \"./Route.vue?vue&type=script&lang=js\"\n\nimport \"./Route.vue?vue&type=style&index=0&id=af9ab0c4&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-af9ab0c4\"]])\n\nexport default __exports__","import { render } from \"./Routes.vue?vue&type=template&id=0158da48&scoped=true\"\nimport script from \"./Routes.vue?vue&type=script&lang=js\"\nexport * from \"./Routes.vue?vue&type=script&lang=js\"\n\nimport \"./Routes.vue?vue&type=style&index=0&id=0158da48&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0158da48\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remove-btn[data-v-1daad2c6]{margin-top:30px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./Route.vue?vue&type=style&index=0&id=af9ab0c4&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5055195c\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./Routes.vue?vue&type=style&index=0&id=0158da48&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"00e80903\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./index.vue?vue&type=style&index=0&id=be93a8d0&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"38a827e0\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".route-wrapper[data-v-af9ab0c4]{margin-bottom:20px}.route-card[data-v-af9ab0c4]{border:1px solid var(--border);border-radius:var(--border-radius);padding:20px;background:var(--box-bg)}.route-header[data-v-af9ab0c4]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px}.route-header h4[data-v-af9ab0c4]{margin:0;color:var(--primary)}.middleware-section[data-v-af9ab0c4],.services-section[data-v-af9ab0c4]{margin-top:20px;padding-top:20px;border-top:1px solid var(--border)}.middleware-section h5[data-v-af9ab0c4],.services-section h5[data-v-af9ab0c4]{margin-bottom:15px;color:var(--text-color)}.service-row[data-v-af9ab0c4]{margin-bottom:15px;padding:15px;background:var(--accent-btn);border-radius:var(--border-radius)}.remove-btn[data-v-af9ab0c4]{margin-top:30px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { Banner } from '@components/Banner';\nimport TLSDomains from './TLSDomains';\nimport { random32 } from '@shell/utils/string';\nimport { get, set, remove } from '@shell/utils/object';\n\nexport default {\n  emits: ['tls-validation-changed'],\n\n  components: {\n    LabeledInput,\n    LabeledSelect,\n    RadioGroup,\n    Checkbox,\n    Banner,\n    TLSDomains\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    secretTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    tlsOptionsTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    tlsStoresTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    namespace: {\n      type: String,\n      default: 'default'\n    },\n\n    supportPassthrough: {\n      type: Boolean,\n      default: false\n    },\n\n    isTcp: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      tlsMode: false, // État direct pour le mode TLS (true = enabled, false = disabled)\n      passthrough: false // État pour le TLS Passthrough (TCP uniquement)\n    };\n  },\n\n  mounted() {\n    // Initialize passthrough state\n    this.passthrough = !!this.value.spec.tls?.passthrough;\n\n    // Initialiser le tlsMode en fonction de l'état actuel\n    this.initTlsMode();\n    this.ensureDomainKeys();\n  },\n\n  computed: {\n    // Évalue si TLS a des champs configurés\n    hasTlsFields() {\n      const tls = this.value.spec.tls;\n      if (!tls) return false;\n\n      return !!(\n        tls.secretName ||\n        tls.certResolver ||\n        tls.passthrough ||\n        (tls.options && tls.options.name) ||\n        (tls.store && tls.store.name) ||\n        (tls.domains && tls.domains.length > 0)\n      );\n    },\n\n    // Validation du formulaire TLS\n    isValid() {\n      // Toujours valide si TLS est désactivé\n      // Si TLS est activé, au moins un champ doit être rempli\n      return !this.tlsMode || this.hasTlsFields;\n    },\n\n    // TLS Secret Name Value Helper\n    tlsSecretValue() {\n      return get(this.value, 'spec.tls.secretName') || '';\n    },\n\n    // TLS Certificate Resolver Value Helper\n    tlsCertResolverValue() {\n      return get(this.value, 'spec.tls.certResolver') || '';\n    },\n\n    // TLS Options Value Helper\n    tlsOptionsValue() {\n      return get(this.value, 'spec.tls.options.name') || '';\n    },\n\n    // TLS Store Value Helper\n    tlsStoreValue() {\n      return get(this.value, 'spec.tls.store.name') || '';\n    },\n\n    // Helper pour l'affichage des sans\n    sansAsString() {\n      return (domain) => {\n        return Array.isArray(domain.sans) ? domain.sans.join(', ') : '';\n      };\n    }\n  },\n\n  methods: {\n    // Initialise l'état tlsMode en fonction des données existantes\n    initTlsMode() {\n      // Si TLS a des champs renseignés, considérer comme activé\n      this.tlsMode = this.hasTlsFields;\n    },\n\n    // Gère le changement de mode TLS (enable/disable)\n    tlsModeChanged(enabled) {\n      if (!enabled) {\n        // Clear all TLS fields by deleting the object\n        delete this.value.spec.tls;\n      } else {\n        // Ensure TLS object exists when enabling\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n      }\n\n      // Emit validation status\n      this.$emit('tls-validation-changed', this.isValid);\n    },\n\n    // Set TLS Secret Name\n    updateSecretName(val) {\n      if (val) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        set(this.value, 'spec.tls.secretName', val);\n      } else {\n        remove(this.value, 'spec.tls.secretName');\n      }\n    },\n\n    // Set TLS Certificate Resolver\n    updateCertResolver(val) {\n      if (val) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        set(this.value, 'spec.tls.certResolver', val);\n      } else {\n        remove(this.value, 'spec.tls.certResolver');\n      }\n    },\n\n    // Set TLS Options using Rancher utilities\n    ensureOptionsObject(val) {\n      if (val) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        set(this.value, 'spec.tls.options.name', val);\n      } else {\n        remove(this.value, 'spec.tls.options');\n      }\n    },\n\n    // Set TLS Store using Rancher utilities\n    ensureStoreObject(val) {\n      if (val) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        set(this.value, 'spec.tls.store.name', val);\n      } else {\n        remove(this.value, 'spec.tls.store');\n      }\n    },\n\n    ensureDomainKeys() {\n      // Ensure all domains have vKey for UI tracking\n      if (this.value.spec.tls?.domains) {\n        for (const domain of this.value.spec.tls.domains) {\n          if (!domain.vKey) {\n            domain.vKey = random32(1);\n          }\n        }\n      }\n    },\n\n    // Handle TLS Passthrough toggle\n    updatePassthrough(enabled) {\n      if (enabled) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        this.value.spec.tls.passthrough = true;\n      } else {\n        if (this.value.spec.tls) {\n          delete this.value.spec.tls.passthrough;\n        }\n      }\n\n      // Emit validation status\n      this.$emit('tls-validation-changed', this.isValid);\n    }\n  },\n\n  updated() {\n    this.ensureDomainKeys();\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('tls-validation-changed', valid);\n      },\n      immediate: true\n    },\n\n    // Si les données TLS changent, réinitialiser l'état tlsMode\n    hasTlsFields: {\n      handler(hasFields) {\n        // Si on a des champs mais que le mode est désactivé, activer le mode\n        if (hasFields && !this.tlsMode) {\n          this.tlsMode = true;\n        }\n      }\n    },\n\n    // Quand tlsMode change, émettre l'événement de validation\n    tlsMode(enabled) {\n      // Si TLS est désactivé, c'est toujours valide\n      // Si TLS est activé, dépend des champs remplis\n      const isValid = !enabled || this.hasTlsFields;\n      this.$emit('tls-validation-changed', isValid);\n    },\n\n    // Watch passthrough changes\n    passthrough(enabled) {\n      this.updatePassthrough(enabled);\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"tls-configuration\">\n    <!-- RadioGroup for enabling/disabling TLS -->\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <RadioGroup\n          v-model:value=\"tlsMode\"\n          name=\"tls-mode\"\n          :options=\"[false, true]\"\n          :labels=\"[t('traefik.ingressRoute.tls.mode.disabled'), t('traefik.ingressRoute.tls.mode.enabled')]\"\n          :mode=\"mode\"\n          @update:value=\"tlsModeChanged\"\n        />\n      </div>\n    </div>\n\n    <Banner\n      v-if=\"!tlsMode && mode !== 'view'\"\n      color=\"info\"\n      :label=\"isTcp ? t('traefik.ingressRouteTCP.tls.notConfigured') : t('traefik.ingressRoute.tls.notConfigured')\"\n    />\n\n    <!-- Validation message if TLS enabled but no fields filled -->\n    <Banner\n      v-if=\"tlsMode && !hasTlsFields && mode !== 'view'\"\n      color=\"warning\"\n      :label=\"t('traefik.ingressRoute.tls.validation.atLeastOne')\"\n    />\n\n    <!-- TLS Configuration - visible when mode is enabled -->\n    <template v-if=\"tlsMode\">\n\n      <div v-if=\"supportPassthrough\" class=\"row mb-20\">\n        <div class=\"col span-12\">\n          <Checkbox\n            v-model:value=\"passthrough\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRouteTCP.tls.passthrough.label')\"\n            :tooltip=\"t('traefik.ingressRouteTCP.tls.passthrough.tooltip')\"\n          />\n        </div>\n      </div>\n\n      <!-- TLS Secret and Options -->\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledSelect\n            :value=\"tlsSecretValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.secretName.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.secretName.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.secretName.tooltip')\"\n            :options=\"secretTargets\"\n            :clearable=\"true\"\n            @update:value=\"updateSecretName\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledSelect\n            :value=\"tlsOptionsValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.options.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.options.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.options.tooltip')\"\n            :options=\"tlsOptionsTargets\"\n            :clearable=\"true\"\n            @update:value=\"ensureOptionsObject\"\n          />\n        </div>\n      </div>\n\n      <!-- Certificate Resolver and Store -->\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            :value=\"tlsCertResolverValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.certResolver.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.certResolver.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.certResolver.tooltip')\"\n            @update:value=\"updateCertResolver\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledSelect\n            :value=\"tlsStoreValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.store.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.store.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.store.tooltip')\"\n            :options=\"tlsStoresTargets\"\n            :clearable=\"true\"\n            @update:value=\"ensureStoreObject\"\n          />\n        </div>\n      </div>\n\n      <!-- Domains Section -->\n      <div class=\"domains-section\">\n        <h5>{{ t('traefik.ingressRoute.tls.domains.label') }}</h5>\n        <TLSDomains\n          :value=\"value\"\n          :mode=\"mode\"\n          :namespace=\"namespace\"\n        />\n      </div>\n\n    </template>\n  </div>\n</template>\n\n<style lang=\"scss\">\n/* Ensure global radio button styles are not scoped out */\n\n.domains-section {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid var(--border);\n\n  h5 {\n    margin-bottom: 15px;\n    color: var(--text-color);\n  }\n}\n\n.remove-btn {\n  margin-top: 30px;\n}\n</style>","<script>\nimport { _EDIT } from '@shell/config/query-params';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport TLSDomain from './TLSDomain';\n\nexport default {\n  emits: ['validation-changed'],\n\n  components: {\n    ArrayListGrouped,\n    TLSDomain\n  },\n\n  props: {\n    value: {\n      type:    Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: _EDIT\n    }\n  },\n\n  data() {\n    return {\n      domainValidations: {},\n      defaultAddValue: {\n        main: '',\n        sans: []\n      }\n    };\n  },\n\n  mounted() {\n    // Ensure domains array exists for ArrayListGrouped\n    // spec.tls should already exist when this component is rendered\n    if (this.value.spec.tls && !this.value.spec.tls.domains) {\n      this.value.spec.tls.domains = [];\n    }\n  },\n\n  computed: {\n    isValid() {\n      // If no domains, consider valid (domains are optional)\n      if (!this.value.spec.tls.domains || this.value.spec.tls.domains.length === 0) {\n        return true;\n      }\n\n      // Check if all domains have been validated\n      const allDomainsValidated = this.value.spec.tls.domains.length === Object.keys(this.domainValidations).length;\n\n      if (!allDomainsValidated) {\n        return false;\n      }\n\n      // Return true only if all domains have validation status and are valid\n      return Object.values(this.domainValidations).every(v => v === true);\n    }\n  },\n\n  methods: {\n    domainValidationChanged(isValid, index) {\n      // Store validation status for the domain\n      this.domainValidations[index] = isValid;\n      this.updateValidationStatus();\n    },\n\n    updateValidationStatus() {\n      this.$emit('validation-changed', this.isValid);\n    },\n\n    handleRemove(index) {\n      // Clean up validation state when domain is removed\n      delete this.domainValidations[index];\n      // Re-index validations\n      const newValidations = {};\n      Object.keys(this.domainValidations).forEach(key => {\n        const idx = parseInt(key);\n        if (idx > index) {\n          newValidations[idx - 1] = this.domainValidations[key];\n        } else if (idx < index) {\n          newValidations[idx] = this.domainValidations[key];\n        }\n      });\n      this.domainValidations = newValidations;\n    }\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid);\n      },\n      immediate: true\n    },\n\n    'value.spec.tls.domains.length'() {\n      this.updateValidationStatus();\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <ArrayListGrouped\n      v-model:value=\"value.spec.tls.domains\"\n      :add-label=\"t('traefik.ingressRoute.tls.domains.addDomain')\"\n      :default-add-value=\"defaultAddValue\"\n      :mode=\"mode\"\n      :initial-empty-row=\"false\"\n      @remove=\"handleRemove\"\n    >\n      <template #default=\"props\">\n        <TLSDomain\n          :value=\"props.row.value\"\n          :index=\"props.i\"\n          :mode=\"mode\"\n          @remove=\"props.remove\"\n          @validation-changed=\"(valid, index) => domainValidationChanged(valid, index)\"\n        />\n      </template>\n    </ArrayListGrouped>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n// Use default ArrayListGrouped styling\n</style>","<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\n\nexport default {\n  emits:      ['remove', 'validation-changed'],\n  components: {\n    LabeledInput\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    index: {\n      type:     Number,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    rules: {\n      default: () => [],\n      type:    Array\n    }\n  },\n\n  computed: {\n    sansAsString: {\n      get() {\n        return Array.isArray(this.value.sans) ? this.value.sans.join(', ') : '';\n      },\n      set(val) {\n        this.value.sans = val ? val.split(',').map(s => s.trim()).filter(s => s) : [];\n      }\n    },\n\n    isValid() {\n      // A domain entry is valid if at least main domain is provided\n      return !!this.value.main;\n    }\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid, this.index);\n      },\n      immediate: true\n    }\n  },\n\n  methods: {\n    remove() {\n      this.$emit('remove');\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"domain-row row mb-10\">\n    <div class=\"col span-5\">\n      <LabeledInput\n        v-model:value=\"value.main\"\n        :mode=\"mode\"\n        :label=\"t('traefik.ingressRoute.tls.domains.main.label')\"\n        :placeholder=\"t('traefik.ingressRoute.tls.domains.main.placeholder')\"\n        :rules=\"rules\"\n        :required=\"true\"\n        :error=\"!value.main ? t('validation.required', { key: t('traefik.ingressRoute.tls.domains.main.label') }) : ''\"\n      />\n    </div>\n    <div class=\"col span-5\">\n      <LabeledInput\n        v-model:value=\"sansAsString\"\n        :mode=\"mode\"\n        :label=\"t('traefik.ingressRoute.tls.domains.sans.label')\"\n        :placeholder=\"t('traefik.ingressRoute.tls.domains.sans.placeholder')\"\n        :tooltip=\"t('traefik.ingressRoute.tls.domains.sans.tooltip')\"\n      />\n    </div>\n    <div class=\"col span-2\">\n      <button\n        type=\"button\"\n        class=\"btn role-link remove-btn\"\n        @click=\"remove\"\n      >\n        {{ t('generic.remove') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.remove-btn {\n  margin-top: 30px;\n}\n</style>","import { render } from \"./TLSDomain.vue?vue&type=template&id=1daad2c6&scoped=true\"\nimport script from \"./TLSDomain.vue?vue&type=script&lang=js\"\nexport * from \"./TLSDomain.vue?vue&type=script&lang=js\"\n\nimport \"./TLSDomain.vue?vue&type=style&index=0&id=1daad2c6&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1daad2c6\"]])\n\nexport default __exports__","import { render } from \"./TLSDomains.vue?vue&type=template&id=b92792de&scoped=true\"\nimport script from \"./TLSDomains.vue?vue&type=script&lang=js\"\nexport * from \"./TLSDomains.vue?vue&type=script&lang=js\"\n\nimport \"./TLSDomains.vue?vue&type=style&index=0&id=b92792de&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b92792de\"]])\n\nexport default __exports__","import { render } from \"./TLSConfiguration.vue?vue&type=template&id=548c5b1d\"\nimport script from \"./TLSConfiguration.vue?vue&type=script&lang=js\"\nexport * from \"./TLSConfiguration.vue?vue&type=script&lang=js\"\n\nimport \"./TLSConfiguration.vue?vue&type=style&index=0&id=548c5b1d&lang=scss\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport merge from 'lodash/merge';\nimport { allHashSettled } from '@shell/utils/promise';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport { SERVICE, SECRET } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport ResourceManager from '@shell/mixins/resource-manager';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Tabbed from '@shell/components/Tabbed';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport Routes from '../../components/Routes';\nimport TLSConfiguration from '../common/TLSConfiguration';\nimport IngressClassTab from '../../components/IngressClassTab.vue';\n\nexport default {\n  name:         'CRUIngressRoute',\n  inheritAttrs: false,\n  emits:        ['input'],\n  components:   {\n    CruResource,\n    NameNsDescription,\n    Routes,\n    TLSConfiguration,\n    Labels,\n    Tab,\n    Tabbed,\n    LabeledSelect,\n    Banner,\n    Loading,\n    IngressClassTab\n  },\n\n  mixins: [CreateEditView, FormValidation, ResourceManager],\n\n  async fetch() {\n    // Configuration pour le ResourceManager\n    const namespace = this.value?.metadata?.namespace || null;\n\n    const secondaryResourceDataConfig = {\n      namespace,\n      data: {\n        [SERVICE]: {\n          applyTo: [\n            { var: 'services', classify: true }\n          ]\n        },\n        [SECRET]: {\n          applyTo: [\n            { var: 'secrets', classify: true }\n          ]\n        },\n        'traefik.io.middleware': {\n          applyTo: [\n            { var: 'middlewares', classify: true }\n          ]\n        },\n        'traefik.io.tlsoption': {\n          applyTo: [\n            { var: 'tlsOptions', classify: true }\n          ]\n        },\n        'traefik.io.tlsstore': {\n          applyTo: [\n            { var: 'tlsStores', classify: true }\n          ]\n        },\n        'traefik.io.traefikservice': {\n          applyTo: [\n            { var: 'traefikServices', classify: true }\n          ]\n        }\n      }\n    };\n\n    // Charger les ressources namespaced avec ResourceManager\n    await this.resourceManagerFetchSecondaryResources(secondaryResourceDataConfig);\n\n    // Charger les ressources non-namespaced séparément\n    const promises = {\n      ingressClasses: this.$store.dispatch('cluster/findAll', { type: 'networking.k8s.io.ingressclass', opt: { force: true } })\n    };\n\n    const hash = await allHashSettled(promises);\n\n    if (hash.ingressClasses?.status === 'fulfilled') {\n      this.ingressClasses = hash.ingressClasses.value || [];\n    }\n  },\n\n  data() {\n    const emptySpec = {\n      entryPoints: ['websecure'],\n      routes: [{\n        match:       '',\n        services:    [{ name: '', port: '', kind: 'Service' }],\n        middlewares: []\n      }]\n    };\n\n    if (this.mode === _CREATE) {\n      this.value['spec'] = merge(this.value.spec, emptySpec);\n    } else {\n      // Ensure existing spec structure for edit mode\n      this.value.spec = this.value.spec || {};\n      this.value.spec.entryPoints = this.value.spec.entryPoints || ['websecure'];\n      this.value.spec.routes = this.value.spec.routes || [];\n      if (this.value.spec.routes.length === 0) {\n        this.value.spec.routes.push({\n          match:       '',\n          services:    [{ name: '', port: '', kind: 'Service' }],\n          middlewares: []\n        });\n      }\n    }\n\n    return {\n      // Ressources chargées par ResourceManager (automatiquement filtrées par namespace)\n      services:        [],\n      secrets:         [],\n      middlewares:     [],\n      tlsOptions:      [],\n      tlsStores:       [],\n      traefikServices: [],\n\n      // Ressources non-namespaced\n      ingressClasses: [],\n\n      // État du composant\n      errors:         [],\n      routesValid:    false,\n      tlsValid:       true,\n\n      // Liste des chemins gérés par les composants enfants\n      fvReportedValidationPaths: [\n        'spec.routes.match',\n        'spec.routes.services.name',\n        'spec.entryPoints'\n      ],\n\n      // FormValidation ruleSets\n      fvFormRuleSets: [\n        // Routes validation - pour toutes les routes\n        {\n          path: 'spec.routes.match',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.routes.match.label'\n        },\n        // Service validation - pour tous les services dans toutes les routes\n        {\n          path: 'spec.routes.services.name',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.routes.service.label'\n        },\n        // Note: Port validation is NOT managed by FormValidation because it depends on service.kind\n        // Port is only required for K8s Services, not for TraefikService\n        // This validation is handled by the Route component's isValid() method\n        // Entry Points validation\n        {\n          path: 'spec.entryPoints',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.entryPoints.label'\n        }\n      ]\n    };\n  },\n\n  computed: {\n    // Computed for tab error indicators\n    tabErrors() {\n      return {\n        entrypoints: !this.entryPointsValid,\n        routes:      !this.routesValid || this.fvGetPathErrors(['spec.routes.match', 'spec.routes.services.name']).length > 0,\n        tls:         !this.tlsValid\n      };\n    },\n\n    entryPointOptions() {\n      return [\n        { label: this.t('traefik.ingressRoute.entryPoints.websecure'), value: 'websecure' }\n      ];\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    entryPointsValid() {\n      // Vérifie que spec.entryPoints est un tableau contenant 'websecure'\n      return Array.isArray(this.value.spec.entryPoints) &&\n             this.value.spec.entryPoints.includes('websecure');\n    },\n\n    // Use the FormValidation mixin for validation\n    validationPassed() {\n      // Validate both through FormValidation and the component validation events\n      return this.fvFormIsValid && this.routesValid && this.tlsValid && this.entryPointsValid;\n    },\n\n    validationErrors() {\n      const errors = [];\n\n      // Include errors from FormValidation\n      return [...this.fvUnreportedValidationErrors, ...errors, ...this.errors];\n    },\n\n    serviceTargets() {\n      // Services K8s natifs sans préfixe\n      const k8sServices = this.services\n        .map(service => ({\n          label: service.metadata.name,\n          value: service.metadata.name,\n          kind: 'Service',\n          ports: service.spec?.ports || []\n        }));\n\n      // TraefikServices avec préfixe distinctif\n      const traefikSvcs = this.traefikServices\n        .map(service => ({\n          label: `[TraefikService] ${service.metadata.name}`,\n          value: service.metadata.name,\n          kind: 'TraefikService',\n          ports: [] // TraefikServices n'ont pas de ports dans la référence\n        }));\n\n      // Fusionner les deux listes, Services K8s en premier\n      return [...k8sServices, ...traefikSvcs];\n    },\n\n    secretTargets() {\n      return this.secrets\n        .filter(secret => secret._type === 'kubernetes.io/tls')\n        .map(secret => ({\n          label: secret.metadata.name,\n          value: secret.metadata.name\n        }));\n    },\n\n    middlewareTargets() {\n      return this.middlewares\n        .map(middleware => ({\n          label: middleware.metadata.name,\n          value: middleware.metadata.name,\n          namespace: middleware.metadata.namespace\n        }));\n    },\n\n    tlsOptionsTargets() {\n      return this.tlsOptions\n        .map(tlsOption => ({\n          label: tlsOption.metadata.name,\n          value: tlsOption.metadata.name\n        }));\n    },\n\n    tlsStoresTargets() {\n      return this.tlsStores\n        .map(tlsStore => ({\n          label: tlsStore.metadata.name,\n          value: tlsStore.metadata.name\n        }));\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  watch: {\n    'value.spec.routes': {\n      handler(routes) {\n        // Surveiller les routes pour mettre à jour les validations si nécessaire\n        this.routesValid = routes && routes.length > 0 && routes.every(route => !!route.match);\n      },\n      deep: true,\n      immediate: true\n    },\n\n    // Watch namespace changes to reload resources\n    async 'value.metadata.namespace'(neu) {\n      if (neu && !this.$fetchState.pending) {\n        // Configuration avec le nouveau namespace\n        const config = {\n          namespace: neu,\n          data: {\n            [SERVICE]: {\n              applyTo: [{ var: 'services', classify: true }]\n            },\n            [SECRET]: {\n              applyTo: [{ var: 'secrets', classify: true }]\n            },\n            'traefik.io.middleware': {\n              applyTo: [{ var: 'middlewares', classify: true }]\n            },\n            'traefik.io.tlsoption': {\n              applyTo: [{ var: 'tlsOptions', classify: true }]\n            },\n            'traefik.io.tlsstore': {\n              applyTo: [{ var: 'tlsStores', classify: true }]\n            },\n            'traefik.io.traefikservice': {\n              applyTo: [{ var: 'traefikServices', classify: true }]\n            }\n          }\n        };\n\n        // Recharger les ressources pour le nouveau namespace\n        await this.resourceManagerFetchSecondaryResources(config);\n      }\n    }\n  },\n\n  methods: {\n\n    willSave() {\n      // IngressClassTab component already manages the ingress class annotation directly\n      // No need for additional processing here\n\n      // Clean up vKey from all nested objects before saving\n      this.value.spec.routes.forEach(route => {\n        delete route.vKey;\n        if (route.services) {\n          route.services.forEach(service => {\n            delete service.vKey;\n            // Ensure service.name and service.port are primitives, not objects\n            if (typeof service.name === 'object') {\n              service.name = service.name?.label || service.name?.value || '';\n            }\n            if (typeof service.port === 'object') {\n              service.port = service.port?.label || service.port?.value || '';\n            }\n            // Ensure kind is set (default to 'Service' for backward compatibility)\n            if (!service.kind) {\n              service.kind = 'Service';\n            }\n          });\n        }\n        if (route.middlewares) {\n          route.middlewares.forEach(middleware => delete middleware.vKey);\n        }\n      });\n\n      // Clean up vKey from TLS domains\n      if (this.value.spec.tls?.domains) {\n        this.value.spec.tls.domains.forEach(domain => delete domain.vKey);\n      }\n\n      // Ne pas nettoyer les routes avec match vide pour permettre à l'API\n      // de générer des erreurs de validation appropriées\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"validationPassed\"\n    :errors=\"validationErrors\"\n    @error=\"e => errors = e\"\n    @finish=\"save\"\n  >\n    <div v-if=\"value\">\n      <div>\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n        />\n      </div>\n\n      <Tabbed :side-tabs=\"true\">\n        <!-- Entry Points Tab -->\n        <Tab\n          name=\"entrypoints\"\n          :label=\"t('traefik.ingressRoute.entryPoints.label')\"\n          :weight=\"10\"\n          :error=\"tabErrors.entrypoints\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.ingressRoute.entryPoints.description')\"\n              />\n            </div>\n          </div>\n\n          <div v-if=\"!entryPointsValid\" class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"error\"\n                :label=\"t('traefik.ingressRoute.validation.entryPointsRequired')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <LabeledSelect\n                v-model:value=\"value.spec.entryPoints\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.entryPoints.label')\"\n                :multiple=\"true\"\n                :taggable=\"true\"\n                :options=\"entryPointOptions\"\n                :error=\"!entryPointsValid ? t('traefik.ingressRoute.validation.entryPointsRequired') : null\"\n              />\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Routes Tab -->\n        <Tab\n          name=\"routes\"\n          :label=\"t('traefik.ingressRoute.routes.label')\"\n          :weight=\"9\"\n          :error=\"tabErrors.routes\"\n        >\n          <Routes\n            :value=\"value\"\n            :mode=\"mode\"\n            :service-targets=\"serviceTargets\"\n            :middleware-targets=\"middlewareTargets\"\n            @validation-changed=\"val => routesValid = val\"\n          />\n        </Tab>\n\n        <!-- TLS Tab -->\n        <Tab\n          name=\"tls\"\n          :label=\"t('traefik.ingressRoute.tls.label')\"\n          :weight=\"8\"\n          :error=\"tabErrors.tls\"\n        >\n          <TLSConfiguration\n            :value=\"value\"\n            :mode=\"mode\"\n            :secret-targets=\"secretTargets\"\n            :tls-options-targets=\"tlsOptionsTargets\"\n            :tls-stores-targets=\"tlsStoresTargets\"\n            :namespace=\"value.metadata.namespace\"\n            @tls-validation-changed=\"val => tlsValid = val\"\n          />\n        </Tab>\n\n        <!-- IngressClass Tab -->\n        <Tab\n          name=\"ingress-class\"\n          :label=\"t('traefik.ingressRoute.ingressClass.tab')\"\n          :weight=\"7\"\n        >\n          <IngressClassTab\n            :value=\"value\"\n            :mode=\"mode\"\n            :ingress-classes=\"ingressClasses\"\n          />\n        </Tab>\n\n        <!-- Labels & Annotations -->\n        <Tab\n          name=\"labels-and-annotations\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"-1\"\n        >\n          <Labels\n            default-container-class=\"labels-and-annotations-container\"\n            :value=\"value\"\n            :mode=\"mode\"\n            :display-side-by-side=\"false\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n  </CruResource>\n</template>","import { render } from \"./index.vue?vue&type=template&id=6ea5c1e0\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport merge from 'lodash/merge';\nimport { allHashSettled } from '@shell/utils/promise';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport { SECRET } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport ResourceManager from '@shell/mixins/resource-manager';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Tabbed from '@shell/components/Tabbed';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport ArrayList from '@shell/components/form/ArrayList';\nimport ArrayListSelect from '@shell/components/form/ArrayListSelect';\nimport { Card } from '@components/Card';\n\nexport default {\n  name: 'CRUTLSOption',\n  inheritAttrs: false,\n  emits: ['input'],\n  components: {\n    CruResource,\n    NameNsDescription,\n    Labels,\n    Tab,\n    Tabbed,\n    LabeledSelect,\n    Banner,\n    Loading,\n    Checkbox,\n    ArrayList,\n    ArrayListSelect,\n    Card\n  },\n\n  mixins: [CreateEditView, FormValidation, ResourceManager],\n\n  async fetch() {\n    // Configuration pour le ResourceManager\n    const namespace = this.value?.metadata?.namespace || null;\n\n    const secondaryResourceDataConfig = {\n      namespace,\n      data: {\n        [SECRET]: {\n          applyTo: [\n            { var: 'secrets', classify: true }\n          ]\n        }\n      }\n    };\n\n    // Charger les ressources namespaced avec ResourceManager\n    await this.resourceManagerFetchSecondaryResources(secondaryResourceDataConfig);\n  },\n\n  data() {\n    const emptySpec = {\n      minVersion: '',\n      maxVersion: '',\n      cipherSuites: [],\n      clientAuth: {\n        clientAuthType: 'NoClientCert',\n        secretNames: []\n      },\n      alpnProtocols: [],\n      curvePreferences: [],\n      sniStrict: false,\n      disableSessionTickets: false,\n      preferServerCipherSuites: false\n    };\n\n    if (this.mode === _CREATE) {\n      this.value['spec'] = merge(this.value.spec, emptySpec);\n    } else {\n      // Ensure existing spec structure for edit mode - preserve existing values\n      this.value.spec = this.value.spec || {};\n      this.value.spec.cipherSuites = this.value.spec.cipherSuites || [];\n      this.value.spec.alpnProtocols = this.value.spec.alpnProtocols || [];\n      this.value.spec.curvePreferences = this.value.spec.curvePreferences || [];\n\n      // Only initialize clientAuth if it doesn't exist\n      if (!this.value.spec.clientAuth) {\n        this.value.spec.clientAuth = {\n          clientAuthType: 'NoClientCert',\n          secretNames: []\n        };\n      } else {\n        // Ensure secretNames array exists\n        this.value.spec.clientAuth.secretNames = this.value.spec.clientAuth.secretNames || [];\n      }\n    }\n\n    return {\n      // Ressources chargées par ResourceManager\n      secrets: [],\n\n      // État du composant\n      errors: [],\n\n      // Liste des chemins gérés par les composants enfants\n      fvReportedValidationPaths: [\n        'spec.minVersion',\n        'spec.maxVersion',\n        'spec.clientAuth.clientAuthType',\n        'spec.clientAuth.secretNames'\n      ],\n\n      // FormValidation ruleSets\n      fvFormRuleSets: []\n    };\n  },\n\n  computed: {\n    // Computed for tab error indicators\n    tabErrors() {\n      return {\n        tlsVersions: this.fvGetPathErrors(['spec.minVersion', 'spec.maxVersion']).length > 0,\n        cipherSuites: this.fvGetPathErrors(['spec.cipherSuites', 'spec.preferServerCipherSuites']).length > 0,\n        clientAuth: this.fvGetPathErrors(['spec.clientAuth.clientAuthType', 'spec.clientAuth.secretNames']).length > 0,\n        advanced: this.fvGetPathErrors(['spec.sniStrict', 'spec.disableSessionTickets']).length > 0\n      };\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n    validationPassed() {\n      // Validate both through FormValidation and the component validation events\n      return this.fvFormIsValid;\n    },\n\n    validationErrors() {\n      const errors = [];\n\n      // Include errors from FormValidation\n      return [...this.fvUnreportedValidationErrors, ...errors, ...this.errors];\n    },\n\n    secretTargets() {\n      return this.secrets\n        .filter(secret => secret._type === 'kubernetes.io/tls')\n        .map(secret => ({\n          label: secret.metadata.name,\n          value: secret.metadata.name\n        }));\n    },\n\n    requiresClientCerts() {\n      const authType = this.value.spec?.clientAuth?.clientAuthType;\n      return ['RequireAnyClientCert', 'VerifyClientCertIfGiven', 'RequireAndVerifyClientCert'].includes(authType);\n    },\n\n    tlsVersionOptions() {\n      return this.value?.tlsVersions || [\n        { value: 'VersionTLS10', label: 'TLS 1.0' },\n        { value: 'VersionTLS11', label: 'TLS 1.1' },\n        { value: 'VersionTLS12', label: 'TLS 1.2' },\n        { value: 'VersionTLS13', label: 'TLS 1.3' },\n      ];\n    },\n\n    clientAuthTypeOptions() {\n      return this.value?.clientAuthTypes || [\n        {\n          value: 'NoClientCert',\n          label: 'No Client Certificate',\n          description: 'No client certificate required'\n        },\n        {\n          value: 'RequestClientCert',\n          label: 'Request Client Certificate',\n          description: 'Client certificate is requested but not required'\n        },\n        {\n          value: 'RequireAnyClientCert',\n          label: 'Require Any Client Certificate',\n          description: 'Client certificate is required but not validated'\n        },\n        {\n          value: 'VerifyClientCertIfGiven',\n          label: 'Verify Client Certificate If Given',\n          description: 'Client certificate is verified if provided'\n        },\n        {\n          value: 'RequireAndVerifyClientCert',\n          label: 'Require and Verify Client Certificate',\n          description: 'Client certificate is required and validated'\n        }\n      ];\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  watch: {\n    // Watch namespace changes to reload resources\n    async 'value.metadata.namespace'(neu) {\n      if (neu && !this.$fetchState.pending) {\n        const config = {\n          namespace: neu,\n          data: {\n            [SECRET]: {\n              applyTo: [{ var: 'secrets', classify: true }]\n            }\n          }\n        };\n\n        await this.resourceManagerFetchSecondaryResources(config);\n      }\n    }\n  },\n\n  methods: {\n    willSave() {\n      // Nettoyer les valeurs par défaut si elles ne sont pas définies\n      if (!this.value.spec) {\n        this.value.spec = {};\n      }\n\n      // Clean up empty arrays and undefined values\n      const spec = this.value.spec;\n\n      // Remove empty strings for TLS versions (allow them to be undefined)\n      if (spec.minVersion === '') {\n        delete spec.minVersion;\n      }\n      if (spec.maxVersion === '') {\n        delete spec.maxVersion;\n      }\n\n      // Clean up empty arrays\n      if (spec.cipherSuites && spec.cipherSuites.length === 0) {\n        delete spec.cipherSuites;\n      }\n      if (spec.alpnProtocols && spec.alpnProtocols.length === 0) {\n        delete spec.alpnProtocols;\n      }\n      if (spec.curvePreferences && spec.curvePreferences.length === 0) {\n        delete spec.curvePreferences;\n      }\n\n      // Clean up boolean defaults\n      if (spec.sniStrict === false) {\n        delete spec.sniStrict;\n      }\n      if (spec.disableSessionTickets === false) {\n        delete spec.disableSessionTickets;\n      }\n      if (spec.preferServerCipherSuites === false) {\n        delete spec.preferServerCipherSuites;\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"validationPassed\"\n    :errors=\"validationErrors\"\n    @error=\"e => errors = e\"\n    @finish=\"save\"\n  >\n    <div v-if=\"value\">\n      <div>\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n        />\n      </div>\n\n      <Tabbed :side-tabs=\"true\">\n        <!-- TLS Versions Tab -->\n        <Tab\n          name=\"tls-versions\"\n          :label=\"t('traefik.tlsOption.tabs.tlsVersions')\"\n          :weight=\"10\"\n          :error=\"tabErrors.tlsVersions\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.tlsVersions.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"tls-versions-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-lock\" />\n                    {{ t('traefik.tlsOption.tabs.tlsVersions') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <div class=\"row\">\n                    <div class=\"col span-6\">\n                      <LabeledSelect\n                        v-model:value=\"value.spec.minVersion\"\n                        :label=\"t('traefik.tlsOption.minVersion.label')\"\n                        :options=\"tlsVersionOptions\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.minVersion.tooltip')\"\n                        option-key=\"value\"\n                        option-label=\"label\"\n                        :searchable=\"false\"\n                        :clearable=\"true\"\n                        :rules=\"fvGetAndReportPathRules('spec.minVersion')\"\n                      />\n                    </div>\n                    <div class=\"col span-6\">\n                      <LabeledSelect\n                        v-model:value=\"value.spec.maxVersion\"\n                        :label=\"t('traefik.tlsOption.maxVersion.label')\"\n                        :options=\"tlsVersionOptions\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.maxVersion.tooltip')\"\n                        option-key=\"value\"\n                        option-label=\"label\"\n                        :searchable=\"false\"\n                        :clearable=\"true\"\n                        :rules=\"fvGetAndReportPathRules('spec.maxVersion')\"\n                      />\n                    </div>\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Cipher Suites Tab -->\n        <Tab\n          name=\"cipher-suites\"\n          :label=\"t('traefik.tlsOption.tabs.cipherSuites')\"\n          :weight=\"9\"\n          :error=\"tabErrors.cipherSuites\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.cipherSuites.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"cipher-suites-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-shield\" />\n                    {{ t('traefik.tlsOption.cipherSuites.label') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <ArrayList\n                    v-model:value=\"value.spec.cipherSuites\"\n                    :title=\"t('traefik.tlsOption.cipherSuites.label')\"\n                    :mode=\"mode\"\n                    :add-label=\"t('traefik.tlsOption.cipherSuites.add')\"\n                    :placeholder=\"t('traefik.tlsOption.cipherSuites.placeholder')\"\n                    :tooltip=\"t('traefik.tlsOption.cipherSuites.tooltip')\"\n                    :initial-empty-row=\"false\"\n                    default-add-value=\"\"\n                    add-allowed\n                  />\n\n                  <div class=\"mt-20\">\n                    <Checkbox\n                      v-model:value=\"value.spec.preferServerCipherSuites\"\n                      :label=\"t('traefik.tlsOption.preferServerCipherSuites.label')\"\n                      :mode=\"mode\"\n                      :tooltip=\"t('traefik.tlsOption.preferServerCipherSuites.tooltip')\"\n                    />\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Client Authentication Tab -->\n        <Tab\n          name=\"client-auth\"\n          :label=\"t('traefik.tlsOption.tabs.clientAuth')\"\n          :weight=\"8\"\n          :error=\"tabErrors.clientAuth\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.clientAuth.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"client-auth-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-user\" />\n                    {{ t('traefik.tlsOption.clientAuth.label') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <div class=\"row\">\n                    <div class=\"col span-12\">\n                      <LabeledSelect\n                        v-model:value=\"value.spec.clientAuth.clientAuthType\"\n                        :label=\"t('traefik.tlsOption.clientAuth.type.label')\"\n                        :options=\"clientAuthTypeOptions\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.clientAuth.type.tooltip')\"\n                        option-key=\"value\"\n                        option-label=\"label\"\n                        :searchable=\"false\"\n                        :rules=\"fvGetAndReportPathRules('spec.clientAuth.clientAuthType')\"\n                      />\n                    </div>\n                  </div>\n\n                  <div\n                    class=\"row mt-20\"\n                  >\n                    <div class=\"col span-12\">\n                      <ArrayListSelect\n                        v-model:value=\"value.spec.clientAuth.secretNames\"\n                        :options=\"secretTargets\"\n                        :array-list-props=\"{\n                          title: t('traefik.tlsOption.clientAuth.secrets.label'),\n                          addLabel: t('traefik.tlsOption.clientAuth.secrets.add'),\n                          mode: mode\n                        }\"\n                        :select-props=\"{\n                          placeholder: t('traefik.tlsOption.clientAuth.secrets.placeholder'),\n                          searchable: true,\n                          clearable: true\n                        }\"\n                        :disabled=\"mode === 'view'\"\n                      />\n                    </div>\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Advanced Options Tab -->\n        <Tab\n          name=\"advanced\"\n          :label=\"t('traefik.tlsOption.tabs.advanced')\"\n          :weight=\"7\"\n          :error=\"tabErrors.advanced\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.advanced.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"advanced-options-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-settings\" />\n                    {{ t('traefik.tlsOption.tabs.advanced') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <!-- ALPN Protocols -->\n                  <div class=\"mb-20\">\n                    <h5>{{ t('traefik.tlsOption.alpnProtocols.label') }}</h5>\n                    <ArrayList\n                      v-model:value=\"value.spec.alpnProtocols\"\n                      :title=\"t('traefik.tlsOption.alpnProtocols.label')\"\n                      :mode=\"mode\"\n                      :add-label=\"t('traefik.tlsOption.alpnProtocols.add')\"\n                      :placeholder=\"t('traefik.tlsOption.alpnProtocols.placeholder')\"\n                      :tooltip=\"t('traefik.tlsOption.alpnProtocols.tooltip')\"\n                      :initial-empty-row=\"false\"\n                      default-add-value=\"\"\n                      add-allowed\n                    />\n                  </div>\n\n                  <!-- Curve Preferences -->\n                  <div class=\"mb-20\">\n                    <h5>{{ t('traefik.tlsOption.curvePreferences.label') }}</h5>\n                    <ArrayList\n                      v-model:value=\"value.spec.curvePreferences\"\n                      :title=\"t('traefik.tlsOption.curvePreferences.label')\"\n                      :mode=\"mode\"\n                      :add-label=\"t('traefik.tlsOption.curvePreferences.add')\"\n                      :placeholder=\"t('traefik.tlsOption.curvePreferences.placeholder')\"\n                      :tooltip=\"t('traefik.tlsOption.curvePreferences.tooltip')\"\n                      :initial-empty-row=\"false\"\n                      default-add-value=\"\"\n                      add-allowed\n                    />\n                  </div>\n\n                  <!-- Boolean Options -->\n                  <div class=\"row\">\n                    <div class=\"col span-6\">\n                      <Checkbox\n                        v-model:value=\"value.spec.sniStrict\"\n                        :label=\"t('traefik.tlsOption.sniStrict.label')\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.sniStrict.tooltip')\"\n                      />\n                    </div>\n                    <div class=\"col span-6\">\n                      <Checkbox\n                        v-model:value=\"value.spec.disableSessionTickets\"\n                        :label=\"t('traefik.tlsOption.disableSessionTickets.label')\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.disableSessionTickets.tooltip')\"\n                      />\n                    </div>\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Labels & Annotations Tab -->\n        <Tab\n          name=\"labels\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"0\"\n        >\n          <Labels\n            :value=\"value\"\n            :mode=\"mode\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n  </CruResource>\n</template>\n\n<style lang=\"scss\" scoped>\n.card-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--input-label);\n\n  .icon {\n    color: var(--primary);\n    font-size: 1.1em;\n  }\n}\n\n.tls-versions-card,\n.cipher-suites-card,\n.client-auth-card,\n.advanced-options-card {\n  border: 1px solid var(--border);\n  border-radius: var(--border-radius);\n\n}\n\nh5 {\n  color: var(--input-label);\n  margin-bottom: 10px;\n  font-weight: 500;\n}\n\n.mt-20 {\n  margin-top: 20px;\n}\n\n.mb-20 {\n  margin-bottom: 20px;\n}\n</style>","import { render } from \"./index.vue?vue&type=template&id=be93a8d0&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=be93a8d0&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-be93a8d0\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ingress-class-tab .row[data-v-1348605e]{margin-bottom:20px}.ingress-class-tab .row[data-v-1348605e]:last-child{margin-bottom:0}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".domains-section{margin-top:20px;padding-top:20px;border-top:1px solid var(--border)}.domains-section h5{margin-bottom:15px;color:var(--text-color)}.remove-btn{margin-top:30px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./IngressClassTab.vue?vue&type=style&index=0&id=1348605e&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4e1f8b40\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".card-title[data-v-be93a8d0]{display:flex;align-items:center;gap:8px;color:var(--input-label)}.card-title .icon[data-v-be93a8d0]{color:var(--primary);font-size:1.1em}.advanced-options-card[data-v-be93a8d0],.cipher-suites-card[data-v-be93a8d0],.client-auth-card[data-v-be93a8d0],.tls-versions-card[data-v-be93a8d0]{border:1px solid var(--border);border-radius:var(--border-radius)}h5[data-v-be93a8d0]{color:var(--input-label);margin-bottom:10px;font-weight:500}.mt-20[data-v-be93a8d0]{margin-top:20px}.mb-20[data-v-be93a8d0]{margin-bottom:20px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["class","_ctx","$fetchState","pending","_createBlock","_component_Loading","key","_component_CruResource","doneRoute","mode","resource","value","subtypes","$options","validationPassed","errors","validationErrors","onError","_cache","e","$data","onFinish","save","_createElementBlock","_hoisted_1","_createElementVNode","isView","_component_NameNsDescription","_createVNode","_component_Tabbed","_component_Tab","name","label","t","weight","error","tabErrors","entrypoints","_hoisted_2","_hoisted_3","_component_Banner","color","entryPointsValid","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_component_LabeledInput","entryPointsString","$event","placeholder","tooltip","routes","_component_Routes","serviceTargets","middlewareTcpTargets","onValidationChanged","val","routesValid","tls","_component_TLSConfiguration","secretTargets","tlsOptionsTargets","tlsStoresTargets","namespace","metadata","onTlsValidationChanged","tlsValid","_component_IngressClassTab","ingressClasses","_component_Labels","inheritAttrs","emits","components","CruResource","NameNsDescription","Routes","TLSConfiguration","Labels","Tab","Tabbed","LabeledSelect","LabeledInput","Banner","Loading","IngressClassTab","mixins","CreateEditView","FormValidation","ResourceManager","fetch","this","secondaryResourceDataConfig","data","SERVICE","applyTo","var","classify","SECRET","resourceManagerFetchSecondaryResources","promises","$store","dispatch","type","opt","force","hash","allHashSettled","status","emptySpec","entryPoints","match","services","port","kind","middlewares","_CREATE","merge","spec","length","push","secrets","middlewaretcps","tlsOptions","tlsStores","join","fvReportedValidationPaths","fvFormRuleSets","path","rules","translationKey","computed","fvGetPathErrors","_VIEW","fvFormIsValid","fvUnreportedValidationErrors","map","service","ports","filter","secret","_type","middleware","tlsOption","tlsStore","created","registerBeforeHook","willSave","watch","handler","every","route","deep","immediate","split","ep","trim","neu","config","methods","forEach","vKey","domains","domain","__exports__","render","content","__esModule","default","module","id","locals","exports","add","___CSS_LOADER_EXPORT___","hasIngressClasses","$props","_component_LabeledSelect","currentIngressClass","options","ingressClassOptions","disabled","props","Object","required","String","Array","get","annotations","set","$emit","ingressClass","useTabbedHash","onAddTab","addRoute","onRemoveTab","removeRoute","_Fragment","_renderList","idx","routeLabel","routeValidations","_component_Route","index","middlewareTargets","isTcp","onRemove","valid","routeValidationChanged","_toDisplayString","routeTitle","canRemove","onClick","args","remove","ref","matchError","hasOrOperators","_component_ArrayListGrouped","onAdd","_withCtx","row","_hoisted_8","_normalizeClass","isTraefikService","updateServiceName","_hoisted_9","getPortOptions","updateServicePort","_hoisted_10","_hoisted_11","_hoisted_12","middlewareOptions","target","find","m","ArrayListGrouped","Number","Boolean","isValid","validMatch","validServices","s","selectedService","svc","includes","focus","$refs","serviceName","serviceNameValue","firstPort","portValue","portValueClean","Route","undefined","beforeUpdate","random32","allRoutesValidated","keys","values","v","currentRoutesCount","validationKeys","numericIdx","parseInt","updateValidationStatus","routesCount","i","hasMatch","hasValidServices","newRoute","removeAt","newValidations","oldIdx","_component_RadioGroup","tlsMode","tlsModeChanged","labels","hasTlsFields","supportPassthrough","_component_Checkbox","passthrough","tlsSecretValue","clearable","updateSecretName","tlsOptionsValue","ensureOptionsObject","tlsCertResolverValue","updateCertResolver","tlsStoreValue","ensureStoreObject","_component_TLSDomains","defaultAddValue","handleRemove","_component_TLSDomain","domainValidationChanged","main","sansAsString","isArray","sans","TLSDomain","_EDIT","domainValidations","mounted","allDomainsValidated","RadioGroup","Checkbox","TLSDomains","initTlsMode","ensureDomainKeys","secretName","certResolver","store","enabled","updatePassthrough","updated","hasFields","multiple","taggable","entryPointOptions","traefikServices","k8sServices","traefikSvcs","tlsVersions","_component_Card","title","body","minVersion","tlsVersionOptions","searchable","fvGetAndReportPathRules","maxVersion","cipherSuites","_hoisted_13","_hoisted_14","_component_ArrayList","_hoisted_15","preferServerCipherSuites","clientAuth","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","clientAuthType","clientAuthTypeOptions","_hoisted_23","_hoisted_24","_component_ArrayListSelect","secretNames","advanced","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","alpnProtocols","_hoisted_31","curvePreferences","_hoisted_32","_hoisted_33","sniStrict","_hoisted_34","disableSessionTickets","ArrayList","ArrayListSelect","Card","requiresClientCerts","authType","clientAuthTypes","description"],"sourceRoot":""}