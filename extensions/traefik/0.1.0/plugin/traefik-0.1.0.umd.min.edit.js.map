{"version":3,"file":"traefik-0.1.0.umd.min.edit.js","mappings":"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","sources":["webpack://traefik-0.1.0/./edit/common/TLSConfiguration.vue?deb3","webpack://traefik-0.1.0/./edit/common/TLSConfiguration.vue?c6e5","webpack://traefik-0.1.0/./edit/traefik.io.ingressroute/index.vue","webpack://traefik-0.1.0/./edit/traefik.io.ingressroute/index.vue?3360","webpack://traefik-0.1.0/./components/IngressClassTab.vue?75d8","webpack://traefik-0.1.0/./edit/common/TLSDomain.vue?c377","webpack://traefik-0.1.0/./components/Routes.vue","webpack://traefik-0.1.0/./components/Route.vue","webpack://traefik-0.1.0/./components/Route.vue?8ed5","webpack://traefik-0.1.0/./components/Routes.vue?9043","webpack://traefik-0.1.0/./components/Routes.vue?ffc3","webpack://traefik-0.1.0/./edit/traefik.io.ingressroutetcp/index.vue","webpack://traefik-0.1.0/./edit/traefik.io.ingressroutetcp/index.vue?fea1","webpack://traefik-0.1.0/./edit/traefik.io.tlsoption/index.vue?19c0","webpack://traefik-0.1.0/./components/Route.vue?63b2","webpack://traefik-0.1.0/./edit/common/TLSDomains.vue?bf96","webpack://traefik-0.1.0/./components/Route.vue?0f72","webpack://traefik-0.1.0/./components/IngressClassTab.vue","webpack://traefik-0.1.0/./components/IngressClassTab.vue?fefc","webpack://traefik-0.1.0/./edit/common/TLSDomain.vue?c5cd","webpack://traefik-0.1.0/./components/Routes.vue?16d2","webpack://traefik-0.1.0/./edit/traefik.io.tlsoption/index.vue","webpack://traefik-0.1.0/./edit/traefik.io.tlsoption/index.vue?8d03","webpack://traefik-0.1.0/./edit/common/TLSConfiguration.vue","webpack://traefik-0.1.0/./edit/common/TLSDomains.vue","webpack://traefik-0.1.0/./edit/common/TLSDomain.vue","webpack://traefik-0.1.0/./edit/common/TLSDomain.vue?6a3f","webpack://traefik-0.1.0/./edit/common/TLSDomains.vue?5550","webpack://traefik-0.1.0/./edit/common/TLSConfiguration.vue?1df6","webpack://traefik-0.1.0/./edit/traefik.io.tlsoption/index.vue?8713","webpack://traefik-0.1.0/./edit/common/TLSDomains.vue?2169","webpack://traefik-0.1.0/./components/IngressClassTab.vue?1bf0"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".domains-section{margin-top:20px;padding-top:20px;border-top:1px solid var(--border)}.domains-section h5{margin-bottom:15px;color:var(--text-color)}.remove-btn{margin-top:30px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./TLSConfiguration.vue?vue&type=style&index=0&id=2d308edd&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7e71a8d8\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","<script>\nimport merge from 'lodash/merge';\nimport { allHashSettled } from '@shell/utils/promise';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport { SERVICE, SECRET } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport ResourceManager from '@shell/mixins/resource-manager';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Tabbed from '@shell/components/Tabbed';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport Routes from '../../components/Routes';\nimport TLSConfiguration from '../common/TLSConfiguration';\nimport IngressClassTab from '../../components/IngressClassTab.vue';\n\nexport default {\n  name:         'CRUIngressRoute',\n  inheritAttrs: false,\n  emits:        ['input'],\n  components:   {\n    CruResource,\n    NameNsDescription,\n    Routes,\n    TLSConfiguration,\n    Labels,\n    Tab,\n    Tabbed,\n    LabeledSelect,\n    Banner,\n    Loading,\n    IngressClassTab\n  },\n\n  mixins: [CreateEditView, FormValidation, ResourceManager],\n\n  async fetch() {\n    // Configuration pour le ResourceManager\n    const namespace = this.value?.metadata?.namespace || null;\n\n    const secondaryResourceDataConfig = {\n      namespace,\n      data: {\n        [SERVICE]: {\n          applyTo: [\n            { var: 'services', classify: true }\n          ]\n        },\n        [SECRET]: {\n          applyTo: [\n            { var: 'secrets', classify: true }\n          ]\n        },\n        'traefik.io.middleware': {\n          applyTo: [\n            { var: 'middlewares', classify: true }\n          ]\n        },\n        'traefik.io.tlsoption': {\n          applyTo: [\n            { var: 'tlsOptions', classify: true }\n          ]\n        },\n        'traefik.io.tlsstore': {\n          applyTo: [\n            { var: 'tlsStores', classify: true }\n          ]\n        }\n      }\n    };\n\n    // Charger les ressources namespaced avec ResourceManager\n    await this.resourceManagerFetchSecondaryResources(secondaryResourceDataConfig);\n\n    // Charger les ressources non-namespaced séparément\n    const promises = {\n      ingressClasses: this.$store.dispatch('cluster/findAll', { type: 'networking.k8s.io.ingressclass', opt: { force: true } })\n    };\n\n    const hash = await allHashSettled(promises);\n\n    if (hash.ingressClasses?.status === 'fulfilled') {\n      this.ingressClasses = hash.ingressClasses.value || [];\n    }\n  },\n\n  data() {\n    const emptySpec = {\n      entryPoints: ['websecure'],\n      routes: [{\n        match:       '',\n        services:    [{ name: '', port: '', kind: 'Service' }],\n        middlewares: []\n      }]\n    };\n\n    if (this.mode === _CREATE) {\n      this.value['spec'] = merge(this.value.spec, emptySpec);\n    } else {\n      // Ensure existing spec structure for edit mode\n      this.value.spec = this.value.spec || {};\n      this.value.spec.entryPoints = this.value.spec.entryPoints || ['websecure'];\n      this.value.spec.routes = this.value.spec.routes || [];\n      if (this.value.spec.routes.length === 0) {\n        this.value.spec.routes.push({\n          match:       '',\n          services:    [{ name: '', port: '', kind: 'Service' }],\n          middlewares: []\n        });\n      }\n    }\n\n    return {\n      // Ressources chargées par ResourceManager (automatiquement filtrées par namespace)\n      services:       [],\n      secrets:        [],\n      middlewares:    [],\n      tlsOptions:     [],\n      tlsStores:      [],\n\n      // Ressources non-namespaced\n      ingressClasses: [],\n\n      // État du composant\n      errors:         [],\n      routesValid:    false,\n      tlsValid:       true,\n\n      // Liste des chemins gérés par les composants enfants\n      fvReportedValidationPaths: [\n        'spec.routes.match',\n        'spec.routes.services.name',\n        'spec.routes.services.port',\n        'spec.entryPoints'\n      ],\n\n      // FormValidation ruleSets\n      fvFormRuleSets: [\n        // Routes validation - pour toutes les routes\n        {\n          path: 'spec.routes.match',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.routes.match.label'\n        },\n        // Service validation - pour tous les services dans toutes les routes\n        {\n          path: 'spec.routes.services.name',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.routes.service.label'\n        },\n        {\n          path: 'spec.routes.services.port',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.routes.port.label'\n        },\n        // Entry Points validation\n        {\n          path: 'spec.entryPoints',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.entryPoints.label'\n        }\n      ]\n    };\n  },\n\n  computed: {\n    // Computed for tab error indicators\n    tabErrors() {\n      return {\n        entrypoints: !this.entryPointsValid,\n        routes:      !this.routesValid || this.fvGetPathErrors(['spec.routes.match', 'spec.routes.services.name', 'spec.routes.services.port']).length > 0,\n        tls:         !this.tlsValid\n      };\n    },\n\n    entryPointOptions() {\n      return [\n        { label: this.t('traefik.ingressRoute.entryPoints.websecure'), value: 'websecure' }\n      ];\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    entryPointsValid() {\n      // Vérifie que spec.entryPoints est un tableau contenant 'websecure'\n      return Array.isArray(this.value.spec.entryPoints) &&\n             this.value.spec.entryPoints.includes('websecure');\n    },\n\n    // Use the FormValidation mixin for validation\n    validationPassed() {\n      // Validate both through FormValidation and the component validation events\n      return this.fvFormIsValid && this.routesValid && this.tlsValid && this.entryPointsValid;\n    },\n\n    validationErrors() {\n      const errors = [];\n\n      // Include errors from FormValidation\n      return [...this.fvUnreportedValidationErrors, ...errors, ...this.errors];\n    },\n\n    serviceTargets() {\n      return this.services\n        .map(service => ({\n          label: service.metadata.name,\n          value: service.metadata.name,\n          ports: service.spec?.ports || []\n        }));\n    },\n\n    secretTargets() {\n      return this.secrets\n        .filter(secret => secret._type === 'kubernetes.io/tls')\n        .map(secret => ({\n          label: secret.metadata.name,\n          value: secret.metadata.name\n        }));\n    },\n\n    middlewareTargets() {\n      return this.middlewares\n        .map(middleware => ({\n          label: middleware.metadata.name,\n          value: middleware.metadata.name,\n          namespace: middleware.metadata.namespace\n        }));\n    },\n\n    tlsOptionsTargets() {\n      return this.tlsOptions\n        .map(tlsOption => ({\n          label: tlsOption.metadata.name,\n          value: tlsOption.metadata.name\n        }));\n    },\n\n    tlsStoresTargets() {\n      return this.tlsStores\n        .map(tlsStore => ({\n          label: tlsStore.metadata.name,\n          value: tlsStore.metadata.name\n        }));\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  watch: {\n    'value.spec.routes': {\n      handler(routes) {\n        // Surveiller les routes pour mettre à jour les validations si nécessaire\n        this.routesValid = routes && routes.length > 0 && routes.every(route => !!route.match);\n      },\n      deep: true,\n      immediate: true\n    },\n\n    // Watch namespace changes to reload resources\n    async 'value.metadata.namespace'(neu) {\n      if (neu && !this.$fetchState.pending) {\n        // Configuration avec le nouveau namespace\n        const config = {\n          namespace: neu,\n          data: {\n            [SERVICE]: {\n              applyTo: [{ var: 'services', classify: true }]\n            },\n            [SECRET]: {\n              applyTo: [{ var: 'secrets', classify: true }]\n            },\n            'traefik.io.middleware': {\n              applyTo: [{ var: 'middlewares', classify: true }]\n            },\n            'traefik.io.tlsoption': {\n              applyTo: [{ var: 'tlsOptions', classify: true }]\n            },\n            'traefik.io.tlsstore': {\n              applyTo: [{ var: 'tlsStores', classify: true }]\n            }\n          }\n        };\n\n        // Recharger les ressources pour le nouveau namespace\n        await this.resourceManagerFetchSecondaryResources(config);\n      }\n    }\n  },\n\n  methods: {\n\n    willSave() {\n      // IngressClassTab component already manages the ingress class annotation directly\n      // No need for additional processing here\n\n      // Clean up vKey from all nested objects before saving\n      this.value.spec.routes.forEach(route => {\n        delete route.vKey;\n        if (route.services) {\n          route.services.forEach(service => {\n            delete service.vKey;\n            // Ensure service.name and service.port are primitives, not objects\n            if (typeof service.name === 'object') {\n              service.name = service.name?.label || service.name?.value || '';\n            }\n            if (typeof service.port === 'object') {\n              service.port = service.port?.label || service.port?.value || '';\n            }\n          });\n        }\n        if (route.middlewares) {\n          route.middlewares.forEach(middleware => delete middleware.vKey);\n        }\n      });\n\n      // Clean up vKey from TLS domains\n      if (this.value.spec.tls?.domains) {\n        this.value.spec.tls.domains.forEach(domain => delete domain.vKey);\n      }\n\n      // Ne pas nettoyer les routes avec match vide pour permettre à l'API\n      // de générer des erreurs de validation appropriées\n\n      // Traitement TLS configuration\n      // Si tls n'a pas de champs remplis (mais existe),\n      // garder spec.tls comme un objet vide plutôt que de le supprimer\n      if (this.value.spec.tls) {\n        const hasTlsContent = !!(this.value.spec.tls.secretName ||\n                              this.value.spec.tls.certResolver ||\n                              (this.value.spec.tls.options && this.value.spec.tls.options.name) ||\n                              (this.value.spec.tls.store && this.value.spec.tls.store.name) ||\n                              (this.value.spec.tls.domains && this.value.spec.tls.domains.length > 0));\n\n        // Si aucun contenu TLS, s'assurer que c'est un objet vide\n        if (!hasTlsContent) {\n          this.value.spec.tls = {};\n        }\n      } else {\n        // Si tls n'existe pas, créer un objet vide\n        this.value.spec.tls = {};\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"validationPassed\"\n    :errors=\"validationErrors\"\n    @error=\"e => errors = e\"\n    @finish=\"save\"\n  >\n    <div v-if=\"value\">\n      <div>\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n        />\n      </div>\n\n      <Tabbed :side-tabs=\"true\">\n        <!-- Entry Points Tab -->\n        <Tab\n          name=\"entrypoints\"\n          :label=\"t('traefik.ingressRoute.entryPoints.label')\"\n          :weight=\"10\"\n          :error=\"tabErrors.entrypoints\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.ingressRoute.entryPoints.description')\"\n              />\n            </div>\n          </div>\n\n          <div v-if=\"!entryPointsValid\" class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"error\"\n                :label=\"t('traefik.ingressRoute.validation.entryPointsRequired')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <LabeledSelect\n                v-model:value=\"value.spec.entryPoints\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.entryPoints.label')\"\n                :multiple=\"true\"\n                :taggable=\"true\"\n                :options=\"entryPointOptions\"\n                :error=\"!entryPointsValid ? t('traefik.ingressRoute.validation.entryPointsRequired') : null\"\n              />\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Routes Tab -->\n        <Tab\n          name=\"routes\"\n          :label=\"t('traefik.ingressRoute.routes.label')\"\n          :weight=\"9\"\n          :error=\"tabErrors.routes\"\n        >\n          <Loading v-if=\"isLoadingSecondaryResources\" />\n          <Routes\n            v-else\n            :value=\"value\"\n            :mode=\"mode\"\n            :service-targets=\"serviceTargets\"\n            :middleware-targets=\"middlewareTargets\"\n            @validation-changed=\"val => routesValid = val\"\n          />\n        </Tab>\n\n        <!-- TLS Tab -->\n        <Tab\n          name=\"tls\"\n          :label=\"t('traefik.ingressRoute.tls.label')\"\n          :weight=\"8\"\n          :error=\"tabErrors.tls\"\n        >\n          <Loading v-if=\"isLoadingSecondaryResources\" />\n          <TLSConfiguration\n            v-else\n            :value=\"value\"\n            :mode=\"mode\"\n            :secret-targets=\"secretTargets\"\n            :tls-options-targets=\"tlsOptionsTargets\"\n            :tls-stores-targets=\"tlsStoresTargets\"\n            :namespace=\"value.metadata.namespace\"\n            @tls-validation-changed=\"val => tlsValid = val\"\n          />\n        </Tab>\n\n        <!-- IngressClass Tab -->\n        <Tab\n          name=\"ingress-class\"\n          :label=\"t('traefik.ingressRoute.ingressClass.tab')\"\n          :weight=\"7\"\n        >\n          <IngressClassTab\n            :value=\"value\"\n            :mode=\"mode\"\n            :ingress-classes=\"ingressClasses\"\n          />\n        </Tab>\n\n        <!-- Labels & Annotations -->\n        <Tab\n          name=\"labels-and-annotations\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"-1\"\n        >\n          <Labels\n            default-container-class=\"labels-and-annotations-container\"\n            :value=\"value\"\n            :mode=\"mode\"\n            :display-side-by-side=\"false\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n  </CruResource>\n</template>","import { render } from \"./index.vue?vue&type=template&id=ac3ad7d4\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ingress-class-tab .row[data-v-6071656f]{margin-bottom:20px}.ingress-class-tab .row[data-v-6071656f]:last-child{margin-bottom:0}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./TLSDomain.vue?vue&type=style&index=0&id=1daad2c6&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3d05377f\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","<script>\nimport { Banner } from '@components/Banner';\nimport { random32 } from '@shell/utils/string';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Tabbed from '@shell/components/Tabbed';\nimport { removeAt } from '@shell/utils/array';\nimport Route from './Route';\n\nexport default {\n  emits: ['validation-changed'],\n  components: {\n    Banner,\n    Route,\n    Tab,\n    Tabbed\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    serviceTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    middlewareTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    useTabbedHash: {\n      type:    Boolean,\n      default: undefined\n    },\n\n    isTcp: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      routeValidations: {}\n    };\n  },\n\n  beforeUpdate() {\n    // Ensure each route has a unique key for v-for tracking (UI only)\n    for (const route of this.value.spec.routes) {\n      if (!route.vKey) {\n        route['vKey'] = random32(1);\n      }\n    }\n  },\n\n  computed: {\n    isValid() {\n      // Check if there are routes and all routes are valid\n      if (this.value.spec.routes.length === 0) {\n        return false;\n      }\n\n      // Vérifiez si toutes les routes ont été validées\n      const allRoutesValidated = this.value.spec.routes.length === Object.keys(this.routeValidations).length;\n\n      if (!allRoutesValidated) {\n        return false;\n      }\n\n      // Return true only if all routes have validation status and are valid\n      return Object.values(this.routeValidations).every(v => v === true);\n    }\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid);\n      },\n      immediate: true\n    },\n    'value.spec.routes.length'() {\n      // Nettoyer les validations obsolètes\n      const currentRoutesCount = this.value.spec.routes.length;\n      const validationKeys = Object.keys(this.routeValidations);\n\n      // Supprimer les validations pour les routes qui n'existent plus\n      validationKeys.forEach(idx => {\n        const numericIdx = parseInt(idx, 10);\n        if (numericIdx >= currentRoutesCount) {\n          delete this.routeValidations[idx];\n        }\n      });\n\n      this.updateValidationStatus();\n    }\n  },\n\n  methods: {\n    updateValidationStatus() {\n      // S'assurer que toutes les routes ont un statut de validation\n      // afin que isValid puisse être correctement calculé\n      const routesCount = this.value.spec.routes.length;\n\n      for (let i = 0; i < routesCount; i++) {\n        // Si une route n'a pas encore de statut de validation (undefined),\n        // lui donner un statut initial basé sur la route\n        if (this.routeValidations[i] === undefined) {\n          const route = this.value.spec.routes[i];\n          // Logique simplifiée ici, identique à celle de Route.vue\n          const hasMatch = !!route.match;\n          const hasValidServices = route.services?.length > 0 &&\n                               route.services.every(s => !!s.name && !!s.port);\n          this.routeValidations[i] = hasMatch && hasValidServices;\n        }\n      }\n\n      // Emit current validation status\n      this.$emit('validation-changed', this.isValid);\n    },\n\n    routeValidationChanged(isValid, index) {\n      // Store validation status for the route\n      this.routeValidations[index] = isValid;\n    },\n\n    addRoute() {\n      const newRoute = this.isTcp \n        ? {\n            vKey:     random32(1),\n            match:    'HostSNI(`*`)',\n            services: [{ name: '', port: '' }]\n          }\n        : {\n            vKey:        random32(1),\n            match:       '',\n            services:    [{ name: '', port: '', kind: 'Service' }],\n            middlewares: []\n          };\n\n      this.value.spec.routes.push(newRoute);\n\n      // Forcer la mise à jour de la validation pour la nouvelle route\n      // La nouvelle route sera initialement considérée comme non validée\n      // jusqu'à ce que le composant Route émette un événement de validation\n      this.updateValidationStatus();\n    },\n\n    removeRoute(index) {\n      removeAt(this.value.spec.routes, index);\n\n      // Réinitialiser les validations après suppression d'une route\n      const newValidations = {};\n\n      // Réindexer les validations restantes\n      Object.keys(this.routeValidations).forEach(oldIdx => {\n        const numericIdx = parseInt(oldIdx, 10);\n\n        if (numericIdx < index) {\n          // Les routes avant celle supprimée gardent leur index\n          newValidations[numericIdx] = this.routeValidations[numericIdx];\n        } else if (numericIdx > index) {\n          // Les routes après celle supprimée sont décalées de -1\n          newValidations[numericIdx - 1] = this.routeValidations[numericIdx];\n        }\n        // La route à l'index supprimé est ignorée\n      });\n\n      // Mettre à jour les validations\n      this.routeValidations = newValidations;\n\n      // Forcer la mise à jour de la validation\n      this.updateValidationStatus();\n    },\n\n    routeLabel(idx) {\n      return this.t('traefik.ingressRoute.routes.routeLabel', { index: idx + 1 });\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"routes-section\">\n    <div class=\"row mb-40\">\n      <div class=\"col span-12\">\n        <Tabbed\n          :side-tabs=\"true\"\n          :show-tabs-add-remove=\"mode !== 'view'\"\n          :use-hash=\"useTabbedHash\"\n          @addTab=\"addRoute\"\n          @removeTab=\"removeRoute\"\n        >\n          <Tab\n            v-for=\"(route, idx) in value.spec.routes\"\n            :key=\"route.vKey\"\n            :name=\"'route-' + idx\"\n            :label=\"routeLabel(idx)\"\n            :error=\"routeValidations[idx] === false\"\n            :show-header=\"false\"\n            class=\"container-group\"\n          >\n            <Route\n              :value=\"route\"\n              :mode=\"mode\"\n              :index=\"idx\"\n              :service-targets=\"serviceTargets\"\n              :middleware-targets=\"middlewareTargets\"\n              :can-remove=\"value.spec.routes.length > 1\"\n              :is-tcp=\"isTcp\"\n              @remove=\"removeRoute(idx)\"\n              @validation-changed=\"(valid) => routeValidationChanged(valid, idx)\"\n            />\n          </Tab>\n        </Tabbed>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.routes-section {\n  margin-bottom: 20px;\n}\n\n.container-group {\n  padding: 20px;\n}\n</style>","<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport { Banner } from '@components/Banner';\n\nexport default {\n  emits:      ['remove', 'validation-changed'],\n  components: {\n    LabeledInput,\n    LabeledSelect,\n    ArrayListGrouped,\n    Banner\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    index: {\n      type:     Number,\n      required: true\n    },\n\n    serviceTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    middlewareTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    canRemove: {\n      type:    Boolean,\n      default: true\n    },\n\n    isTcp: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {};\n  },\n\n  created() {\n    // Initialize empty arrays if not present\n    if (!this.value.services) {\n      this.value.services = [];\n    }\n    // TCP routes don't have middlewares\n    if (!this.isTcp && !this.value.middlewares) {\n      this.value.middlewares = [];\n    }\n  },\n\n  computed: {\n    routeTitle() {\n      return this.t('traefik.route') + ' ' + (this.index + 1);\n    },\n\n    isValid() {\n      const validMatch = !!this.value.match;\n      const validServices = this.value.services?.length > 0 &&\n                         this.value.services.every(s => !!s.name && !!s.port);\n\n      return validMatch && validServices;\n    },\n\n    matchError() {\n      return !this.value.match ? this.t('validation.required', { key: this.t('traefik.ingressRoute.routes.match.label') }) : '';\n    },\n\n    // Liste des options de middlewares pour le sélecteur\n    middlewareOptions() {\n      return this.middlewareTargets.map(middleware => ({\n        label: middleware.label,\n        value: middleware.value\n      }));\n    },\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid);\n      },\n      immediate: true\n    },\n  },\n\n  methods: {\n    remove() {\n      this.$emit('remove');\n    },\n\n    focus() {\n      this.$refs.match.focus();\n    },\n\n    updateServiceName(service, serviceName) {\n      // Ensure serviceName is always a string (handle both string and {label: \"value\"} objects)\n      const serviceNameValue = typeof serviceName === 'string' ? serviceName : serviceName?.label || serviceName?.value || '';\n      service.name = serviceNameValue;\n\n      // Find the selected service in serviceTargets to auto-fill port\n      const selectedService = this.serviceTargets.find(s => s.value === serviceNameValue);\n      if (selectedService && selectedService.ports && selectedService.ports.length > 0) {\n        const firstPort = selectedService.ports[0];\n        // Auto-select first port (prefer name over port number)\n        service.port = firstPort.name || firstPort.port || '';\n      }\n    },\n\n    updateServicePort(service, portValue) {\n      // Ensure port is always a string or number (handle both string and {label: \"value\"} objects)\n      const portValueClean = typeof portValue === 'string' || typeof portValue === 'number' ? portValue : portValue?.label || portValue?.value || '';\n      service.port = portValueClean;\n    },\n\n    getPortOptions(service) {\n      const selectedService = this.serviceTargets.find(s => s.value === service.name);\n      if (!selectedService || !selectedService.ports) {\n        return [];\n      }\n\n      return selectedService.ports.map(port => ({\n        label: port.name ? `${port.name} (${port.port})` : port.port,\n        value: port.name || port.port\n      }));\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"route-card\">\n    <div class=\"route-header\">\n      <h4>{{ routeTitle }}</h4>\n      <button\n        v-if=\"canRemove\"\n        type=\"button\"\n        class=\"btn role-link\"\n        @click=\"remove\"\n      >\n        {{ t('generic.remove') }}\n      </button>\n    </div>\n\n    <!-- Match Rule -->\n    <div class=\"row mb-15\">\n      <div class=\"col span-12\">\n        <LabeledInput\n          ref=\"match\"\n          v-model:value=\"value.match\"\n          :mode=\"mode\"\n          :label=\"t('traefik.ingressRoute.routes.match.label')\"\n          :placeholder=\"t('traefik.ingressRoute.routes.match.placeholder')\"\n          :tooltip=\"t('traefik.ingressRoute.routes.match.tooltip')\"\n          :required=\"true\"\n          :error=\"matchError\"\n        />\n      </div>\n    </div>\n\n\n    <!-- Services Section -->\n    <div class=\"services-section\">\n      <h5>{{ t('traefik.ingressRoute.routes.service.label') }}</h5>\n\n      <ArrayListGrouped\n        v-model:value=\"value.services\"\n        :mode=\"mode\"\n        :add-label=\"`${t('generic.add')} ${t('traefik.ingressRoute.routes.service.label')}`\"\n        :default-add-value=\"isTcp ? { name: '', port: '' } : { name: '', port: '', kind: 'Service' }\"\n        :initial-empty-row=\"false\"\n        @add=\"() => {}\"\n      >\n        <template #default=\"{ row }\">\n          <div class=\"row mb-10\">\n            <div class=\"col span-6\">\n              <LabeledSelect\n                v-model:value=\"row.value.name\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.routes.service.label')\"\n                :tooltip=\"t('traefik.ingressRoute.routes.service.tooltip')\"\n                :placeholder=\"t('traefik.ingressRoute.routes.service.placeholder')\"\n                :options=\"serviceTargets\"\n                :required=\"true\"\n                :error=\"row.value.name ? '' : t('validation.required', { key: t('traefik.ingressRoute.routes.service.label') })\"\n                @update:model-value=\"updateServiceName(row.value, $event)\"\n              />\n            </div>\n            <div class=\"col span-6\">\n              <LabeledSelect\n                v-model:value=\"row.value.port\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.routes.port.label')\"\n                :placeholder=\"t('traefik.ingressRoute.routes.port.placeholder')\"\n                :tooltip=\"t('traefik.ingressRoute.routes.port.tooltip')\"\n                :options=\"getPortOptions(row.value)\"\n                :required=\"true\"\n                :error=\"row.value.port ? '' : t('validation.required', { key: t('traefik.ingressRoute.routes.port.label') })\"\n                @update:model-value=\"updateServicePort(row.value, $event)\"\n              />\n            </div>\n          </div>\n        </template>\n      </ArrayListGrouped>\n    </div>\n\n    <!-- Middlewares Section -->\n    <div class=\"middleware-section\">\n      <h5>{{ isTcp ? t('traefik.ingressRouteTCP.middleware.label') : t('traefik.ingressRoute.middleware.label') }}</h5>\n\n      <Banner\n        v-if=\"mode !== 'view' && middlewareTargets.length === 0\"\n        color=\"info\"\n        :label=\"isTcp ? t('traefik.ingressRouteTCP.middleware.noMiddlewaresAvailable') : t('traefik.ingressRoute.middleware.noMiddlewaresAvailable')\"\n      />\n\n      <ArrayListGrouped\n        v-if=\"middlewareTargets.length > 0\"\n        v-model:value=\"value.middlewares\"\n        :mode=\"mode\"\n        :add-label=\"`${t('generic.add')} ${isTcp ? t('traefik.ingressRouteTCP.middleware.label') : t('traefik.ingressRoute.middleware.label')}`\"\n        :default-add-value=\"{ name: '', namespace: '' }\"\n        :initial-empty-row=\"false\"\n        @add=\"() => {}\"\n      >\n        <template #default=\"{ row }\">\n          <div class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <LabeledSelect\n                v-model:value=\"row.value.name\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.middleware.name.label')\"\n                :placeholder=\"t('traefik.ingressRoute.middleware.name.placeholder')\"\n                :tooltip=\"t('traefik.ingressRoute.middleware.name.tooltip')\"\n                :options=\"middlewareOptions\"\n                @update:model-value=\"(value) => {\n                  row.value.name = value;\n                  const target = middlewareTargets.find(m => m.value === value);\n                  if (target) {\n                    row.value.namespace = target.namespace;\n                  }\n                }\"\n              />\n            </div>\n          </div>\n        </template>\n      </ArrayListGrouped>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.route-wrapper {\n  margin-bottom: 20px;\n}\n\n.route-card {\n  border: 1px solid var(--border);\n  border-radius: var(--border-radius);\n  padding: 20px;\n  background: var(--box-bg);\n}\n\n.route-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  h4 {\n    margin: 0;\n    color: var(--primary);\n  }\n}\n\n.services-section,\n.middleware-section {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid var(--border);\n\n  h5 {\n    margin-bottom: 15px;\n    color: var(--text-color);\n  }\n}\n\n.service-row {\n  margin-bottom: 15px;\n  padding: 15px;\n  background: var(--accent-btn);\n  border-radius: var(--border-radius);\n}\n\n.remove-btn {\n  margin-top: 30px;\n}\n</style>","import { render } from \"./Route.vue?vue&type=template&id=461fe09f&scoped=true\"\nimport script from \"./Route.vue?vue&type=script&lang=js\"\nexport * from \"./Route.vue?vue&type=script&lang=js\"\n\nimport \"./Route.vue?vue&type=style&index=0&id=461fe09f&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-461fe09f\"]])\n\nexport default __exports__","import { render } from \"./Routes.vue?vue&type=template&id=0158da48&scoped=true\"\nimport script from \"./Routes.vue?vue&type=script&lang=js\"\nexport * from \"./Routes.vue?vue&type=script&lang=js\"\n\nimport \"./Routes.vue?vue&type=style&index=0&id=0158da48&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0158da48\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".routes-section[data-v-0158da48]{margin-bottom:20px}.container-group[data-v-0158da48]{padding:20px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<script>\nimport merge from 'lodash/merge';\nimport { allHashSettled } from '@shell/utils/promise';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport { SERVICE, SECRET } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport ResourceManager from '@shell/mixins/resource-manager';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Tabbed from '@shell/components/Tabbed';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport Routes from '../../components/Routes';\nimport TLSConfiguration from '../common/TLSConfiguration';\nimport IngressClassTab from '../../components/IngressClassTab.vue';\n\nexport default {\n  name:         'CRUIngressRouteTCP',\n  inheritAttrs: false,\n  emits:        ['input'],\n  components:   {\n    CruResource,\n    NameNsDescription,\n    Routes,\n    TLSConfiguration,\n    Labels,\n    Tab,\n    Tabbed,\n    LabeledSelect,\n    LabeledInput,\n    Banner,\n    Loading,\n    IngressClassTab\n  },\n\n  mixins: [CreateEditView, FormValidation, ResourceManager],\n\n  async fetch() {\n    // Configuration pour le ResourceManager\n    const namespace = this.value?.metadata?.namespace || null;\n\n    const secondaryResourceDataConfig = {\n      namespace,\n      data: {\n        [SERVICE]: {\n          applyTo: [\n            { var: 'services', classify: true }\n          ]\n        },\n        [SECRET]: {\n          applyTo: [\n            { var: 'secrets', classify: true }\n          ]\n        },\n        'traefik.io.middlewaretcp': {\n          applyTo: [\n            { var: 'middlewares', classify: true }\n          ]\n        },\n        'traefik.io.tlsoption': {\n          applyTo: [\n            { var: 'tlsOptions', classify: true }\n          ]\n        },\n        'traefik.io.tlsstore': {\n          applyTo: [\n            { var: 'tlsStores', classify: true }\n          ]\n        }\n      }\n    };\n\n    // Charger les ressources namespaced avec ResourceManager\n    await this.resourceManagerFetchSecondaryResources(secondaryResourceDataConfig);\n\n    // Charger les ressources non-namespaced séparément\n    const promises = {\n      ingressClasses: this.$store.dispatch('cluster/findAll', { type: 'networking.k8s.io.ingressclass', opt: { force: true } })\n    };\n\n    const hash = await allHashSettled(promises);\n\n    if (hash.ingressClasses?.status === 'fulfilled') {\n      this.ingressClasses = hash.ingressClasses.value || [];\n    }\n  },\n\n  data() {\n    const emptySpec = {\n      entryPoints: [],\n      routes: [{\n        match:       'HostSNI(`*`)',\n        services:    [{ name: '', port: '', kind: 'Service' }],\n        middlewares: []\n      }]\n    };\n\n    if (this.mode === _CREATE) {\n      this.value['spec'] = merge(this.value.spec, emptySpec);\n    } else {\n      // Ensure existing spec structure for edit mode\n      this.value.spec = this.value.spec || {};\n      this.value.spec.entryPoints = this.value.spec.entryPoints || [];\n      this.value.spec.routes = this.value.spec.routes || [];\n      if (this.value.spec.routes.length === 0) {\n        this.value.spec.routes.push({\n          match:       'HostSNI(`*`)',\n          services:    [{ name: '', port: '', kind: 'Service' }],\n          middlewares: []\n        });\n      }\n    }\n\n    return {\n      // Ressources chargées par ResourceManager\n      services:       [],\n      secrets:        [],\n      middlewaretcps: [],\n      tlsOptions:     [],\n      tlsStores:      [],\n\n      // Ressources non-namespaced\n      ingressClasses: [],\n\n      // État du composant\n      errors:         [],\n      routesValid:    false,\n      tlsValid:       true,\n\n      // Entry points as comma-separated string for UI\n      entryPointsString: (this.value.spec.entryPoints || []).join(', '),\n\n      // FormValidation configuration\n      fvReportedValidationPaths: [\n        'spec.routes.match',\n        'spec.routes.services.name',\n        'spec.routes.services.port',\n        'spec.entryPoints'\n      ],\n\n      fvFormRuleSets: [\n        // Match validation\n        {\n          path: 'spec.routes.match',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.route.match.label'\n        },\n        // Service validation\n        {\n          path: 'spec.routes.services.name',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.route.service.label'\n        },\n        {\n          path: 'spec.routes.services.port',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.route.port.label'\n        },\n        // Entry Points validation\n        {\n          path: 'spec.entryPoints',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.entryPoints.label'\n        }\n      ]\n    };\n  },\n\n  computed: {\n    // Computed for tab error indicators\n    tabErrors() {\n      return {\n        entrypoints: !this.entryPointsValid,\n        routes:      !this.routesValid || this.fvGetPathErrors(['spec.routes.match', 'spec.routes.services.name', 'spec.routes.services.port']).length > 0,\n        tls:         !this.tlsValid\n      };\n    },\n\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    entryPointsValid() {\n      return this.value.spec.entryPoints && this.value.spec.entryPoints.length > 0;\n    },\n\n    // Use the FormValidation mixin for validation\n    validationPassed() {\n      return this.fvFormIsValid && this.routesValid && this.tlsValid && this.entryPointsValid;\n    },\n\n    validationErrors() {\n      const errors = [];\n      return [...this.fvUnreportedValidationErrors, ...errors, ...this.errors];\n    },\n\n    serviceTargets() {\n      return this.services\n        .map(service => ({\n          label: service.metadata.name,\n          value: service.metadata.name,\n          ports: service.spec?.ports || []\n        }));\n    },\n\n    secretTargets() {\n      return this.secrets\n        .filter(secret => secret._type === 'kubernetes.io/tls')\n        .map(secret => ({\n          label: secret.metadata.name,\n          value: secret.metadata.name\n        }));\n    },\n\n    middlewareTcpTargets() {\n      return this.middlewaretcps\n        .map(middleware => ({\n          label: middleware.metadata.name,\n          value: middleware.metadata.name,\n          namespace: middleware.metadata.namespace\n        }));\n    },\n\n    tlsOptionsTargets() {\n      return this.tlsOptions\n        .map(tlsOption => ({\n          label: tlsOption.metadata.name,\n          value: tlsOption.metadata.name\n        }));\n    },\n\n    tlsStoresTargets() {\n      return this.tlsStores\n        .map(tlsStore => ({\n          label: tlsStore.metadata.name,\n          value: tlsStore.metadata.name\n        }));\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  watch: {\n    'value.spec.routes': {\n      handler(routes) {\n        // Watch routes to update validations if necessary\n        this.routesValid = routes && routes.length > 0 && routes.every(route => !!route.match);\n      },\n      deep: true,\n      immediate: true\n    },\n\n    // Watch entryPointsString and sync with array\n    entryPointsString(val) {\n      if (val) {\n        // Split by comma and trim whitespace\n        this.value.spec.entryPoints = val.split(',').map(ep => ep.trim()).filter(ep => ep);\n      } else {\n        this.value.spec.entryPoints = [];\n      }\n    },\n\n    // Watch namespace changes to reload resources\n    async 'value.metadata.namespace'(neu) {\n      if (neu && !this.$fetchState.pending) {\n        const config = {\n          namespace: neu,\n          data: {\n            [SERVICE]: {\n              applyTo: [{ var: 'services', classify: true }]\n            },\n            [SECRET]: {\n              applyTo: [{ var: 'secrets', classify: true }]\n            },\n            'traefik.io.middlewaretcp': {\n              applyTo: [{ var: 'middlewaretcps', classify: true }]\n            },\n            'traefik.io.tlsoption': {\n              applyTo: [{ var: 'tlsOptions', classify: true }]\n            },\n            'traefik.io.tlsstore': {\n              applyTo: [{ var: 'tlsStores', classify: true }]\n            }\n          }\n        };\n\n        await this.resourceManagerFetchSecondaryResources(config);\n      }\n    }\n  },\n\n  methods: {\n    willSave() {\n      // IngressClassTab component already manages the ingress class annotation directly\n\n      // Clean up vKey from all routes\n      this.value.spec.routes.forEach(route => {\n        delete route.vKey;\n        if (route.services) {\n          route.services.forEach(service => {\n            delete service.vKey;\n            // Ensure service.name and service.port are primitives, not objects\n            if (typeof service.name === 'object') {\n              service.name = service.name?.label || service.name?.value || '';\n            }\n            if (typeof service.port === 'object') {\n              service.port = service.port?.label || service.port?.value || '';\n            }\n          });\n        }\n        if (route.middlewares) {\n          route.middlewares.forEach(middleware => delete middleware.vKey);\n        }\n      });\n\n      // Clean up vKey from TLS domains\n      if (this.value.spec.tls?.domains) {\n        this.value.spec.tls.domains.forEach(domain => delete domain.vKey);\n      }\n\n      // Handle TLS configuration\n      if (this.value.spec.tls) {\n        const hasTlsContent = !!(this.value.spec.tls.secretName ||\n                              this.value.spec.tls.certResolver ||\n                              this.value.spec.tls.passthrough ||\n                              (this.value.spec.tls.options && this.value.spec.tls.options.name) ||\n                              (this.value.spec.tls.store && this.value.spec.tls.store.name) ||\n                              (this.value.spec.tls.domains && this.value.spec.tls.domains.length > 0));\n\n        // Si aucun contenu TLS, s'assurer que c'est un objet vide\n        if (!hasTlsContent) {\n          this.value.spec.tls = {};\n        }\n      } else {\n        // Si tls n'existe pas, créer un objet vide\n        this.value.spec.tls = {};\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"validationPassed\"\n    :errors=\"validationErrors\"\n    @error=\"e => errors = e\"\n    @finish=\"save\"\n  >\n    <div v-if=\"value\">\n      <div>\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n        />\n      </div>\n\n      <Tabbed :side-tabs=\"true\">\n        <!-- Entry Points Tab -->\n        <Tab\n          name=\"entrypoints\"\n          :label=\"t('traefik.ingressRouteTCP.entryPoints.label')\"\n          :weight=\"10\"\n          :error=\"tabErrors.entrypoints\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.ingressRouteTCP.entryPoints.description')\"\n              />\n            </div>\n          </div>\n\n          <div v-if=\"!entryPointsValid\" class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"error\"\n                :label=\"t('traefik.ingressRouteTCP.validation.entryPointsRequired')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <LabeledInput\n                v-model:value=\"entryPointsString\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRouteTCP.entryPoints.label')\"\n                :placeholder=\"t('traefik.ingressRouteTCP.entryPoints.placeholder')\"\n                :tooltip=\"t('traefik.ingressRouteTCP.entryPoints.tooltip')\"\n                :error=\"!entryPointsValid ? t('traefik.ingressRouteTCP.validation.entryPointsRequired') : null\"\n              />\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Routes Tab -->\n        <Tab\n          name=\"routes\"\n          :label=\"t('traefik.ingressRouteTCP.route.label')\"\n          :weight=\"9\"\n          :error=\"tabErrors.routes\"\n        >\n          <Loading v-if=\"isLoadingSecondaryResources\" />\n          <Routes\n            v-else\n            :value=\"value\"\n            :mode=\"mode\"\n            :service-targets=\"serviceTargets\"\n            :middleware-targets=\"middlewareTcpTargets\"\n            @validation-changed=\"val => routesValid = val\"\n          />\n        </Tab>\n\n        <!-- TLS Tab -->\n        <Tab\n          name=\"tls\"\n          :label=\"t('traefik.ingressRouteTCP.tls.label')\"\n          :weight=\"8\"\n          :error=\"tabErrors.tls\"\n        >\n          <Loading v-if=\"isLoadingSecondaryResources\" />\n          <TLSConfiguration\n            v-else\n            :value=\"value\"\n            :mode=\"mode\"\n            :secret-targets=\"secretTargets\"\n            :tls-options-targets=\"tlsOptionsTargets\"\n            :tls-stores-targets=\"tlsStoresTargets\"\n            :namespace=\"value.metadata.namespace\"\n            :support-passthrough=\"true\"\n            :is-tcp=\"true\"\n            @tls-validation-changed=\"val => tlsValid = val\"\n          />\n        </Tab>\n\n        <!-- IngressClass Tab -->\n        <Tab\n          name=\"ingress-class\"\n          :label=\"t('traefik.ingressRoute.ingressClass.tab')\"\n          :weight=\"7\"\n        >\n          <IngressClassTab\n            :value=\"value\"\n            :mode=\"mode\"\n            :ingress-classes=\"ingressClasses\"\n          />\n        </Tab>\n\n        <!-- Labels & Annotations -->\n        <Tab\n          name=\"labels-and-annotations\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"-1\"\n        >\n          <Labels\n            default-container-class=\"labels-and-annotations-container\"\n            :value=\"value\"\n            :mode=\"mode\"\n            :display-side-by-side=\"false\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n  </CruResource>\n</template>","import { render } from \"./index.vue?vue&type=template&id=63a53902\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".card-title[data-v-67990633]{display:flex;align-items:center;gap:8px;color:var(--input-label)}.card-title .icon[data-v-67990633]{color:var(--primary);font-size:1.1em}.advanced-options-card[data-v-67990633],.cipher-suites-card[data-v-67990633],.client-auth-card[data-v-67990633],.tls-versions-card[data-v-67990633]{border:1px solid var(--border);border-radius:var(--border-radius)}h5[data-v-67990633]{color:var(--input-label);margin-bottom:10px;font-weight:500}.mt-20[data-v-67990633]{margin-top:20px}.mb-20[data-v-67990633]{margin-bottom:20px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./Route.vue?vue&type=style&index=0&id=461fe09f&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"34a634cf\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".route-wrapper[data-v-461fe09f]{margin-bottom:20px}.route-card[data-v-461fe09f]{border:1px solid var(--border);border-radius:var(--border-radius);padding:20px;background:var(--box-bg)}.route-header[data-v-461fe09f]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px}.route-header h4[data-v-461fe09f]{margin:0;color:var(--primary)}.middleware-section[data-v-461fe09f],.services-section[data-v-461fe09f]{margin-top:20px;padding-top:20px;border-top:1px solid var(--border)}.middleware-section h5[data-v-461fe09f],.services-section h5[data-v-461fe09f]{margin-bottom:15px;color:var(--text-color)}.service-row[data-v-461fe09f]{margin-bottom:15px;padding:15px;background:var(--accent-btn);border-radius:var(--border-radius)}.remove-btn[data-v-461fe09f]{margin-top:30px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<script>\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\n\nexport default {\n  name: 'IngressClassTab',\n  \n  emits: ['update'],\n  \n  components: {\n    LabeledSelect,\n    Banner\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    ingressClasses: {\n      type:    Array,\n      default: () => []\n    }\n  },\n  \n  computed: {\n    // Direct computed property following Rancher patterns\n    currentIngressClass: {\n      get() {\n        return this.value?.metadata?.annotations?.['kubernetes.io/ingress.class'] || '';\n      },\n      set(val) {\n        // Ensure the value object has the required structure (following Rancher pattern)\n        if (!this.value.metadata) {\n          this.value.metadata = {};\n        }\n        \n        if (!this.value.metadata.annotations) {\n          this.value.metadata.annotations = {};\n        }\n        \n        if (val && val !== '') {\n          // Direct assignment following Rancher pattern\n          this.value.metadata.annotations['kubernetes.io/ingress.class'] = val;\n        } else {\n          // Direct delete following Rancher pattern  \n          delete this.value.metadata.annotations['kubernetes.io/ingress.class'];\n        }\n        \n        // Emit update event to notify parent\n        this.$emit('update');\n      }\n    },\n    \n    ingressClassOptions() {\n      const options = this.ingressClasses.map(ingressClass => ({\n        label: ingressClass.metadata.name,\n        value: ingressClass.metadata.name\n      }));\n\n      // Add an option for \"None\" to allow clearing the annotation\n      return [\n        { label: this.t('traefik.ingressRoute.ingressClass.none'), value: '' },\n        ...options\n      ];\n    },\n\n    hasIngressClasses() {\n      return this.ingressClasses && this.ingressClasses.length > 0;\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"ingress-class-tab\">\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <Banner \n          color=\"info\" \n          :label=\"t('traefik.ingressRoute.ingressClass.description')\"\n        />\n      </div>\n    </div>\n\n    <div v-if=\"!hasIngressClasses && mode !== 'view'\" class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <Banner\n          color=\"warning\"\n          :label=\"t('traefik.ingressRoute.ingressClass.noIngressClasses')\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col span-12\">\n        <LabeledSelect\n          v-model:value=\"currentIngressClass\"\n          :mode=\"mode\"\n          :label=\"t('traefik.ingressRoute.ingressClass.label')\"\n          :placeholder=\"t('traefik.ingressRoute.ingressClass.placeholder')\"\n          :tooltip=\"t('traefik.ingressRoute.ingressClass.tooltip')\"\n          :options=\"ingressClassOptions\"\n          :disabled=\"!hasIngressClasses && mode !== 'view'\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.ingress-class-tab {\n  .row {\n    margin-bottom: 20px;\n    \n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n</style>","import { render } from \"./IngressClassTab.vue?vue&type=template&id=6071656f&scoped=true\"\nimport script from \"./IngressClassTab.vue?vue&type=script&lang=js\"\nexport * from \"./IngressClassTab.vue?vue&type=script&lang=js\"\n\nimport \"./IngressClassTab.vue?vue&type=style&index=0&id=6071656f&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6071656f\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remove-btn[data-v-1daad2c6]{margin-top:30px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./Routes.vue?vue&type=style&index=0&id=0158da48&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"00e80903\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","<script>\nimport merge from 'lodash/merge';\nimport { allHashSettled } from '@shell/utils/promise';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport { SECRET } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport ResourceManager from '@shell/mixins/resource-manager';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Tabbed from '@shell/components/Tabbed';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport ArrayList from '@shell/components/form/ArrayList';\nimport ArrayListSelect from '@shell/components/form/ArrayListSelect';\nimport { Card } from '@components/Card';\n\nexport default {\n  name: 'CRUTLSOption',\n  inheritAttrs: false,\n  emits: ['input'],\n  components: {\n    CruResource,\n    NameNsDescription,\n    Labels,\n    Tab,\n    Tabbed,\n    LabeledSelect,\n    Banner,\n    Loading,\n    Checkbox,\n    ArrayList,\n    ArrayListSelect,\n    Card\n  },\n\n  mixins: [CreateEditView, FormValidation, ResourceManager],\n\n  async fetch() {\n    // Configuration pour le ResourceManager\n    const namespace = this.value?.metadata?.namespace || null;\n\n    const secondaryResourceDataConfig = {\n      namespace,\n      data: {\n        [SECRET]: {\n          applyTo: [\n            { var: 'secrets', classify: true }\n          ]\n        }\n      }\n    };\n\n    // Charger les ressources namespaced avec ResourceManager\n    await this.resourceManagerFetchSecondaryResources(secondaryResourceDataConfig);\n  },\n\n  data() {\n    const emptySpec = {\n      minVersion: '',\n      maxVersion: '',\n      cipherSuites: [],\n      clientAuth: {\n        clientAuthType: 'NoClientCert',\n        secretNames: []\n      },\n      alpnProtocols: [],\n      curvePreferences: [],\n      sniStrict: false,\n      disableSessionTickets: false,\n      preferServerCipherSuites: false\n    };\n\n    if (this.mode === _CREATE) {\n      this.value['spec'] = merge(this.value.spec, emptySpec);\n    } else {\n      // Ensure existing spec structure for edit mode - preserve existing values\n      this.value.spec = this.value.spec || {};\n      this.value.spec.cipherSuites = this.value.spec.cipherSuites || [];\n      this.value.spec.alpnProtocols = this.value.spec.alpnProtocols || [];\n      this.value.spec.curvePreferences = this.value.spec.curvePreferences || [];\n\n      // Only initialize clientAuth if it doesn't exist\n      if (!this.value.spec.clientAuth) {\n        this.value.spec.clientAuth = {\n          clientAuthType: 'NoClientCert',\n          secretNames: []\n        };\n      } else {\n        // Ensure secretNames array exists\n        this.value.spec.clientAuth.secretNames = this.value.spec.clientAuth.secretNames || [];\n      }\n    }\n\n    return {\n      // Ressources chargées par ResourceManager\n      secrets: [],\n\n      // État du composant\n      errors: [],\n\n      // Liste des chemins gérés par les composants enfants\n      fvReportedValidationPaths: [\n        'spec.minVersion',\n        'spec.maxVersion',\n        'spec.clientAuth.clientAuthType',\n        'spec.clientAuth.secretNames'\n      ],\n\n      // FormValidation ruleSets\n      fvFormRuleSets: [\n        {\n          path: 'metadata.name',\n          rules: ['required'],\n          translationKey: 'nameNsDescription.name.label'\n        },\n        {\n          path: 'metadata.namespace',\n          rules: ['required'],\n          translationKey: 'nameNsDescription.namespace.label'\n        }\n      ]\n    };\n  },\n\n  computed: {\n    // Computed for tab error indicators\n    tabErrors() {\n      return {\n        tlsVersions: this.fvGetPathErrors(['spec.minVersion', 'spec.maxVersion']).length > 0,\n        cipherSuites: this.fvGetPathErrors(['spec.cipherSuites', 'spec.preferServerCipherSuites']).length > 0,\n        clientAuth: this.fvGetPathErrors(['spec.clientAuth.clientAuthType', 'spec.clientAuth.secretNames']).length > 0,\n        advanced: this.fvGetPathErrors(['spec.sniStrict', 'spec.disableSessionTickets']).length > 0\n      };\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n    validationPassed() {\n      // Validate both through FormValidation and the component validation events\n      return this.fvFormIsValid;\n    },\n\n    validationErrors() {\n      const errors = [];\n\n      // Include errors from FormValidation\n      return [...this.fvUnreportedValidationErrors, ...errors, ...this.errors];\n    },\n\n    secretTargets() {\n      return this.secrets\n        .filter(secret => secret._type === 'kubernetes.io/tls')\n        .map(secret => ({\n          label: secret.metadata.name,\n          value: secret.metadata.name\n        }));\n    },\n\n    requiresClientCerts() {\n      const authType = this.value.spec?.clientAuth?.clientAuthType;\n      return ['RequireAnyClientCert', 'VerifyClientCertIfGiven', 'RequireAndVerifyClientCert'].includes(authType);\n    },\n\n    tlsVersionOptions() {\n      return this.value?.tlsVersions || [\n        { value: 'VersionTLS10', label: 'TLS 1.0' },\n        { value: 'VersionTLS11', label: 'TLS 1.1' },\n        { value: 'VersionTLS12', label: 'TLS 1.2' },\n        { value: 'VersionTLS13', label: 'TLS 1.3' },\n      ];\n    },\n\n    clientAuthTypeOptions() {\n      return this.value?.clientAuthTypes || [\n        {\n          value: 'NoClientCert',\n          label: 'No Client Certificate',\n          description: 'No client certificate required'\n        },\n        {\n          value: 'RequestClientCert',\n          label: 'Request Client Certificate',\n          description: 'Client certificate is requested but not required'\n        },\n        {\n          value: 'RequireAnyClientCert',\n          label: 'Require Any Client Certificate',\n          description: 'Client certificate is required but not validated'\n        },\n        {\n          value: 'VerifyClientCertIfGiven',\n          label: 'Verify Client Certificate If Given',\n          description: 'Client certificate is verified if provided'\n        },\n        {\n          value: 'RequireAndVerifyClientCert',\n          label: 'Require and Verify Client Certificate',\n          description: 'Client certificate is required and validated'\n        }\n      ];\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  watch: {\n    // Watch namespace changes to reload resources\n    async 'value.metadata.namespace'(neu) {\n      if (neu && !this.$fetchState.pending) {\n        const config = {\n          namespace: neu,\n          data: {\n            [SECRET]: {\n              applyTo: [{ var: 'secrets', classify: true }]\n            }\n          }\n        };\n\n        await this.resourceManagerFetchSecondaryResources(config);\n      }\n    }\n  },\n\n  methods: {\n    willSave() {\n      // Nettoyer les valeurs par défaut si elles ne sont pas définies\n      if (!this.value.spec) {\n        this.value.spec = {};\n      }\n\n      // Clean up empty arrays and undefined values\n      const spec = this.value.spec;\n\n      // Remove empty strings for TLS versions (allow them to be undefined)\n      if (spec.minVersion === '') {\n        delete spec.minVersion;\n      }\n      if (spec.maxVersion === '') {\n        delete spec.maxVersion;\n      }\n\n      // Clean up empty arrays\n      if (spec.cipherSuites && spec.cipherSuites.length === 0) {\n        delete spec.cipherSuites;\n      }\n      if (spec.alpnProtocols && spec.alpnProtocols.length === 0) {\n        delete spec.alpnProtocols;\n      }\n      if (spec.curvePreferences && spec.curvePreferences.length === 0) {\n        delete spec.curvePreferences;\n      }\n\n      // Clean up boolean defaults\n      if (spec.sniStrict === false) {\n        delete spec.sniStrict;\n      }\n      if (spec.disableSessionTickets === false) {\n        delete spec.disableSessionTickets;\n      }\n      if (spec.preferServerCipherSuites === false) {\n        delete spec.preferServerCipherSuites;\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"validationPassed\"\n    :errors=\"validationErrors\"\n    @error=\"e => errors = e\"\n    @finish=\"save\"\n  >\n    <div v-if=\"value\">\n      <div>\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n        />\n      </div>\n\n      <Tabbed :side-tabs=\"true\">\n        <!-- TLS Versions Tab -->\n        <Tab\n          name=\"tls-versions\"\n          :label=\"t('traefik.tlsOption.tabs.tlsVersions')\"\n          :weight=\"10\"\n          :error=\"tabErrors.tlsVersions\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.tlsVersions.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"tls-versions-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-lock\" />\n                    {{ t('traefik.tlsOption.tabs.tlsVersions') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <div class=\"row\">\n                    <div class=\"col span-6\">\n                      <LabeledSelect\n                        v-model:value=\"value.spec.minVersion\"\n                        :label=\"t('traefik.tlsOption.minVersion.label')\"\n                        :options=\"tlsVersionOptions\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.minVersion.tooltip')\"\n                        option-key=\"value\"\n                        option-label=\"label\"\n                        :searchable=\"false\"\n                        :clearable=\"true\"\n                        :rules=\"fvGetAndReportPathRules('spec.minVersion')\"\n                      />\n                    </div>\n                    <div class=\"col span-6\">\n                      <LabeledSelect\n                        v-model:value=\"value.spec.maxVersion\"\n                        :label=\"t('traefik.tlsOption.maxVersion.label')\"\n                        :options=\"tlsVersionOptions\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.maxVersion.tooltip')\"\n                        option-key=\"value\"\n                        option-label=\"label\"\n                        :searchable=\"false\"\n                        :clearable=\"true\"\n                        :rules=\"fvGetAndReportPathRules('spec.maxVersion')\"\n                      />\n                    </div>\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Cipher Suites Tab -->\n        <Tab\n          name=\"cipher-suites\"\n          :label=\"t('traefik.tlsOption.tabs.cipherSuites')\"\n          :weight=\"9\"\n          :error=\"tabErrors.cipherSuites\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.cipherSuites.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"cipher-suites-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-shield\" />\n                    {{ t('traefik.tlsOption.cipherSuites.label') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <ArrayList\n                    v-model:value=\"value.spec.cipherSuites\"\n                    :title=\"t('traefik.tlsOption.cipherSuites.label')\"\n                    :mode=\"mode\"\n                    :add-label=\"t('traefik.tlsOption.cipherSuites.add')\"\n                    :placeholder=\"t('traefik.tlsOption.cipherSuites.placeholder')\"\n                    :tooltip=\"t('traefik.tlsOption.cipherSuites.tooltip')\"\n                    :initial-empty-row=\"false\"\n                    default-add-value=\"\"\n                    add-allowed\n                  />\n\n                  <div class=\"mt-20\">\n                    <Checkbox\n                      v-model:value=\"value.spec.preferServerCipherSuites\"\n                      :label=\"t('traefik.tlsOption.preferServerCipherSuites.label')\"\n                      :mode=\"mode\"\n                      :tooltip=\"t('traefik.tlsOption.preferServerCipherSuites.tooltip')\"\n                    />\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Client Authentication Tab -->\n        <Tab\n          name=\"client-auth\"\n          :label=\"t('traefik.tlsOption.tabs.clientAuth')\"\n          :weight=\"8\"\n          :error=\"tabErrors.clientAuth\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.clientAuth.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"client-auth-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-user\" />\n                    {{ t('traefik.tlsOption.clientAuth.label') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <div class=\"row\">\n                    <div class=\"col span-12\">\n                      <LabeledSelect\n                        v-model:value=\"value.spec.clientAuth.clientAuthType\"\n                        :label=\"t('traefik.tlsOption.clientAuth.type.label')\"\n                        :options=\"clientAuthTypeOptions\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.clientAuth.type.tooltip')\"\n                        option-key=\"value\"\n                        option-label=\"label\"\n                        :searchable=\"false\"\n                        :rules=\"fvGetAndReportPathRules('spec.clientAuth.clientAuthType')\"\n                      />\n                    </div>\n                  </div>\n\n                  <div\n                    class=\"row mt-20\"\n                  >\n                    <div class=\"col span-12\">\n                      <ArrayListSelect\n                        v-model:value=\"value.spec.clientAuth.secretNames\"\n                        :options=\"secretTargets\"\n                        :array-list-props=\"{\n                          title: t('traefik.tlsOption.clientAuth.secrets.label'),\n                          addLabel: t('traefik.tlsOption.clientAuth.secrets.add'),\n                          mode: mode\n                        }\"\n                        :select-props=\"{\n                          placeholder: t('traefik.tlsOption.clientAuth.secrets.placeholder'),\n                          searchable: true,\n                          clearable: true\n                        }\"\n                        :loading=\"!secrets || $fetchState.pending\"\n                        :disabled=\"mode === 'view'\"\n                      />\n                    </div>\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Advanced Options Tab -->\n        <Tab\n          name=\"advanced\"\n          :label=\"t('traefik.tlsOption.tabs.advanced')\"\n          :weight=\"7\"\n          :error=\"tabErrors.advanced\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.advanced.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"advanced-options-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-settings\" />\n                    {{ t('traefik.tlsOption.tabs.advanced') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <!-- ALPN Protocols -->\n                  <div class=\"mb-20\">\n                    <h5>{{ t('traefik.tlsOption.alpnProtocols.label') }}</h5>\n                    <ArrayList\n                      v-model:value=\"value.spec.alpnProtocols\"\n                      :title=\"t('traefik.tlsOption.alpnProtocols.label')\"\n                      :mode=\"mode\"\n                      :add-label=\"t('traefik.tlsOption.alpnProtocols.add')\"\n                      :placeholder=\"t('traefik.tlsOption.alpnProtocols.placeholder')\"\n                      :tooltip=\"t('traefik.tlsOption.alpnProtocols.tooltip')\"\n                      :initial-empty-row=\"false\"\n                      default-add-value=\"\"\n                      add-allowed\n                    />\n                  </div>\n\n                  <!-- Curve Preferences -->\n                  <div class=\"mb-20\">\n                    <h5>{{ t('traefik.tlsOption.curvePreferences.label') }}</h5>\n                    <ArrayList\n                      v-model:value=\"value.spec.curvePreferences\"\n                      :title=\"t('traefik.tlsOption.curvePreferences.label')\"\n                      :mode=\"mode\"\n                      :add-label=\"t('traefik.tlsOption.curvePreferences.add')\"\n                      :placeholder=\"t('traefik.tlsOption.curvePreferences.placeholder')\"\n                      :tooltip=\"t('traefik.tlsOption.curvePreferences.tooltip')\"\n                      :initial-empty-row=\"false\"\n                      default-add-value=\"\"\n                      add-allowed\n                    />\n                  </div>\n\n                  <!-- Boolean Options -->\n                  <div class=\"row\">\n                    <div class=\"col span-6\">\n                      <Checkbox\n                        v-model:value=\"value.spec.sniStrict\"\n                        :label=\"t('traefik.tlsOption.sniStrict.label')\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.sniStrict.tooltip')\"\n                      />\n                    </div>\n                    <div class=\"col span-6\">\n                      <Checkbox\n                        v-model:value=\"value.spec.disableSessionTickets\"\n                        :label=\"t('traefik.tlsOption.disableSessionTickets.label')\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.disableSessionTickets.tooltip')\"\n                      />\n                    </div>\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Labels & Annotations Tab -->\n        <Tab\n          name=\"labels\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"0\"\n        >\n          <Labels\n            :value=\"value\"\n            :mode=\"mode\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n  </CruResource>\n</template>\n\n<style lang=\"scss\" scoped>\n.card-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--input-label);\n\n  .icon {\n    color: var(--primary);\n    font-size: 1.1em;\n  }\n}\n\n.tls-versions-card,\n.cipher-suites-card,\n.client-auth-card,\n.advanced-options-card {\n  border: 1px solid var(--border);\n  border-radius: var(--border-radius);\n\n}\n\nh5 {\n  color: var(--input-label);\n  margin-bottom: 10px;\n  font-weight: 500;\n}\n\n.mt-20 {\n  margin-top: 20px;\n}\n\n.mb-20 {\n  margin-bottom: 20px;\n}\n</style>","import { render } from \"./index.vue?vue&type=template&id=67990633&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=67990633&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-67990633\"]])\n\nexport default __exports__","<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { Banner } from '@components/Banner';\nimport TLSDomains from './TLSDomains';\nimport { random32 } from '@shell/utils/string';\nimport { get, set, remove } from '@shell/utils/object';\n\nexport default {\n  emits: ['tls-validation-changed'],\n\n  components: {\n    LabeledInput,\n    LabeledSelect,\n    RadioGroup,\n    Checkbox,\n    Banner,\n    TLSDomains\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    secretTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    tlsOptionsTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    tlsStoresTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    namespace: {\n      type: String,\n      default: 'default'\n    },\n\n    supportPassthrough: {\n      type: Boolean,\n      default: false\n    },\n\n    isTcp: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      tlsMode: false, // État direct pour le mode TLS (true = enabled, false = disabled)\n      passthrough: false // État pour le TLS Passthrough (TCP uniquement)\n    };\n  },\n\n  mounted() {\n    // Always ensure spec.tls exists\n    if (!this.value.spec.tls) {\n      this.value.spec.tls = {};\n    }\n\n    // Ensure domains is always an array\n    if (!Array.isArray(this.value.spec.tls.domains)) {\n      this.value.spec.tls.domains = [];\n    }\n\n    // Initialize passthrough state\n    this.passthrough = !!this.value.spec.tls.passthrough;\n\n    // Initialiser le tlsMode en fonction de l'état actuel\n    this.initTlsMode();\n    this.ensureDomainKeys();\n  },\n\n  computed: {\n    // Évalue si TLS a des champs configurés\n    hasTlsFields() {\n      const tls = this.value.spec.tls;\n      if (!tls) return false;\n\n      return !!(\n        tls.secretName ||\n        tls.certResolver ||\n        tls.passthrough ||\n        (tls.options && tls.options.name) ||\n        (tls.store && tls.store.name) ||\n        (tls.domains && tls.domains.length > 0)\n      );\n    },\n\n    // Validation du formulaire TLS\n    isValid() {\n      // Toujours valide si TLS est désactivé\n      // Si TLS est activé, au moins un champ doit être rempli\n      return !this.tlsMode || this.hasTlsFields;\n    },\n\n    // TLS Secret Name Value Helper\n    tlsSecretValue() {\n      return get(this.value, 'spec.tls.secretName') || '';\n    },\n\n    // TLS Certificate Resolver Value Helper\n    tlsCertResolverValue() {\n      return get(this.value, 'spec.tls.certResolver') || '';\n    },\n\n    // TLS Options Value Helper\n    tlsOptionsValue() {\n      return get(this.value, 'spec.tls.options.name') || '';\n    },\n\n    // TLS Store Value Helper\n    tlsStoreValue() {\n      return get(this.value, 'spec.tls.store.name') || '';\n    },\n\n    // Helper pour l'affichage des sans\n    sansAsString() {\n      return (domain) => {\n        return Array.isArray(domain.sans) ? domain.sans.join(', ') : '';\n      };\n    }\n  },\n\n  methods: {\n    // Initialise l'état tlsMode en fonction des données existantes\n    initTlsMode() {\n      // Si TLS a des champs renseignés, considérer comme activé\n      this.tlsMode = this.hasTlsFields;\n    },\n\n    // Gère le changement de mode TLS (enable/disable)\n    tlsModeChanged(enabled) {\n      if (!enabled) {\n        // Clear all TLS fields but keep the object empty\n        this.value.spec.tls = {};\n      } else {\n        // Ensure TLS object exists with domains array\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        // Ensure domains is always an array\n        if (!Array.isArray(this.value.spec.tls.domains)) {\n          this.value.spec.tls.domains = [];\n        }\n      }\n\n      // Emit validation status\n      this.$emit('tls-validation-changed', this.isValid);\n    },\n\n    // Set TLS Secret Name\n    updateSecretName(val) {\n      if (!this.value.spec.tls) {\n        this.value.spec.tls = {};\n      }\n\n      // Ensure domains is always an array when updating TLS fields\n      if (!Array.isArray(this.value.spec.tls.domains)) {\n        this.value.spec.tls.domains = [];\n      }\n\n      if (val) {\n        set(this.value, 'spec.tls.secretName', val);\n      } else {\n        remove(this.value, 'spec.tls.secretName');\n      }\n    },\n\n    // Set TLS Certificate Resolver\n    updateCertResolver(val) {\n      if (!this.value.spec.tls) {\n        this.value.spec.tls = {};\n      }\n\n      // Ensure domains is always an array when updating TLS fields\n      if (!Array.isArray(this.value.spec.tls.domains)) {\n        this.value.spec.tls.domains = [];\n      }\n\n      if (val) {\n        set(this.value, 'spec.tls.certResolver', val);\n      } else {\n        remove(this.value, 'spec.tls.certResolver');\n      }\n    },\n\n    // Set TLS Options using Rancher utilities\n    ensureOptionsObject(val) {\n      // Ensure domains is always an array when updating TLS fields\n      if (!Array.isArray(this.value.spec.tls?.domains)) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        this.value.spec.tls.domains = [];\n      }\n\n      if (val) {\n        set(this.value, 'spec.tls.options.name', val);\n      } else {\n        remove(this.value, 'spec.tls.options');\n      }\n    },\n\n    // Set TLS Store using Rancher utilities\n    ensureStoreObject(val) {\n      // Ensure domains is always an array when updating TLS fields\n      if (!Array.isArray(this.value.spec.tls?.domains)) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        this.value.spec.tls.domains = [];\n      }\n\n      if (val) {\n        set(this.value, 'spec.tls.store.name', val);\n      } else {\n        remove(this.value, 'spec.tls.store');\n      }\n    },\n\n    ensureDomainKeys() {\n      // Ensure all domains have vKey for UI tracking\n      if (this.value.spec.tls?.domains) {\n        for (const domain of this.value.spec.tls.domains) {\n          if (!domain.vKey) {\n            domain.vKey = random32(1);\n          }\n        }\n      }\n    },\n\n    // Handle TLS Passthrough toggle\n    updatePassthrough(enabled) {\n      if (!this.value.spec.tls) {\n        this.value.spec.tls = {};\n      }\n\n      if (enabled) {\n        this.value.spec.tls.passthrough = true;\n      } else {\n        delete this.value.spec.tls.passthrough;\n      }\n\n      // Emit validation status\n      this.$emit('tls-validation-changed', this.isValid);\n    }\n  },\n\n  updated() {\n    this.ensureDomainKeys();\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('tls-validation-changed', valid);\n      },\n      immediate: true\n    },\n\n    // Si les données TLS changent, réinitialiser l'état tlsMode\n    hasTlsFields: {\n      handler(hasFields) {\n        // Si on a des champs mais que le mode est désactivé, activer le mode\n        if (hasFields && !this.tlsMode) {\n          this.tlsMode = true;\n        }\n      }\n    },\n\n    // Quand tlsMode change, émettre l'événement de validation\n    tlsMode(enabled) {\n      // Si TLS est désactivé, c'est toujours valide\n      // Si TLS est activé, dépend des champs remplis\n      const isValid = !enabled || this.hasTlsFields;\n      this.$emit('tls-validation-changed', isValid);\n    },\n\n    // Watch passthrough changes\n    passthrough(enabled) {\n      this.updatePassthrough(enabled);\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"tls-configuration\">\n    <!-- RadioGroup for enabling/disabling TLS -->\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <RadioGroup\n          v-model:value=\"tlsMode\"\n          name=\"tls-mode\"\n          :options=\"[false, true]\"\n          :labels=\"[t('traefik.ingressRoute.tls.mode.disabled'), t('traefik.ingressRoute.tls.mode.enabled')]\"\n          :mode=\"mode\"\n          @update:value=\"tlsModeChanged\"\n        />\n      </div>\n    </div>\n\n    <Banner\n      v-if=\"!tlsMode && mode !== 'view'\"\n      color=\"info\"\n      :label=\"isTcp ? t('traefik.ingressRouteTCP.tls.notConfigured') : t('traefik.ingressRoute.tls.notConfigured')\"\n    />\n\n    <!-- Validation message if TLS enabled but no fields filled -->\n    <Banner\n      v-if=\"tlsMode && !hasTlsFields && mode !== 'view'\"\n      color=\"warning\"\n      :label=\"t('traefik.ingressRoute.tls.validation.atLeastOne')\"\n    />\n\n    <!-- TLS Configuration - visible when mode is enabled -->\n    <template v-if=\"tlsMode\">\n\n      <div v-if=\"supportPassthrough\" class=\"row mb-20\">\n        <div class=\"col span-12\">\n          <Checkbox\n            v-model:value=\"passthrough\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRouteTCP.tls.passthrough.label')\"\n            :tooltip=\"t('traefik.ingressRouteTCP.tls.passthrough.tooltip')\"\n          />\n        </div>\n      </div>\n\n      <!-- TLS Secret and Options -->\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledSelect\n            :value=\"tlsSecretValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.secretName.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.secretName.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.secretName.tooltip')\"\n            :options=\"secretTargets\"\n            :clearable=\"true\"\n            @update:value=\"updateSecretName\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledSelect\n            :value=\"tlsOptionsValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.options.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.options.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.options.tooltip')\"\n            :options=\"tlsOptionsTargets\"\n            :clearable=\"true\"\n            @update:value=\"ensureOptionsObject\"\n          />\n        </div>\n      </div>\n\n      <!-- Certificate Resolver and Store -->\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            :value=\"tlsCertResolverValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.certResolver.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.certResolver.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.certResolver.tooltip')\"\n            @update:value=\"updateCertResolver\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledSelect\n            :value=\"tlsStoreValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.store.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.store.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.store.tooltip')\"\n            :options=\"tlsStoresTargets\"\n            :clearable=\"true\"\n            @update:value=\"ensureStoreObject\"\n          />\n        </div>\n      </div>\n\n      <!-- Domains Section -->\n      <div class=\"domains-section\">\n        <h5>{{ t('traefik.ingressRoute.tls.domains.label') }}</h5>\n        <TLSDomains\n          :value=\"value\"\n          :mode=\"mode\"\n          :namespace=\"namespace\"\n        />\n      </div>\n\n    </template>\n  </div>\n</template>\n\n<style lang=\"scss\">\n/* Ensure global radio button styles are not scoped out */\n\n.domains-section {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid var(--border);\n\n  h5 {\n    margin-bottom: 15px;\n    color: var(--text-color);\n  }\n}\n\n.remove-btn {\n  margin-top: 30px;\n}\n</style>","<script>\nimport { _EDIT } from '@shell/config/query-params';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport TLSDomain from './TLSDomain';\n\nexport default {\n  emits: ['validation-changed'],\n\n  components: {\n    ArrayListGrouped,\n    TLSDomain\n  },\n\n  props: {\n    value: {\n      type:    Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: _EDIT\n    }\n  },\n\n  data() {\n    return {\n      domainValidations: {},\n      defaultAddValue: {\n        main: '',\n        sans: []\n      }\n    };\n  },\n\n  mounted() {\n    // Ensure tls object exists\n    if (!this.value.spec.tls) {\n      this.value.spec.tls = {};\n    }\n\n    // Ensure domains array exists\n    if (!this.value.spec.tls.domains) {\n      this.value.spec.tls.domains = [];\n    }\n  },\n\n  computed: {\n    isValid() {\n      // If no domains, consider valid (domains are optional)\n      if (!this.value.spec.tls.domains || this.value.spec.tls.domains.length === 0) {\n        return true;\n      }\n\n      // Check if all domains have been validated\n      const allDomainsValidated = this.value.spec.tls.domains.length === Object.keys(this.domainValidations).length;\n\n      if (!allDomainsValidated) {\n        return false;\n      }\n\n      // Return true only if all domains have validation status and are valid\n      return Object.values(this.domainValidations).every(v => v === true);\n    }\n  },\n\n  methods: {\n    domainValidationChanged(isValid, index) {\n      // Store validation status for the domain\n      this.domainValidations[index] = isValid;\n      this.updateValidationStatus();\n    },\n\n    updateValidationStatus() {\n      this.$emit('validation-changed', this.isValid);\n    },\n\n    handleRemove(index) {\n      // Clean up validation state when domain is removed\n      delete this.domainValidations[index];\n      // Re-index validations\n      const newValidations = {};\n      Object.keys(this.domainValidations).forEach(key => {\n        const idx = parseInt(key);\n        if (idx > index) {\n          newValidations[idx - 1] = this.domainValidations[key];\n        } else if (idx < index) {\n          newValidations[idx] = this.domainValidations[key];\n        }\n      });\n      this.domainValidations = newValidations;\n    }\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid);\n      },\n      immediate: true\n    },\n\n    'value.spec.tls.domains.length'() {\n      this.updateValidationStatus();\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <ArrayListGrouped\n      v-model:value=\"value.spec.tls.domains\"\n      :add-label=\"t('traefik.ingressRoute.tls.domains.addDomain')\"\n      :default-add-value=\"defaultAddValue\"\n      :mode=\"mode\"\n      :initial-empty-row=\"false\"\n      @remove=\"handleRemove\"\n    >\n      <template #default=\"props\">\n        <TLSDomain\n          :value=\"props.row.value\"\n          :index=\"props.i\"\n          :mode=\"mode\"\n          @remove=\"props.remove\"\n          @validation-changed=\"(valid, index) => domainValidationChanged(valid, index)\"\n        />\n      </template>\n    </ArrayListGrouped>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n// Use default ArrayListGrouped styling\n</style>","<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\n\nexport default {\n  emits:      ['remove', 'validation-changed'],\n  components: {\n    LabeledInput\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    index: {\n      type:     Number,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    rules: {\n      default: () => [],\n      type:    Array\n    }\n  },\n\n  computed: {\n    sansAsString: {\n      get() {\n        return Array.isArray(this.value.sans) ? this.value.sans.join(', ') : '';\n      },\n      set(val) {\n        this.value.sans = val ? val.split(',').map(s => s.trim()).filter(s => s) : [];\n      }\n    },\n\n    isValid() {\n      // A domain entry is valid if at least main domain is provided\n      return !!this.value.main;\n    }\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid, this.index);\n      },\n      immediate: true\n    }\n  },\n\n  methods: {\n    remove() {\n      this.$emit('remove');\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"domain-row row mb-10\">\n    <div class=\"col span-5\">\n      <LabeledInput\n        v-model:value=\"value.main\"\n        :mode=\"mode\"\n        :label=\"t('traefik.ingressRoute.tls.domains.main.label')\"\n        :placeholder=\"t('traefik.ingressRoute.tls.domains.main.placeholder')\"\n        :rules=\"rules\"\n        :required=\"true\"\n        :error=\"!value.main ? t('validation.required', { key: t('traefik.ingressRoute.tls.domains.main.label') }) : ''\"\n      />\n    </div>\n    <div class=\"col span-5\">\n      <LabeledInput\n        v-model:value=\"sansAsString\"\n        :mode=\"mode\"\n        :label=\"t('traefik.ingressRoute.tls.domains.sans.label')\"\n        :placeholder=\"t('traefik.ingressRoute.tls.domains.sans.placeholder')\"\n        :tooltip=\"t('traefik.ingressRoute.tls.domains.sans.tooltip')\"\n      />\n    </div>\n    <div class=\"col span-2\">\n      <button\n        type=\"button\"\n        class=\"btn role-link remove-btn\"\n        @click=\"remove\"\n      >\n        {{ t('generic.remove') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.remove-btn {\n  margin-top: 30px;\n}\n</style>","import { render } from \"./TLSDomain.vue?vue&type=template&id=1daad2c6&scoped=true\"\nimport script from \"./TLSDomain.vue?vue&type=script&lang=js\"\nexport * from \"./TLSDomain.vue?vue&type=script&lang=js\"\n\nimport \"./TLSDomain.vue?vue&type=style&index=0&id=1daad2c6&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1daad2c6\"]])\n\nexport default __exports__","import { render } from \"./TLSDomains.vue?vue&type=template&id=601e3371&scoped=true\"\nimport script from \"./TLSDomains.vue?vue&type=script&lang=js\"\nexport * from \"./TLSDomains.vue?vue&type=script&lang=js\"\n\nimport \"./TLSDomains.vue?vue&type=style&index=0&id=601e3371&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-601e3371\"]])\n\nexport default __exports__","import { render } from \"./TLSConfiguration.vue?vue&type=template&id=2d308edd\"\nimport script from \"./TLSConfiguration.vue?vue&type=script&lang=js\"\nexport * from \"./TLSConfiguration.vue?vue&type=script&lang=js\"\n\nimport \"./TLSConfiguration.vue?vue&type=style&index=0&id=2d308edd&lang=scss\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./index.vue?vue&type=style&index=0&id=67990633&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5da12ef7\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./TLSDomains.vue?vue&type=style&index=0&id=601e3371&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"77a37289\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./IngressClassTab.vue?vue&type=style&index=0&id=6071656f&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"99e52fa6\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["___CSS_LOADER_EXPORT___","push","module","id","content","__esModule","default","locals","exports","add","class","_createBlock","_component_CruResource","_ctx","doneRoute","mode","resource","value","subtypes","$options","validationPassed","errors","validationErrors","onError","_cache","e","$data","onFinish","save","_createElementBlock","_hoisted_1","_createElementVNode","isView","_component_NameNsDescription","_createVNode","_component_Tabbed","_component_Tab","name","label","t","weight","error","tabErrors","entrypoints","_hoisted_2","_hoisted_3","_component_Banner","color","entryPointsValid","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_component_LabeledSelect","spec","entryPoints","$event","multiple","taggable","options","entryPointOptions","routes","isLoadingSecondaryResources","_component_Loading","key","_component_Routes","serviceTargets","middlewareTargets","onValidationChanged","val","routesValid","tls","_component_TLSConfiguration","secretTargets","tlsOptionsTargets","tlsStoresTargets","namespace","metadata","onTlsValidationChanged","tlsValid","_component_IngressClassTab","ingressClasses","_component_Labels","inheritAttrs","emits","components","CruResource","NameNsDescription","Routes","TLSConfiguration","Labels","Tab","Tabbed","LabeledSelect","Banner","Loading","IngressClassTab","mixins","CreateEditView","FormValidation","ResourceManager","fetch","this","secondaryResourceDataConfig","data","SERVICE","applyTo","var","classify","SECRET","resourceManagerFetchSecondaryResources","promises","$store","dispatch","type","opt","force","hash","allHashSettled","status","emptySpec","match","services","port","kind","middlewares","_CREATE","merge","length","secrets","tlsOptions","tlsStores","fvReportedValidationPaths","fvFormRuleSets","path","rules","translationKey","computed","fvGetPathErrors","_VIEW","Array","isArray","includes","fvFormIsValid","fvUnreportedValidationErrors","map","service","ports","filter","secret","_type","middleware","tlsOption","tlsStore","created","registerBeforeHook","willSave","watch","handler","every","route","deep","immediate","neu","$fetchState","pending","config","methods","forEach","vKey","domains","domain","hasTlsContent","secretName","certResolver","store","__exports__","render","$props","useTabbedHash","onAddTab","addRoute","onRemoveTab","removeRoute","_Fragment","_renderList","idx","routeLabel","routeValidations","_component_Route","index","isTcp","onRemove","valid","routeValidationChanged","_toDisplayString","routeTitle","canRemove","onClick","args","remove","_component_LabeledInput","ref","placeholder","tooltip","required","matchError","_component_ArrayListGrouped","onAdd","_withCtx","row","updateServiceName","_hoisted_8","getPortOptions","updateServicePort","_hoisted_9","_hoisted_10","_hoisted_11","middlewareOptions","target","find","m","LabeledInput","ArrayListGrouped","props","Object","Number","String","Boolean","isValid","validMatch","validServices","s","$emit","focus","$refs","serviceName","serviceNameValue","selectedService","firstPort","portValue","portValueClean","Route","undefined","beforeUpdate","random32","allRoutesValidated","keys","values","v","currentRoutesCount","validationKeys","numericIdx","parseInt","updateValidationStatus","routesCount","i","hasMatch","hasValidServices","newRoute","removeAt","newValidations","oldIdx","entryPointsString","middlewareTcpTargets","middlewaretcps","join","split","ep","trim","passthrough","hasIngressClasses","currentIngressClass","ingressClassOptions","disabled","get","annotations","set","ingressClass","tlsVersions","_component_Card","title","body","minVersion","tlsVersionOptions","searchable","clearable","fvGetAndReportPathRules","maxVersion","cipherSuites","_hoisted_12","_hoisted_13","_hoisted_14","_component_ArrayList","_hoisted_15","_component_Checkbox","preferServerCipherSuites","clientAuth","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","clientAuthType","clientAuthTypeOptions","_hoisted_23","_hoisted_24","_component_ArrayListSelect","secretNames","loading","advanced","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","alpnProtocols","_hoisted_31","curvePreferences","_hoisted_32","_hoisted_33","sniStrict","_hoisted_34","disableSessionTickets","Checkbox","ArrayList","ArrayListSelect","Card","requiresClientCerts","authType","clientAuthTypes","description","_component_RadioGroup","tlsMode","tlsModeChanged","labels","hasTlsFields","supportPassthrough","tlsSecretValue","updateSecretName","tlsOptionsValue","ensureOptionsObject","tlsCertResolverValue","updateCertResolver","tlsStoreValue","ensureStoreObject","_component_TLSDomains","defaultAddValue","handleRemove","_component_TLSDomain","domainValidationChanged","main","sansAsString","sans","TLSDomain","_EDIT","domainValidations","mounted","allDomainsValidated","RadioGroup","TLSDomains","initTlsMode","ensureDomainKeys","enabled","updatePassthrough","updated","hasFields"],"sourceRoot":""}