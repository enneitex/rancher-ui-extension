(("undefined"!==typeof self?self:this)["webpackChunktraefik_0_1_3"]=("undefined"!==typeof self?self:this)["webpackChunktraefik_0_1_3"]||[]).push([[37],{49037:function(e){const t=[{traefik:{description:"Traefik resources manage HTTP, TCP, and UDP routing with advanced load balancing, middleware, and TLS termination capabilities.",entryPoints:{title:"EntryPoints",noEntryPoints:"No entrypoint configured"},route:"Route",configuration:"Configuration",ingressRoute:{description:"IngressRoute defines HTTP routing rules from external traffic to internal services based on host, path, and middleware configurations.",ingressClass:{label:"Ingress Class",tab:"Ingress Class",placeholder:"Select an ingress class",description:"IngressClass specifies which ingress controller will handle this IngressRoute. If not specified, the default ingress controller will be used.",tooltip:"The ingress class to use for this IngressRoute (optional). Controls which ingress controller will handle this resource.",none:"None (use default)",noIngressClasses:"No IngressClass resources found in the cluster. You may need to create an IngressClass first."},entryPoints:{label:"EntryPoints",description:"Network EntryPoints where Traefik listens for incoming traffic",websecure:"websecure (HTTPS - 443)"},routes:{label:"Routes",routeLabel:"Route {index}",match:{label:"Match Rule",placeholder:"e.g. Host(`example.com`) && Path(`/api`)",tooltip:"Traefik matching rules using Go template syntax. Examples: Host(`domain.com`), Path(`/api`), PathPrefix(`/v1`)"},service:{label:"Target Service",placeholder:"Select a service",tooltip:"Kubernetes service that will receive the matched traffic"},port:{label:"Port",placeholder:"e.g. 80 or http",tooltip:"Service port number or named port"}},middleware:{label:"Middleware",noMiddlewaresAvailable:"No middleware available in this namespace",name:{label:"Middleware Name",placeholder:"Select a middleware",tooltip:"Namespace of the middleware resource"}},tls:{label:"TLS Configuration",certificate:{title:"TLS Certificate"},configuration:{title:"TLS Settings"},enabled:"TLS is enabled for this IngressRoute",notConfigured:"TLS is not configured for this IngressRoute. Using default TLS settings.",mode:{enabled:"Enabled",disabled:"Disabled"},validation:{atLeastOne:"When TLS is enabled, at least one field must be configured"},secretName:{label:"TLS Secret Name",placeholder:"e.g. my-tls-secret",tooltip:"Kubernetes secret containing TLS certificate and key"},certResolver:{label:"Certificate Resolver",placeholder:"e.g. letsencrypt",tooltip:"Traefik certificate resolver for automatic TLS certificate generation"},domains:{label:"Domains",addDomain:"Add Domain",main:{label:"Main Domain",placeholder:"e.g. example.com"},sans:{label:"Subject Alternative Names",placeholder:"e.g. www.example.com, api.example.com",tooltip:"Additional domain names for the certificate"}},options:{label:"TLS Options",placeholder:"e.g. default",tooltip:"Reference to TLSOption resource for advanced TLS configuration"},store:{label:"TLS Store",placeholder:"e.g. default",tooltip:"Reference to TLSStore resource for certificate storage"}},validation:{entryPointsRequired:"At least one entry point must be specified"}},ingressRouteTCP:{description:"IngressRouteTCP defines TCP routing rules for non-HTTP traffic like databases, messaging systems, and other TCP services.",entryPoints:{label:"EntryPoints",description:"TCP entryPoints where Traefik listens for incoming TCP traffic",placeholder:"e.g. 31000, 31001",tooltip:"Comma-separated list of TCP entryPoints configured in Traefik. Examples: 31000, 31001"},validation:{entryPointsRequired:"At least one entryPoint must be specified"},route:{label:"TCP Route",match:{label:"Match Rule"},service:{label:"Service"},port:{label:"Port"}},middleware:{label:"MiddlewareTCP",noMiddlewaresAvailable:"No middlewareTCP available in this namespace"},tls:{enabled:"TLS is enabled for this IngressRouteTCP",label:"TLS Configuration",notConfigured:"TLS is not configured for this IngressRouteTCP. Using default TLS settings.",passthrough:{label:"Enable TLS Passthrough",description:"TLS Passthrough is enabled, traffic is forwarded as-is to the backend service without terminating TLS at Traefik.",tooltip:"When enabled, traffic is forwarded as-is to the backend service without terminating TLS at Traefik."}}},middleware:{description:"Middleware components that can transform requests and responses before they reach services.",type:{label:"Middleware Type"},types:{label:"Type",addPrefix:{label:"Add Prefix",description:"Updates the path of a request before forwarding it"},addHeaders:{label:"Add Headers",description:"Adds custom headers to requests"},basicAuth:{label:"Basic Authentication",description:"Restricts access to your services to known users"},buffering:{label:"Buffering",description:"Buffers the request/response"},chain:{label:"Chain",description:"Defines reusable combinations of other pieces of middleware"},circuitBreaker:{label:"Circuit Breaker",description:"Prevents calling unhealthy services"},compress:{label:"Compression",description:"Compresses responses before sending them to the client, using gzip, brotli, or zstd compression"},contentType:{label:"Content Type",description:"Handles Content-Type auto-detection"},digestAuth:{label:"Digest Authentication",description:"Adds Digest Authentication"},errors:{label:"Error Pages",description:"Returns a custom page in lieu of the default, according to configured ranges of HTTP Status codes"},forwardAuth:{label:"Forward Authentication",description:"Delegates the request authentication to a Service"},grpcWeb:{label:"gRPC-Web",description:"gRPC-Web middleware configuration"},headers:{label:"Headers",description:"Manages the requests and responses headers"},inFlightReq:{label:"In Flight Requests",description:"Limits the number of simultaneous connections"},ipAllowList:{label:"IP Allow List",description:"Limits allowed requests based on the client IP"},ipWhiteList:{label:"IP Whitelist",description:"IP Whitelist middleware (deprecated, use ipAllowList)"},passTLSClientCert:{label:"Pass TLS Client Cert",description:"Passes TLS Client Certificate information"},plugin:{label:"Plugin",description:"Plugin middleware configuration"},rateLimit:{label:"Rate Limiting",description:"Ensures that services will receive a fair amount of requests, and allows one to define what fair is"},redirectRegex:{label:"Redirect Regex",description:"Redirects a request using regex matching and replacement"},redirectScheme:{label:"Redirect Scheme",description:"Redirects requests from a scheme/port to another"},replacePath:{label:"Replace Path",description:"Replaces the path of the request URL and store the original path in an X-Replaced-Path header"},replacePathRegex:{label:"Replace Path Regex",description:"Replaces the path of a URL using regex matching and replacement"},retry:{label:"Retry",description:"Reissues requests a given number of times to a backend server if that server does not reply"},stripPrefix:{label:"Strip Prefix",description:"Removes the specified prefixes from the URL path"},stripPrefixRegex:{label:"Strip Prefix Regex",description:"Removes the matching prefixes from the URL path"}},spec:{label:"Configuration"}},tlsOption:{description:"TLS Options define advanced TLS configurations including cipher suites, TLS versions, and client authentication.",configuration:{description:"TLS Options configuration grouped in themed cards for better readability. Each card shows relevant configuration options when available."},tabs:{configuration:"Configuration",tlsVersions:"TLS Versions",cipherSuites:"Cipher Suites",clientAuth:"Client Authentication",advanced:"Advanced Options"},tlsVersions:{description:"Configure the supported TLS versions for secure connections. MinVersion sets the minimum acceptable TLS version, while MaxVersion sets the maximum."},minVersion:{label:"Minimum TLS Version",tooltip:"Sets the minimum TLS version that will be accepted by the server. If not specified, default Traefik settings are used."},maxVersion:{label:"Maximum TLS Version",tooltip:"Sets the maximum TLS version that will be accepted by the server. If not specified, default Traefik settings are used."},cipherSuites:{label:"Cipher Suites",description:"Configure specific cipher suites and server preferences. Cipher suites define the cryptographic algorithms used for TLS connections.",add:"Add Cipher Suite",placeholder:"e.g. TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",tooltip:"List of cipher suites to use. If empty, Go's default cipher suites are used. Each cipher suite must be a valid TLS cipher suite identifier."},preferServerCipherSuites:{label:"Prefer Server Cipher Suites",tooltip:"When enabled, the server's cipher suite preferences are used instead of the client's preferences during TLS handshake."},clientAuth:{label:"Client Authentication",description:"Configure TLS client certificate authentication policies. This defines how the server handles client certificates during the TLS handshake.",type:{label:"Authentication Type",tooltip:"Defines the client authentication type to apply during TLS handshake."},secrets:{label:"Client CA Secret Names",add:"Add Secret",placeholder:"e.g. client-ca-secret",tooltip:"Names of Kubernetes secrets containing certificate details for client authentication. Required when authentication type needs certificate verification."}},advanced:{description:"Advanced TLS configuration options including ALPN protocols, elliptic curve preferences, and session management."},alpnProtocols:{label:"ALPN Protocols",add:"Add Protocol",placeholder:"e.g. http/1.1, h2, h3",tooltip:"List of supported application level protocols for the TLS handshake, in order of preference. More info: https://doc.traefik.io/traefik/v3.5/https/tls/#alpn-protocols"},curvePreferences:{label:"Curve Preferences",add:"Add Curve",placeholder:"e.g. CurveP256, CurveP384",tooltip:"Defines the preferred elliptic curves used during ECDHE handshakes. More info: https://doc.traefik.io/traefik/v3.5/https/tls/#curve-preferences"},sniStrict:{label:"SNI Strict Mode",tooltip:"When enabled, Traefik only allows connections from clients that specify a server_name extension matching the configured domains."},disableSessionTickets:{label:"Disable Session Tickets",tooltip:"Disables TLS session resumption via session tickets. When enabled, prevents the reuse of session tickets for subsequent connections."}},headers:{entryPoints:"EntryPoints",routes:"Routes",match:"Match Rules"},product:{label:"Traefik"}},typeLabel:{"traefik.io.ingressroute":"IngressRoute","traefik.io.ingressroutetcp":"IngressRouteTCP","traefik.io.middleware":"Middleware","traefik.io.tlsoption":"TLSOption"}}];e.exports=t.length<=1?t[0]:t}}]);
//# sourceMappingURL=traefik-0.1.3.umd.min.37.js.map