{"version":3,"file":"traefik-0.1.2.umd.min.edit.js","mappings":"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","sources":["webpack://traefik-0.1.2/./components/IngressClassTab.vue?75d8","webpack://traefik-0.1.2/./edit/common/TLSDomain.vue?c377","webpack://traefik-0.1.2/./edit/common/TLSDomains.vue?1590","webpack://traefik-0.1.2/./components/Routes.vue","webpack://traefik-0.1.2/./components/Route.vue","webpack://traefik-0.1.2/./components/Route.vue?8ed5","webpack://traefik-0.1.2/./components/Routes.vue?9043","webpack://traefik-0.1.2/./components/Routes.vue?ffc3","webpack://traefik-0.1.2/./edit/traefik.io.tlsoption/index.vue?19c0","webpack://traefik-0.1.2/./edit/traefik.io.ingressroutetcp/index.vue","webpack://traefik-0.1.2/./edit/traefik.io.ingressroutetcp/index.vue?fea1","webpack://traefik-0.1.2/./components/Route.vue?63b2","webpack://traefik-0.1.2/./edit/common/TLSConfiguration.vue?6c07","webpack://traefik-0.1.2/./components/Route.vue?0f72","webpack://traefik-0.1.2/./components/IngressClassTab.vue","webpack://traefik-0.1.2/./components/IngressClassTab.vue?fefc","webpack://traefik-0.1.2/./edit/common/TLSDomains.vue?6b45","webpack://traefik-0.1.2/./edit/common/TLSDomain.vue?c5cd","webpack://traefik-0.1.2/./components/Routes.vue?16d2","webpack://traefik-0.1.2/./edit/traefik.io.ingressroute/index.vue","webpack://traefik-0.1.2/./edit/traefik.io.ingressroute/index.vue?3360","webpack://traefik-0.1.2/./edit/common/TLSConfiguration.vue","webpack://traefik-0.1.2/./edit/common/TLSDomains.vue","webpack://traefik-0.1.2/./edit/common/TLSDomain.vue","webpack://traefik-0.1.2/./edit/common/TLSDomain.vue?6a3f","webpack://traefik-0.1.2/./edit/common/TLSDomains.vue?5550","webpack://traefik-0.1.2/./edit/common/TLSConfiguration.vue?1df6","webpack://traefik-0.1.2/./edit/traefik.io.tlsoption/index.vue","webpack://traefik-0.1.2/./edit/traefik.io.tlsoption/index.vue?8d03","webpack://traefik-0.1.2/./edit/common/TLSConfiguration.vue?e322","webpack://traefik-0.1.2/./edit/traefik.io.tlsoption/index.vue?8713","webpack://traefik-0.1.2/./components/IngressClassTab.vue?1bf0"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ingress-class-tab .row[data-v-6071656f]{margin-bottom:20px}.ingress-class-tab .row[data-v-6071656f]:last-child{margin-bottom:0}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./TLSDomain.vue?vue&type=style&index=0&id=1daad2c6&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3d05377f\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<script>\nimport { Banner } from '@components/Banner';\nimport { random32 } from '@shell/utils/string';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Tabbed from '@shell/components/Tabbed';\nimport { removeAt } from '@shell/utils/array';\nimport Route from './Route';\n\nexport default {\n  emits: ['validation-changed'],\n  components: {\n    Banner,\n    Route,\n    Tab,\n    Tabbed\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    serviceTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    middlewareTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    useTabbedHash: {\n      type:    Boolean,\n      default: undefined\n    },\n\n    isTcp: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      routeValidations: {}\n    };\n  },\n\n  beforeUpdate() {\n    // Ensure each route has a unique key for v-for tracking (UI only)\n    for (const route of this.value.spec.routes) {\n      if (!route.vKey) {\n        route['vKey'] = random32(1);\n      }\n    }\n  },\n\n  computed: {\n    isValid() {\n      // Check if there are routes and all routes are valid\n      if (this.value.spec.routes.length === 0) {\n        return false;\n      }\n\n      // Vérifiez si toutes les routes ont été validées\n      const allRoutesValidated = this.value.spec.routes.length === Object.keys(this.routeValidations).length;\n\n      if (!allRoutesValidated) {\n        return false;\n      }\n\n      // Return true only if all routes have validation status and are valid\n      return Object.values(this.routeValidations).every(v => v === true);\n    }\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid);\n      },\n      immediate: true\n    },\n    'value.spec.routes.length'() {\n      // Nettoyer les validations obsolètes\n      const currentRoutesCount = this.value.spec.routes.length;\n      const validationKeys = Object.keys(this.routeValidations);\n\n      // Supprimer les validations pour les routes qui n'existent plus\n      validationKeys.forEach(idx => {\n        const numericIdx = parseInt(idx, 10);\n        if (numericIdx >= currentRoutesCount) {\n          delete this.routeValidations[idx];\n        }\n      });\n\n      this.updateValidationStatus();\n    }\n  },\n\n  methods: {\n    updateValidationStatus() {\n      // S'assurer que toutes les routes ont un statut de validation\n      // afin que isValid puisse être correctement calculé\n      const routesCount = this.value.spec.routes.length;\n\n      for (let i = 0; i < routesCount; i++) {\n        // Si une route n'a pas encore de statut de validation (undefined),\n        // lui donner un statut initial basé sur la route\n        if (this.routeValidations[i] === undefined) {\n          const route = this.value.spec.routes[i];\n          // Logique simplifiée ici, identique à celle de Route.vue\n          const hasMatch = !!route.match;\n          const hasValidServices = route.services?.length > 0 &&\n                               route.services.every(s => !!s.name && !!s.port);\n          this.routeValidations[i] = hasMatch && hasValidServices;\n        }\n      }\n\n      // Emit current validation status\n      this.$emit('validation-changed', this.isValid);\n    },\n\n    routeValidationChanged(isValid, index) {\n      // Store validation status for the route\n      this.routeValidations[index] = isValid;\n    },\n\n    addRoute() {\n      const newRoute = this.isTcp \n        ? {\n            vKey:     random32(1),\n            match:    'HostSNI(`*`)',\n            services: [{ name: '', port: '' }]\n          }\n        : {\n            vKey:        random32(1),\n            match:       '',\n            services:    [{ name: '', port: '', kind: 'Service' }],\n            middlewares: []\n          };\n\n      this.value.spec.routes.push(newRoute);\n\n      // Forcer la mise à jour de la validation pour la nouvelle route\n      // La nouvelle route sera initialement considérée comme non validée\n      // jusqu'à ce que le composant Route émette un événement de validation\n      this.updateValidationStatus();\n    },\n\n    removeRoute(index) {\n      removeAt(this.value.spec.routes, index);\n\n      // Réinitialiser les validations après suppression d'une route\n      const newValidations = {};\n\n      // Réindexer les validations restantes\n      Object.keys(this.routeValidations).forEach(oldIdx => {\n        const numericIdx = parseInt(oldIdx, 10);\n\n        if (numericIdx < index) {\n          // Les routes avant celle supprimée gardent leur index\n          newValidations[numericIdx] = this.routeValidations[numericIdx];\n        } else if (numericIdx > index) {\n          // Les routes après celle supprimée sont décalées de -1\n          newValidations[numericIdx - 1] = this.routeValidations[numericIdx];\n        }\n        // La route à l'index supprimé est ignorée\n      });\n\n      // Mettre à jour les validations\n      this.routeValidations = newValidations;\n\n      // Forcer la mise à jour de la validation\n      this.updateValidationStatus();\n    },\n\n    routeLabel(idx) {\n      return this.t('traefik.ingressRoute.routes.routeLabel', { index: idx + 1 });\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"routes-section\">\n    <div class=\"row mb-40\">\n      <div class=\"col span-12\">\n        <Tabbed\n          :side-tabs=\"true\"\n          :show-tabs-add-remove=\"mode !== 'view'\"\n          :use-hash=\"useTabbedHash\"\n          @addTab=\"addRoute\"\n          @removeTab=\"removeRoute\"\n        >\n          <Tab\n            v-for=\"(route, idx) in value.spec.routes\"\n            :key=\"route.vKey\"\n            :name=\"'route-' + idx\"\n            :label=\"routeLabel(idx)\"\n            :error=\"routeValidations[idx] === false\"\n            :show-header=\"false\"\n            class=\"container-group\"\n          >\n            <Route\n              :value=\"route\"\n              :mode=\"mode\"\n              :index=\"idx\"\n              :service-targets=\"serviceTargets\"\n              :middleware-targets=\"middlewareTargets\"\n              :can-remove=\"value.spec.routes.length > 1\"\n              :is-tcp=\"isTcp\"\n              @remove=\"removeRoute(idx)\"\n              @validation-changed=\"(valid) => routeValidationChanged(valid, idx)\"\n            />\n          </Tab>\n        </Tabbed>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.routes-section {\n  margin-bottom: 20px;\n}\n\n.container-group {\n  padding: 20px;\n}\n</style>","<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport { Banner } from '@components/Banner';\n\nexport default {\n  emits:      ['remove', 'validation-changed'],\n  components: {\n    LabeledInput,\n    LabeledSelect,\n    ArrayListGrouped,\n    Banner\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    index: {\n      type:     Number,\n      required: true\n    },\n\n    serviceTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    middlewareTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    canRemove: {\n      type:    Boolean,\n      default: true\n    },\n\n    isTcp: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {};\n  },\n\n  created() {\n    // Initialize empty arrays if not present\n    if (!this.value.services) {\n      this.value.services = [];\n    }\n    // TCP routes don't have middlewares\n    if (!this.isTcp && !this.value.middlewares) {\n      this.value.middlewares = [];\n    }\n  },\n\n  computed: {\n    routeTitle() {\n      return this.t('traefik.route') + ' ' + (this.index + 1);\n    },\n\n    isValid() {\n      const validMatch = !!this.value.match;\n      const validServices = this.value.services?.length > 0 &&\n                         this.value.services.every(s => !!s.name && !!s.port);\n\n      return validMatch && validServices;\n    },\n\n    matchError() {\n      return !this.value.match ? this.t('validation.required', { key: this.t('traefik.ingressRoute.routes.match.label') }) : '';\n    },\n\n    // Liste des options de middlewares pour le sélecteur\n    middlewareOptions() {\n      return this.middlewareTargets.map(middleware => ({\n        label: middleware.label,\n        value: middleware.value\n      }));\n    },\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid);\n      },\n      immediate: true\n    },\n  },\n\n  methods: {\n    remove() {\n      this.$emit('remove');\n    },\n\n    focus() {\n      this.$refs.match.focus();\n    },\n\n    updateServiceName(service, serviceName) {\n      // Ensure serviceName is always a string (handle both string and {label: \"value\"} objects)\n      const serviceNameValue = typeof serviceName === 'string' ? serviceName : serviceName?.label || serviceName?.value || '';\n      service.name = serviceNameValue;\n\n      // Find the selected service in serviceTargets to auto-fill port\n      const selectedService = this.serviceTargets.find(s => s.value === serviceNameValue);\n      if (selectedService && selectedService.ports && selectedService.ports.length > 0) {\n        const firstPort = selectedService.ports[0];\n        // Auto-select first port (prefer name over port number)\n        service.port = firstPort.name || firstPort.port || '';\n      }\n    },\n\n    updateServicePort(service, portValue) {\n      // Ensure port is always a string or number (handle both string and {label: \"value\"} objects)\n      const portValueClean = typeof portValue === 'string' || typeof portValue === 'number' ? portValue : portValue?.label || portValue?.value || '';\n      service.port = portValueClean;\n    },\n\n    getPortOptions(service) {\n      const selectedService = this.serviceTargets.find(s => s.value === service.name);\n      if (!selectedService || !selectedService.ports) {\n        return [];\n      }\n\n      return selectedService.ports.map(port => ({\n        label: port.name ? `${port.name} (${port.port})` : port.port,\n        value: port.name || port.port\n      }));\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"route-card\">\n    <div class=\"route-header\">\n      <h4>{{ routeTitle }}</h4>\n      <button\n        v-if=\"canRemove\"\n        type=\"button\"\n        class=\"btn role-link\"\n        @click=\"remove\"\n      >\n        {{ t('generic.remove') }}\n      </button>\n    </div>\n\n    <!-- Match Rule -->\n    <div class=\"row mb-15\">\n      <div class=\"col span-12\">\n        <LabeledInput\n          ref=\"match\"\n          v-model:value=\"value.match\"\n          :mode=\"mode\"\n          :label=\"t('traefik.ingressRoute.routes.match.label')\"\n          :placeholder=\"t('traefik.ingressRoute.routes.match.placeholder')\"\n          :tooltip=\"t('traefik.ingressRoute.routes.match.tooltip')\"\n          :required=\"true\"\n          :error=\"matchError\"\n        />\n      </div>\n    </div>\n\n\n    <!-- Services Section -->\n    <div class=\"services-section\">\n      <h5>{{ t('traefik.ingressRoute.routes.service.label') }}</h5>\n\n      <ArrayListGrouped\n        v-model:value=\"value.services\"\n        :mode=\"mode\"\n        :add-label=\"`${t('generic.add')} ${t('traefik.ingressRoute.routes.service.label')}`\"\n        :default-add-value=\"isTcp ? { name: '', port: '' } : { name: '', port: '', kind: 'Service' }\"\n        :initial-empty-row=\"false\"\n        @add=\"() => {}\"\n      >\n        <template #default=\"{ row }\">\n          <div class=\"row mb-10\">\n            <div class=\"col span-6\">\n              <LabeledSelect\n                v-model:value=\"row.value.name\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.routes.service.label')\"\n                :tooltip=\"t('traefik.ingressRoute.routes.service.tooltip')\"\n                :placeholder=\"t('traefik.ingressRoute.routes.service.placeholder')\"\n                :options=\"serviceTargets\"\n                :required=\"true\"\n                :error=\"row.value.name ? '' : t('validation.required', { key: t('traefik.ingressRoute.routes.service.label') })\"\n                @update:model-value=\"updateServiceName(row.value, $event)\"\n              />\n            </div>\n            <div class=\"col span-6\">\n              <LabeledSelect\n                v-model:value=\"row.value.port\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.routes.port.label')\"\n                :placeholder=\"t('traefik.ingressRoute.routes.port.placeholder')\"\n                :tooltip=\"t('traefik.ingressRoute.routes.port.tooltip')\"\n                :options=\"getPortOptions(row.value)\"\n                :required=\"true\"\n                :error=\"row.value.port ? '' : t('validation.required', { key: t('traefik.ingressRoute.routes.port.label') })\"\n                @update:model-value=\"updateServicePort(row.value, $event)\"\n              />\n            </div>\n          </div>\n        </template>\n      </ArrayListGrouped>\n    </div>\n\n    <!-- Middlewares Section -->\n    <div class=\"middleware-section\">\n      <h5>{{ isTcp ? t('traefik.ingressRouteTCP.middleware.label') : t('traefik.ingressRoute.middleware.label') }}</h5>\n\n      <Banner\n        v-if=\"mode !== 'view' && middlewareTargets.length === 0\"\n        color=\"info\"\n        :label=\"isTcp ? t('traefik.ingressRouteTCP.middleware.noMiddlewaresAvailable') : t('traefik.ingressRoute.middleware.noMiddlewaresAvailable')\"\n      />\n\n      <ArrayListGrouped\n        v-if=\"middlewareTargets.length > 0\"\n        v-model:value=\"value.middlewares\"\n        :mode=\"mode\"\n        :add-label=\"`${t('generic.add')} ${isTcp ? t('traefik.ingressRouteTCP.middleware.label') : t('traefik.ingressRoute.middleware.label')}`\"\n        :default-add-value=\"{ name: '', namespace: '' }\"\n        :initial-empty-row=\"false\"\n        @add=\"() => {}\"\n      >\n        <template #default=\"{ row }\">\n          <div class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <LabeledSelect\n                v-model:value=\"row.value.name\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.middleware.name.label')\"\n                :placeholder=\"t('traefik.ingressRoute.middleware.name.placeholder')\"\n                :tooltip=\"t('traefik.ingressRoute.middleware.name.tooltip')\"\n                :options=\"middlewareOptions\"\n                @update:model-value=\"(value) => {\n                  row.value.name = value;\n                  const target = middlewareTargets.find(m => m.value === value);\n                  if (target) {\n                    row.value.namespace = target.namespace;\n                  }\n                }\"\n              />\n            </div>\n          </div>\n        </template>\n      </ArrayListGrouped>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.route-wrapper {\n  margin-bottom: 20px;\n}\n\n.route-card {\n  border: 1px solid var(--border);\n  border-radius: var(--border-radius);\n  padding: 20px;\n  background: var(--box-bg);\n}\n\n.route-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  h4 {\n    margin: 0;\n    color: var(--primary);\n  }\n}\n\n.services-section,\n.middleware-section {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid var(--border);\n\n  h5 {\n    margin-bottom: 15px;\n    color: var(--text-color);\n  }\n}\n\n.service-row {\n  margin-bottom: 15px;\n  padding: 15px;\n  background: var(--accent-btn);\n  border-radius: var(--border-radius);\n}\n\n.remove-btn {\n  margin-top: 30px;\n}\n</style>","import { render } from \"./Route.vue?vue&type=template&id=461fe09f&scoped=true\"\nimport script from \"./Route.vue?vue&type=script&lang=js\"\nexport * from \"./Route.vue?vue&type=script&lang=js\"\n\nimport \"./Route.vue?vue&type=style&index=0&id=461fe09f&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-461fe09f\"]])\n\nexport default __exports__","import { render } from \"./Routes.vue?vue&type=template&id=0158da48&scoped=true\"\nimport script from \"./Routes.vue?vue&type=script&lang=js\"\nexport * from \"./Routes.vue?vue&type=script&lang=js\"\n\nimport \"./Routes.vue?vue&type=style&index=0&id=0158da48&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0158da48\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".routes-section[data-v-0158da48]{margin-bottom:20px}.container-group[data-v-0158da48]{padding:20px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".card-title[data-v-67990633]{display:flex;align-items:center;gap:8px;color:var(--input-label)}.card-title .icon[data-v-67990633]{color:var(--primary);font-size:1.1em}.advanced-options-card[data-v-67990633],.cipher-suites-card[data-v-67990633],.client-auth-card[data-v-67990633],.tls-versions-card[data-v-67990633]{border:1px solid var(--border);border-radius:var(--border-radius)}h5[data-v-67990633]{color:var(--input-label);margin-bottom:10px;font-weight:500}.mt-20[data-v-67990633]{margin-top:20px}.mb-20[data-v-67990633]{margin-bottom:20px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<script>\nimport merge from 'lodash/merge';\nimport { allHashSettled } from '@shell/utils/promise';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport { SERVICE, SECRET } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport ResourceManager from '@shell/mixins/resource-manager';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Tabbed from '@shell/components/Tabbed';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport Routes from '../../components/Routes';\nimport TLSConfiguration from '../common/TLSConfiguration';\nimport IngressClassTab from '../../components/IngressClassTab.vue';\n\nexport default {\n  name:         'CRUIngressRouteTCP',\n  inheritAttrs: false,\n  emits:        ['input'],\n  components:   {\n    CruResource,\n    NameNsDescription,\n    Routes,\n    TLSConfiguration,\n    Labels,\n    Tab,\n    Tabbed,\n    LabeledSelect,\n    LabeledInput,\n    Banner,\n    Loading,\n    IngressClassTab\n  },\n\n  mixins: [CreateEditView, FormValidation, ResourceManager],\n\n  async fetch() {\n    // Configuration pour le ResourceManager\n    const namespace = this.value?.metadata?.namespace || null;\n\n    const secondaryResourceDataConfig = {\n      namespace,\n      data: {\n        [SERVICE]: {\n          applyTo: [\n            { var: 'services', classify: true }\n          ]\n        },\n        [SECRET]: {\n          applyTo: [\n            { var: 'secrets', classify: true }\n          ]\n        },\n        'traefik.io.middlewaretcp': {\n          applyTo: [\n            { var: 'middlewares', classify: true }\n          ]\n        },\n        'traefik.io.tlsoption': {\n          applyTo: [\n            { var: 'tlsOptions', classify: true }\n          ]\n        },\n        'traefik.io.tlsstore': {\n          applyTo: [\n            { var: 'tlsStores', classify: true }\n          ]\n        }\n      }\n    };\n\n    // Charger les ressources namespaced avec ResourceManager\n    await this.resourceManagerFetchSecondaryResources(secondaryResourceDataConfig);\n\n    // Charger les ressources non-namespaced séparément\n    const promises = {\n      ingressClasses: this.$store.dispatch('cluster/findAll', { type: 'networking.k8s.io.ingressclass', opt: { force: true } })\n    };\n\n    const hash = await allHashSettled(promises);\n\n    if (hash.ingressClasses?.status === 'fulfilled') {\n      this.ingressClasses = hash.ingressClasses.value || [];\n    }\n  },\n\n  data() {\n    const emptySpec = {\n      entryPoints: [],\n      routes: [{\n        match:       'HostSNI(`*`)',\n        services:    [{ name: '', port: '', kind: 'Service' }],\n        middlewares: []\n      }]\n    };\n\n    if (this.mode === _CREATE) {\n      this.value['spec'] = merge(this.value.spec, emptySpec);\n    } else {\n      // Ensure existing spec structure for edit mode\n      this.value.spec = this.value.spec || {};\n      this.value.spec.entryPoints = this.value.spec.entryPoints || [];\n      this.value.spec.routes = this.value.spec.routes || [];\n      if (this.value.spec.routes.length === 0) {\n        this.value.spec.routes.push({\n          match:       'HostSNI(`*`)',\n          services:    [{ name: '', port: '', kind: 'Service' }],\n          middlewares: []\n        });\n      }\n    }\n\n    return {\n      // Ressources chargées par ResourceManager\n      services:       [],\n      secrets:        [],\n      middlewaretcps: [],\n      tlsOptions:     [],\n      tlsStores:      [],\n\n      // Ressources non-namespaced\n      ingressClasses: [],\n\n      // État du composant\n      errors:         [],\n      routesValid:    false,\n      tlsValid:       true,\n\n      // Entry points as comma-separated string for UI\n      entryPointsString: (this.value.spec.entryPoints || []).join(', '),\n\n      // FormValidation configuration\n      fvReportedValidationPaths: [\n        'spec.routes.match',\n        'spec.routes.services.name',\n        'spec.routes.services.port',\n        'spec.entryPoints'\n      ],\n\n      fvFormRuleSets: [\n        // Match validation\n        {\n          path: 'spec.routes.match',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.route.match.label'\n        },\n        // Service validation\n        {\n          path: 'spec.routes.services.name',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.route.service.label'\n        },\n        {\n          path: 'spec.routes.services.port',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.route.port.label'\n        },\n        // Entry Points validation\n        {\n          path: 'spec.entryPoints',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRouteTCP.entryPoints.label'\n        }\n      ]\n    };\n  },\n\n  computed: {\n    // Computed for tab error indicators\n    tabErrors() {\n      return {\n        entrypoints: !this.entryPointsValid,\n        routes:      !this.routesValid || this.fvGetPathErrors(['spec.routes.match', 'spec.routes.services.name', 'spec.routes.services.port']).length > 0,\n        tls:         !this.tlsValid\n      };\n    },\n\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    entryPointsValid() {\n      return this.value.spec.entryPoints && this.value.spec.entryPoints.length > 0;\n    },\n\n    // Use the FormValidation mixin for validation\n    validationPassed() {\n      return this.fvFormIsValid && this.routesValid && this.tlsValid && this.entryPointsValid;\n    },\n\n    validationErrors() {\n      const errors = [];\n      return [...this.fvUnreportedValidationErrors, ...errors, ...this.errors];\n    },\n\n    serviceTargets() {\n      return this.services\n        .map(service => ({\n          label: service.metadata.name,\n          value: service.metadata.name,\n          ports: service.spec?.ports || []\n        }));\n    },\n\n    secretTargets() {\n      return this.secrets\n        .filter(secret => secret._type === 'kubernetes.io/tls')\n        .map(secret => ({\n          label: secret.metadata.name,\n          value: secret.metadata.name\n        }));\n    },\n\n    middlewareTcpTargets() {\n      return this.middlewaretcps\n        .map(middleware => ({\n          label: middleware.metadata.name,\n          value: middleware.metadata.name,\n          namespace: middleware.metadata.namespace\n        }));\n    },\n\n    tlsOptionsTargets() {\n      return this.tlsOptions\n        .map(tlsOption => ({\n          label: tlsOption.metadata.name,\n          value: tlsOption.metadata.name\n        }));\n    },\n\n    tlsStoresTargets() {\n      return this.tlsStores\n        .map(tlsStore => ({\n          label: tlsStore.metadata.name,\n          value: tlsStore.metadata.name\n        }));\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  watch: {\n    'value.spec.routes': {\n      handler(routes) {\n        // Watch routes to update validations if necessary\n        this.routesValid = routes && routes.length > 0 && routes.every(route => !!route.match);\n      },\n      deep: true,\n      immediate: true\n    },\n\n    // Watch entryPointsString and sync with array\n    entryPointsString(val) {\n      if (val) {\n        // Split by comma and trim whitespace\n        this.value.spec.entryPoints = val.split(',').map(ep => ep.trim()).filter(ep => ep);\n      } else {\n        this.value.spec.entryPoints = [];\n      }\n    },\n\n    // Watch namespace changes to reload resources\n    async 'value.metadata.namespace'(neu) {\n      if (neu && !this.$fetchState.pending) {\n        const config = {\n          namespace: neu,\n          data: {\n            [SERVICE]: {\n              applyTo: [{ var: 'services', classify: true }]\n            },\n            [SECRET]: {\n              applyTo: [{ var: 'secrets', classify: true }]\n            },\n            'traefik.io.middlewaretcp': {\n              applyTo: [{ var: 'middlewaretcps', classify: true }]\n            },\n            'traefik.io.tlsoption': {\n              applyTo: [{ var: 'tlsOptions', classify: true }]\n            },\n            'traefik.io.tlsstore': {\n              applyTo: [{ var: 'tlsStores', classify: true }]\n            }\n          }\n        };\n\n        await this.resourceManagerFetchSecondaryResources(config);\n      }\n    }\n  },\n\n  methods: {\n    willSave() {\n      // IngressClassTab component already manages the ingress class annotation directly\n\n      // Clean up vKey from all routes\n      this.value.spec.routes.forEach(route => {\n        delete route.vKey;\n        if (route.services) {\n          route.services.forEach(service => {\n            delete service.vKey;\n            // Ensure service.name and service.port are primitives, not objects\n            if (typeof service.name === 'object') {\n              service.name = service.name?.label || service.name?.value || '';\n            }\n            if (typeof service.port === 'object') {\n              service.port = service.port?.label || service.port?.value || '';\n            }\n          });\n        }\n        if (route.middlewares) {\n          route.middlewares.forEach(middleware => delete middleware.vKey);\n        }\n      });\n\n      // Clean up vKey from TLS domains\n      if (this.value.spec.tls?.domains) {\n        this.value.spec.tls.domains.forEach(domain => delete domain.vKey);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"validationPassed\"\n    :errors=\"validationErrors\"\n    @error=\"e => errors = e\"\n    @finish=\"save\"\n  >\n    <div v-if=\"value\">\n      <div>\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n        />\n      </div>\n\n      <Tabbed :side-tabs=\"true\">\n        <!-- Entry Points Tab -->\n        <Tab\n          name=\"entrypoints\"\n          :label=\"t('traefik.ingressRouteTCP.entryPoints.label')\"\n          :weight=\"10\"\n          :error=\"tabErrors.entrypoints\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.ingressRouteTCP.entryPoints.description')\"\n              />\n            </div>\n          </div>\n\n          <div v-if=\"!entryPointsValid\" class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"error\"\n                :label=\"t('traefik.ingressRouteTCP.validation.entryPointsRequired')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <LabeledInput\n                v-model:value=\"entryPointsString\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRouteTCP.entryPoints.label')\"\n                :placeholder=\"t('traefik.ingressRouteTCP.entryPoints.placeholder')\"\n                :tooltip=\"t('traefik.ingressRouteTCP.entryPoints.tooltip')\"\n                :error=\"!entryPointsValid ? t('traefik.ingressRouteTCP.validation.entryPointsRequired') : null\"\n              />\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Routes Tab -->\n        <Tab\n          name=\"routes\"\n          :label=\"t('traefik.ingressRouteTCP.route.label')\"\n          :weight=\"9\"\n          :error=\"tabErrors.routes\"\n        >\n          <Loading v-if=\"isLoadingSecondaryResources\" />\n          <Routes\n            v-else\n            :value=\"value\"\n            :mode=\"mode\"\n            :service-targets=\"serviceTargets\"\n            :middleware-targets=\"middlewareTcpTargets\"\n            @validation-changed=\"val => routesValid = val\"\n          />\n        </Tab>\n\n        <!-- TLS Tab -->\n        <Tab\n          name=\"tls\"\n          :label=\"t('traefik.ingressRouteTCP.tls.label')\"\n          :weight=\"8\"\n          :error=\"tabErrors.tls\"\n        >\n          <Loading v-if=\"isLoadingSecondaryResources\" />\n          <TLSConfiguration\n            v-else\n            :value=\"value\"\n            :mode=\"mode\"\n            :secret-targets=\"secretTargets\"\n            :tls-options-targets=\"tlsOptionsTargets\"\n            :tls-stores-targets=\"tlsStoresTargets\"\n            :namespace=\"value.metadata.namespace\"\n            :support-passthrough=\"true\"\n            :is-tcp=\"true\"\n            @tls-validation-changed=\"val => tlsValid = val\"\n          />\n        </Tab>\n\n        <!-- IngressClass Tab -->\n        <Tab\n          name=\"ingress-class\"\n          :label=\"t('traefik.ingressRoute.ingressClass.tab')\"\n          :weight=\"7\"\n        >\n          <IngressClassTab\n            :value=\"value\"\n            :mode=\"mode\"\n            :ingress-classes=\"ingressClasses\"\n          />\n        </Tab>\n\n        <!-- Labels & Annotations -->\n        <Tab\n          name=\"labels-and-annotations\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"-1\"\n        >\n          <Labels\n            default-container-class=\"labels-and-annotations-container\"\n            :value=\"value\"\n            :mode=\"mode\"\n            :display-side-by-side=\"false\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n  </CruResource>\n</template>","import { render } from \"./index.vue?vue&type=template&id=0110afbe\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./Route.vue?vue&type=style&index=0&id=461fe09f&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"34a634cf\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./TLSConfiguration.vue?vue&type=style&index=0&id=548c5b1d&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f3e47c2c\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".route-wrapper[data-v-461fe09f]{margin-bottom:20px}.route-card[data-v-461fe09f]{border:1px solid var(--border);border-radius:var(--border-radius);padding:20px;background:var(--box-bg)}.route-header[data-v-461fe09f]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px}.route-header h4[data-v-461fe09f]{margin:0;color:var(--primary)}.middleware-section[data-v-461fe09f],.services-section[data-v-461fe09f]{margin-top:20px;padding-top:20px;border-top:1px solid var(--border)}.middleware-section h5[data-v-461fe09f],.services-section h5[data-v-461fe09f]{margin-bottom:15px;color:var(--text-color)}.service-row[data-v-461fe09f]{margin-bottom:15px;padding:15px;background:var(--accent-btn);border-radius:var(--border-radius)}.remove-btn[data-v-461fe09f]{margin-top:30px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<script>\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\n\nexport default {\n  name: 'IngressClassTab',\n  \n  emits: ['update'],\n  \n  components: {\n    LabeledSelect,\n    Banner\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    ingressClasses: {\n      type:    Array,\n      default: () => []\n    }\n  },\n  \n  computed: {\n    // Direct computed property following Rancher patterns\n    currentIngressClass: {\n      get() {\n        return this.value?.metadata?.annotations?.['kubernetes.io/ingress.class'] || '';\n      },\n      set(val) {\n        // Ensure the value object has the required structure (following Rancher pattern)\n        if (!this.value.metadata) {\n          this.value.metadata = {};\n        }\n        \n        if (!this.value.metadata.annotations) {\n          this.value.metadata.annotations = {};\n        }\n        \n        if (val && val !== '') {\n          // Direct assignment following Rancher pattern\n          this.value.metadata.annotations['kubernetes.io/ingress.class'] = val;\n        } else {\n          // Direct delete following Rancher pattern  \n          delete this.value.metadata.annotations['kubernetes.io/ingress.class'];\n        }\n        \n        // Emit update event to notify parent\n        this.$emit('update');\n      }\n    },\n    \n    ingressClassOptions() {\n      const options = this.ingressClasses.map(ingressClass => ({\n        label: ingressClass.metadata.name,\n        value: ingressClass.metadata.name\n      }));\n\n      // Add an option for \"None\" to allow clearing the annotation\n      return [\n        { label: this.t('traefik.ingressRoute.ingressClass.none'), value: '' },\n        ...options\n      ];\n    },\n\n    hasIngressClasses() {\n      return this.ingressClasses && this.ingressClasses.length > 0;\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"ingress-class-tab\">\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <Banner \n          color=\"info\" \n          :label=\"t('traefik.ingressRoute.ingressClass.description')\"\n        />\n      </div>\n    </div>\n\n    <div v-if=\"!hasIngressClasses && mode !== 'view'\" class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <Banner\n          color=\"warning\"\n          :label=\"t('traefik.ingressRoute.ingressClass.noIngressClasses')\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col span-12\">\n        <LabeledSelect\n          v-model:value=\"currentIngressClass\"\n          :mode=\"mode\"\n          :label=\"t('traefik.ingressRoute.ingressClass.label')\"\n          :placeholder=\"t('traefik.ingressRoute.ingressClass.placeholder')\"\n          :tooltip=\"t('traefik.ingressRoute.ingressClass.tooltip')\"\n          :options=\"ingressClassOptions\"\n          :disabled=\"!hasIngressClasses && mode !== 'view'\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.ingress-class-tab {\n  .row {\n    margin-bottom: 20px;\n    \n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n</style>","import { render } from \"./IngressClassTab.vue?vue&type=template&id=6071656f&scoped=true\"\nimport script from \"./IngressClassTab.vue?vue&type=script&lang=js\"\nexport * from \"./IngressClassTab.vue?vue&type=script&lang=js\"\n\nimport \"./IngressClassTab.vue?vue&type=style&index=0&id=6071656f&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6071656f\"]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./TLSDomains.vue?vue&type=style&index=0&id=b92792de&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1e0376ca\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".remove-btn[data-v-1daad2c6]{margin-top:30px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./Routes.vue?vue&type=style&index=0&id=0158da48&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"00e80903\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","<script>\nimport merge from 'lodash/merge';\nimport { allHashSettled } from '@shell/utils/promise';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport { SERVICE, SECRET } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport ResourceManager from '@shell/mixins/resource-manager';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Tabbed from '@shell/components/Tabbed';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport Routes from '../../components/Routes';\nimport TLSConfiguration from '../common/TLSConfiguration';\nimport IngressClassTab from '../../components/IngressClassTab.vue';\n\nexport default {\n  name:         'CRUIngressRoute',\n  inheritAttrs: false,\n  emits:        ['input'],\n  components:   {\n    CruResource,\n    NameNsDescription,\n    Routes,\n    TLSConfiguration,\n    Labels,\n    Tab,\n    Tabbed,\n    LabeledSelect,\n    Banner,\n    Loading,\n    IngressClassTab\n  },\n\n  mixins: [CreateEditView, FormValidation, ResourceManager],\n\n  async fetch() {\n    // Configuration pour le ResourceManager\n    const namespace = this.value?.metadata?.namespace || null;\n\n    const secondaryResourceDataConfig = {\n      namespace,\n      data: {\n        [SERVICE]: {\n          applyTo: [\n            { var: 'services', classify: true }\n          ]\n        },\n        [SECRET]: {\n          applyTo: [\n            { var: 'secrets', classify: true }\n          ]\n        },\n        'traefik.io.middleware': {\n          applyTo: [\n            { var: 'middlewares', classify: true }\n          ]\n        },\n        'traefik.io.tlsoption': {\n          applyTo: [\n            { var: 'tlsOptions', classify: true }\n          ]\n        },\n        'traefik.io.tlsstore': {\n          applyTo: [\n            { var: 'tlsStores', classify: true }\n          ]\n        }\n      }\n    };\n\n    // Charger les ressources namespaced avec ResourceManager\n    await this.resourceManagerFetchSecondaryResources(secondaryResourceDataConfig);\n\n    // Charger les ressources non-namespaced séparément\n    const promises = {\n      ingressClasses: this.$store.dispatch('cluster/findAll', { type: 'networking.k8s.io.ingressclass', opt: { force: true } })\n    };\n\n    const hash = await allHashSettled(promises);\n\n    if (hash.ingressClasses?.status === 'fulfilled') {\n      this.ingressClasses = hash.ingressClasses.value || [];\n    }\n  },\n\n  data() {\n    const emptySpec = {\n      entryPoints: ['websecure'],\n      routes: [{\n        match:       '',\n        services:    [{ name: '', port: '', kind: 'Service' }],\n        middlewares: []\n      }]\n    };\n\n    if (this.mode === _CREATE) {\n      this.value['spec'] = merge(this.value.spec, emptySpec);\n    } else {\n      // Ensure existing spec structure for edit mode\n      this.value.spec = this.value.spec || {};\n      this.value.spec.entryPoints = this.value.spec.entryPoints || ['websecure'];\n      this.value.spec.routes = this.value.spec.routes || [];\n      if (this.value.spec.routes.length === 0) {\n        this.value.spec.routes.push({\n          match:       '',\n          services:    [{ name: '', port: '', kind: 'Service' }],\n          middlewares: []\n        });\n      }\n    }\n\n    return {\n      // Ressources chargées par ResourceManager (automatiquement filtrées par namespace)\n      services:       [],\n      secrets:        [],\n      middlewares:    [],\n      tlsOptions:     [],\n      tlsStores:      [],\n\n      // Ressources non-namespaced\n      ingressClasses: [],\n\n      // État du composant\n      errors:         [],\n      routesValid:    false,\n      tlsValid:       true,\n\n      // Liste des chemins gérés par les composants enfants\n      fvReportedValidationPaths: [\n        'spec.routes.match',\n        'spec.routes.services.name',\n        'spec.routes.services.port',\n        'spec.entryPoints'\n      ],\n\n      // FormValidation ruleSets\n      fvFormRuleSets: [\n        // Routes validation - pour toutes les routes\n        {\n          path: 'spec.routes.match',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.routes.match.label'\n        },\n        // Service validation - pour tous les services dans toutes les routes\n        {\n          path: 'spec.routes.services.name',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.routes.service.label'\n        },\n        {\n          path: 'spec.routes.services.port',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.routes.port.label'\n        },\n        // Entry Points validation\n        {\n          path: 'spec.entryPoints',\n          rules: ['required'],\n          translationKey: 'traefik.ingressRoute.entryPoints.label'\n        }\n      ]\n    };\n  },\n\n  computed: {\n    // Computed for tab error indicators\n    tabErrors() {\n      return {\n        entrypoints: !this.entryPointsValid,\n        routes:      !this.routesValid || this.fvGetPathErrors(['spec.routes.match', 'spec.routes.services.name', 'spec.routes.services.port']).length > 0,\n        tls:         !this.tlsValid\n      };\n    },\n\n    entryPointOptions() {\n      return [\n        { label: this.t('traefik.ingressRoute.entryPoints.websecure'), value: 'websecure' }\n      ];\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    entryPointsValid() {\n      // Vérifie que spec.entryPoints est un tableau contenant 'websecure'\n      return Array.isArray(this.value.spec.entryPoints) &&\n             this.value.spec.entryPoints.includes('websecure');\n    },\n\n    // Use the FormValidation mixin for validation\n    validationPassed() {\n      // Validate both through FormValidation and the component validation events\n      return this.fvFormIsValid && this.routesValid && this.tlsValid && this.entryPointsValid;\n    },\n\n    validationErrors() {\n      const errors = [];\n\n      // Include errors from FormValidation\n      return [...this.fvUnreportedValidationErrors, ...errors, ...this.errors];\n    },\n\n    serviceTargets() {\n      return this.services\n        .map(service => ({\n          label: service.metadata.name,\n          value: service.metadata.name,\n          ports: service.spec?.ports || []\n        }));\n    },\n\n    secretTargets() {\n      return this.secrets\n        .filter(secret => secret._type === 'kubernetes.io/tls')\n        .map(secret => ({\n          label: secret.metadata.name,\n          value: secret.metadata.name\n        }));\n    },\n\n    middlewareTargets() {\n      return this.middlewares\n        .map(middleware => ({\n          label: middleware.metadata.name,\n          value: middleware.metadata.name,\n          namespace: middleware.metadata.namespace\n        }));\n    },\n\n    tlsOptionsTargets() {\n      return this.tlsOptions\n        .map(tlsOption => ({\n          label: tlsOption.metadata.name,\n          value: tlsOption.metadata.name\n        }));\n    },\n\n    tlsStoresTargets() {\n      return this.tlsStores\n        .map(tlsStore => ({\n          label: tlsStore.metadata.name,\n          value: tlsStore.metadata.name\n        }));\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  watch: {\n    'value.spec.routes': {\n      handler(routes) {\n        // Surveiller les routes pour mettre à jour les validations si nécessaire\n        this.routesValid = routes && routes.length > 0 && routes.every(route => !!route.match);\n      },\n      deep: true,\n      immediate: true\n    },\n\n    // Watch namespace changes to reload resources\n    async 'value.metadata.namespace'(neu) {\n      if (neu && !this.$fetchState.pending) {\n        // Configuration avec le nouveau namespace\n        const config = {\n          namespace: neu,\n          data: {\n            [SERVICE]: {\n              applyTo: [{ var: 'services', classify: true }]\n            },\n            [SECRET]: {\n              applyTo: [{ var: 'secrets', classify: true }]\n            },\n            'traefik.io.middleware': {\n              applyTo: [{ var: 'middlewares', classify: true }]\n            },\n            'traefik.io.tlsoption': {\n              applyTo: [{ var: 'tlsOptions', classify: true }]\n            },\n            'traefik.io.tlsstore': {\n              applyTo: [{ var: 'tlsStores', classify: true }]\n            }\n          }\n        };\n\n        // Recharger les ressources pour le nouveau namespace\n        await this.resourceManagerFetchSecondaryResources(config);\n      }\n    }\n  },\n\n  methods: {\n\n    willSave() {\n      // IngressClassTab component already manages the ingress class annotation directly\n      // No need for additional processing here\n\n      // Clean up vKey from all nested objects before saving\n      this.value.spec.routes.forEach(route => {\n        delete route.vKey;\n        if (route.services) {\n          route.services.forEach(service => {\n            delete service.vKey;\n            // Ensure service.name and service.port are primitives, not objects\n            if (typeof service.name === 'object') {\n              service.name = service.name?.label || service.name?.value || '';\n            }\n            if (typeof service.port === 'object') {\n              service.port = service.port?.label || service.port?.value || '';\n            }\n          });\n        }\n        if (route.middlewares) {\n          route.middlewares.forEach(middleware => delete middleware.vKey);\n        }\n      });\n\n      // Clean up vKey from TLS domains\n      if (this.value.spec.tls?.domains) {\n        this.value.spec.tls.domains.forEach(domain => delete domain.vKey);\n      }\n\n      // Ne pas nettoyer les routes avec match vide pour permettre à l'API\n      // de générer des erreurs de validation appropriées\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"validationPassed\"\n    :errors=\"validationErrors\"\n    @error=\"e => errors = e\"\n    @finish=\"save\"\n  >\n    <div v-if=\"value\">\n      <div>\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n        />\n      </div>\n\n      <Tabbed :side-tabs=\"true\">\n        <!-- Entry Points Tab -->\n        <Tab\n          name=\"entrypoints\"\n          :label=\"t('traefik.ingressRoute.entryPoints.label')\"\n          :weight=\"10\"\n          :error=\"tabErrors.entrypoints\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.ingressRoute.entryPoints.description')\"\n              />\n            </div>\n          </div>\n\n          <div v-if=\"!entryPointsValid\" class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"error\"\n                :label=\"t('traefik.ingressRoute.validation.entryPointsRequired')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <LabeledSelect\n                v-model:value=\"value.spec.entryPoints\"\n                :mode=\"mode\"\n                :label=\"t('traefik.ingressRoute.entryPoints.label')\"\n                :multiple=\"true\"\n                :taggable=\"true\"\n                :options=\"entryPointOptions\"\n                :error=\"!entryPointsValid ? t('traefik.ingressRoute.validation.entryPointsRequired') : null\"\n              />\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Routes Tab -->\n        <Tab\n          name=\"routes\"\n          :label=\"t('traefik.ingressRoute.routes.label')\"\n          :weight=\"9\"\n          :error=\"tabErrors.routes\"\n        >\n          <Loading v-if=\"isLoadingSecondaryResources\" />\n          <Routes\n            v-else\n            :value=\"value\"\n            :mode=\"mode\"\n            :service-targets=\"serviceTargets\"\n            :middleware-targets=\"middlewareTargets\"\n            @validation-changed=\"val => routesValid = val\"\n          />\n        </Tab>\n\n        <!-- TLS Tab -->\n        <Tab\n          name=\"tls\"\n          :label=\"t('traefik.ingressRoute.tls.label')\"\n          :weight=\"8\"\n          :error=\"tabErrors.tls\"\n        >\n          <Loading v-if=\"isLoadingSecondaryResources\" />\n          <TLSConfiguration\n            v-else\n            :value=\"value\"\n            :mode=\"mode\"\n            :secret-targets=\"secretTargets\"\n            :tls-options-targets=\"tlsOptionsTargets\"\n            :tls-stores-targets=\"tlsStoresTargets\"\n            :namespace=\"value.metadata.namespace\"\n            @tls-validation-changed=\"val => tlsValid = val\"\n          />\n        </Tab>\n\n        <!-- IngressClass Tab -->\n        <Tab\n          name=\"ingress-class\"\n          :label=\"t('traefik.ingressRoute.ingressClass.tab')\"\n          :weight=\"7\"\n        >\n          <IngressClassTab\n            :value=\"value\"\n            :mode=\"mode\"\n            :ingress-classes=\"ingressClasses\"\n          />\n        </Tab>\n\n        <!-- Labels & Annotations -->\n        <Tab\n          name=\"labels-and-annotations\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"-1\"\n        >\n          <Labels\n            default-container-class=\"labels-and-annotations-container\"\n            :value=\"value\"\n            :mode=\"mode\"\n            :display-side-by-side=\"false\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n  </CruResource>\n</template>","import { render } from \"./index.vue?vue&type=template&id=b3e24784\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { Banner } from '@components/Banner';\nimport TLSDomains from './TLSDomains';\nimport { random32 } from '@shell/utils/string';\nimport { get, set, remove } from '@shell/utils/object';\n\nexport default {\n  emits: ['tls-validation-changed'],\n\n  components: {\n    LabeledInput,\n    LabeledSelect,\n    RadioGroup,\n    Checkbox,\n    Banner,\n    TLSDomains\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    secretTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    tlsOptionsTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    tlsStoresTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    namespace: {\n      type: String,\n      default: 'default'\n    },\n\n    supportPassthrough: {\n      type: Boolean,\n      default: false\n    },\n\n    isTcp: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      tlsMode: false, // État direct pour le mode TLS (true = enabled, false = disabled)\n      passthrough: false // État pour le TLS Passthrough (TCP uniquement)\n    };\n  },\n\n  mounted() {\n    // Initialize passthrough state\n    this.passthrough = !!this.value.spec.tls?.passthrough;\n\n    // Initialiser le tlsMode en fonction de l'état actuel\n    this.initTlsMode();\n    this.ensureDomainKeys();\n  },\n\n  computed: {\n    // Évalue si TLS a des champs configurés\n    hasTlsFields() {\n      const tls = this.value.spec.tls;\n      if (!tls) return false;\n\n      return !!(\n        tls.secretName ||\n        tls.certResolver ||\n        tls.passthrough ||\n        (tls.options && tls.options.name) ||\n        (tls.store && tls.store.name) ||\n        (tls.domains && tls.domains.length > 0)\n      );\n    },\n\n    // Validation du formulaire TLS\n    isValid() {\n      // Toujours valide si TLS est désactivé\n      // Si TLS est activé, au moins un champ doit être rempli\n      return !this.tlsMode || this.hasTlsFields;\n    },\n\n    // TLS Secret Name Value Helper\n    tlsSecretValue() {\n      return get(this.value, 'spec.tls.secretName') || '';\n    },\n\n    // TLS Certificate Resolver Value Helper\n    tlsCertResolverValue() {\n      return get(this.value, 'spec.tls.certResolver') || '';\n    },\n\n    // TLS Options Value Helper\n    tlsOptionsValue() {\n      return get(this.value, 'spec.tls.options.name') || '';\n    },\n\n    // TLS Store Value Helper\n    tlsStoreValue() {\n      return get(this.value, 'spec.tls.store.name') || '';\n    },\n\n    // Helper pour l'affichage des sans\n    sansAsString() {\n      return (domain) => {\n        return Array.isArray(domain.sans) ? domain.sans.join(', ') : '';\n      };\n    }\n  },\n\n  methods: {\n    // Initialise l'état tlsMode en fonction des données existantes\n    initTlsMode() {\n      // Si TLS a des champs renseignés, considérer comme activé\n      this.tlsMode = this.hasTlsFields;\n    },\n\n    // Gère le changement de mode TLS (enable/disable)\n    tlsModeChanged(enabled) {\n      if (!enabled) {\n        // Clear all TLS fields by deleting the object\n        delete this.value.spec.tls;\n      } else {\n        // Ensure TLS object exists when enabling\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n      }\n\n      // Emit validation status\n      this.$emit('tls-validation-changed', this.isValid);\n    },\n\n    // Set TLS Secret Name\n    updateSecretName(val) {\n      if (val) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        set(this.value, 'spec.tls.secretName', val);\n      } else {\n        remove(this.value, 'spec.tls.secretName');\n      }\n    },\n\n    // Set TLS Certificate Resolver\n    updateCertResolver(val) {\n      if (val) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        set(this.value, 'spec.tls.certResolver', val);\n      } else {\n        remove(this.value, 'spec.tls.certResolver');\n      }\n    },\n\n    // Set TLS Options using Rancher utilities\n    ensureOptionsObject(val) {\n      if (val) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        set(this.value, 'spec.tls.options.name', val);\n      } else {\n        remove(this.value, 'spec.tls.options');\n      }\n    },\n\n    // Set TLS Store using Rancher utilities\n    ensureStoreObject(val) {\n      if (val) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        set(this.value, 'spec.tls.store.name', val);\n      } else {\n        remove(this.value, 'spec.tls.store');\n      }\n    },\n\n    ensureDomainKeys() {\n      // Ensure all domains have vKey for UI tracking\n      if (this.value.spec.tls?.domains) {\n        for (const domain of this.value.spec.tls.domains) {\n          if (!domain.vKey) {\n            domain.vKey = random32(1);\n          }\n        }\n      }\n    },\n\n    // Handle TLS Passthrough toggle\n    updatePassthrough(enabled) {\n      if (enabled) {\n        if (!this.value.spec.tls) {\n          this.value.spec.tls = {};\n        }\n        this.value.spec.tls.passthrough = true;\n      } else {\n        if (this.value.spec.tls) {\n          delete this.value.spec.tls.passthrough;\n        }\n      }\n\n      // Emit validation status\n      this.$emit('tls-validation-changed', this.isValid);\n    }\n  },\n\n  updated() {\n    this.ensureDomainKeys();\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('tls-validation-changed', valid);\n      },\n      immediate: true\n    },\n\n    // Si les données TLS changent, réinitialiser l'état tlsMode\n    hasTlsFields: {\n      handler(hasFields) {\n        // Si on a des champs mais que le mode est désactivé, activer le mode\n        if (hasFields && !this.tlsMode) {\n          this.tlsMode = true;\n        }\n      }\n    },\n\n    // Quand tlsMode change, émettre l'événement de validation\n    tlsMode(enabled) {\n      // Si TLS est désactivé, c'est toujours valide\n      // Si TLS est activé, dépend des champs remplis\n      const isValid = !enabled || this.hasTlsFields;\n      this.$emit('tls-validation-changed', isValid);\n    },\n\n    // Watch passthrough changes\n    passthrough(enabled) {\n      this.updatePassthrough(enabled);\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"tls-configuration\">\n    <!-- RadioGroup for enabling/disabling TLS -->\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <RadioGroup\n          v-model:value=\"tlsMode\"\n          name=\"tls-mode\"\n          :options=\"[false, true]\"\n          :labels=\"[t('traefik.ingressRoute.tls.mode.disabled'), t('traefik.ingressRoute.tls.mode.enabled')]\"\n          :mode=\"mode\"\n          @update:value=\"tlsModeChanged\"\n        />\n      </div>\n    </div>\n\n    <Banner\n      v-if=\"!tlsMode && mode !== 'view'\"\n      color=\"info\"\n      :label=\"isTcp ? t('traefik.ingressRouteTCP.tls.notConfigured') : t('traefik.ingressRoute.tls.notConfigured')\"\n    />\n\n    <!-- Validation message if TLS enabled but no fields filled -->\n    <Banner\n      v-if=\"tlsMode && !hasTlsFields && mode !== 'view'\"\n      color=\"warning\"\n      :label=\"t('traefik.ingressRoute.tls.validation.atLeastOne')\"\n    />\n\n    <!-- TLS Configuration - visible when mode is enabled -->\n    <template v-if=\"tlsMode\">\n\n      <div v-if=\"supportPassthrough\" class=\"row mb-20\">\n        <div class=\"col span-12\">\n          <Checkbox\n            v-model:value=\"passthrough\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRouteTCP.tls.passthrough.label')\"\n            :tooltip=\"t('traefik.ingressRouteTCP.tls.passthrough.tooltip')\"\n          />\n        </div>\n      </div>\n\n      <!-- TLS Secret and Options -->\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledSelect\n            :value=\"tlsSecretValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.secretName.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.secretName.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.secretName.tooltip')\"\n            :options=\"secretTargets\"\n            :clearable=\"true\"\n            @update:value=\"updateSecretName\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledSelect\n            :value=\"tlsOptionsValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.options.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.options.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.options.tooltip')\"\n            :options=\"tlsOptionsTargets\"\n            :clearable=\"true\"\n            @update:value=\"ensureOptionsObject\"\n          />\n        </div>\n      </div>\n\n      <!-- Certificate Resolver and Store -->\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            :value=\"tlsCertResolverValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.certResolver.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.certResolver.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.certResolver.tooltip')\"\n            @update:value=\"updateCertResolver\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledSelect\n            :value=\"tlsStoreValue\"\n            :mode=\"mode\"\n            :label=\"t('traefik.ingressRoute.tls.store.label')\"\n            :placeholder=\"t('traefik.ingressRoute.tls.store.placeholder')\"\n            :tooltip=\"t('traefik.ingressRoute.tls.store.tooltip')\"\n            :options=\"tlsStoresTargets\"\n            :clearable=\"true\"\n            @update:value=\"ensureStoreObject\"\n          />\n        </div>\n      </div>\n\n      <!-- Domains Section -->\n      <div class=\"domains-section\">\n        <h5>{{ t('traefik.ingressRoute.tls.domains.label') }}</h5>\n        <TLSDomains\n          :value=\"value\"\n          :mode=\"mode\"\n          :namespace=\"namespace\"\n        />\n      </div>\n\n    </template>\n  </div>\n</template>\n\n<style lang=\"scss\">\n/* Ensure global radio button styles are not scoped out */\n\n.domains-section {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid var(--border);\n\n  h5 {\n    margin-bottom: 15px;\n    color: var(--text-color);\n  }\n}\n\n.remove-btn {\n  margin-top: 30px;\n}\n</style>","<script>\nimport { _EDIT } from '@shell/config/query-params';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport TLSDomain from './TLSDomain';\n\nexport default {\n  emits: ['validation-changed'],\n\n  components: {\n    ArrayListGrouped,\n    TLSDomain\n  },\n\n  props: {\n    value: {\n      type:    Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: _EDIT\n    }\n  },\n\n  data() {\n    return {\n      domainValidations: {},\n      defaultAddValue: {\n        main: '',\n        sans: []\n      }\n    };\n  },\n\n  mounted() {\n    // Ensure domains array exists for ArrayListGrouped\n    // spec.tls should already exist when this component is rendered\n    if (this.value.spec.tls && !this.value.spec.tls.domains) {\n      this.value.spec.tls.domains = [];\n    }\n  },\n\n  computed: {\n    isValid() {\n      // If no domains, consider valid (domains are optional)\n      if (!this.value.spec.tls.domains || this.value.spec.tls.domains.length === 0) {\n        return true;\n      }\n\n      // Check if all domains have been validated\n      const allDomainsValidated = this.value.spec.tls.domains.length === Object.keys(this.domainValidations).length;\n\n      if (!allDomainsValidated) {\n        return false;\n      }\n\n      // Return true only if all domains have validation status and are valid\n      return Object.values(this.domainValidations).every(v => v === true);\n    }\n  },\n\n  methods: {\n    domainValidationChanged(isValid, index) {\n      // Store validation status for the domain\n      this.domainValidations[index] = isValid;\n      this.updateValidationStatus();\n    },\n\n    updateValidationStatus() {\n      this.$emit('validation-changed', this.isValid);\n    },\n\n    handleRemove(index) {\n      // Clean up validation state when domain is removed\n      delete this.domainValidations[index];\n      // Re-index validations\n      const newValidations = {};\n      Object.keys(this.domainValidations).forEach(key => {\n        const idx = parseInt(key);\n        if (idx > index) {\n          newValidations[idx - 1] = this.domainValidations[key];\n        } else if (idx < index) {\n          newValidations[idx] = this.domainValidations[key];\n        }\n      });\n      this.domainValidations = newValidations;\n    }\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid);\n      },\n      immediate: true\n    },\n\n    'value.spec.tls.domains.length'() {\n      this.updateValidationStatus();\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <ArrayListGrouped\n      v-model:value=\"value.spec.tls.domains\"\n      :add-label=\"t('traefik.ingressRoute.tls.domains.addDomain')\"\n      :default-add-value=\"defaultAddValue\"\n      :mode=\"mode\"\n      :initial-empty-row=\"false\"\n      @remove=\"handleRemove\"\n    >\n      <template #default=\"props\">\n        <TLSDomain\n          :value=\"props.row.value\"\n          :index=\"props.i\"\n          :mode=\"mode\"\n          @remove=\"props.remove\"\n          @validation-changed=\"(valid, index) => domainValidationChanged(valid, index)\"\n        />\n      </template>\n    </ArrayListGrouped>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n// Use default ArrayListGrouped styling\n</style>","<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\n\nexport default {\n  emits:      ['remove', 'validation-changed'],\n  components: {\n    LabeledInput\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    index: {\n      type:     Number,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    rules: {\n      default: () => [],\n      type:    Array\n    }\n  },\n\n  computed: {\n    sansAsString: {\n      get() {\n        return Array.isArray(this.value.sans) ? this.value.sans.join(', ') : '';\n      },\n      set(val) {\n        this.value.sans = val ? val.split(',').map(s => s.trim()).filter(s => s) : [];\n      }\n    },\n\n    isValid() {\n      // A domain entry is valid if at least main domain is provided\n      return !!this.value.main;\n    }\n  },\n\n  watch: {\n    isValid: {\n      handler(valid) {\n        this.$emit('validation-changed', valid, this.index);\n      },\n      immediate: true\n    }\n  },\n\n  methods: {\n    remove() {\n      this.$emit('remove');\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"domain-row row mb-10\">\n    <div class=\"col span-5\">\n      <LabeledInput\n        v-model:value=\"value.main\"\n        :mode=\"mode\"\n        :label=\"t('traefik.ingressRoute.tls.domains.main.label')\"\n        :placeholder=\"t('traefik.ingressRoute.tls.domains.main.placeholder')\"\n        :rules=\"rules\"\n        :required=\"true\"\n        :error=\"!value.main ? t('validation.required', { key: t('traefik.ingressRoute.tls.domains.main.label') }) : ''\"\n      />\n    </div>\n    <div class=\"col span-5\">\n      <LabeledInput\n        v-model:value=\"sansAsString\"\n        :mode=\"mode\"\n        :label=\"t('traefik.ingressRoute.tls.domains.sans.label')\"\n        :placeholder=\"t('traefik.ingressRoute.tls.domains.sans.placeholder')\"\n        :tooltip=\"t('traefik.ingressRoute.tls.domains.sans.tooltip')\"\n      />\n    </div>\n    <div class=\"col span-2\">\n      <button\n        type=\"button\"\n        class=\"btn role-link remove-btn\"\n        @click=\"remove\"\n      >\n        {{ t('generic.remove') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.remove-btn {\n  margin-top: 30px;\n}\n</style>","import { render } from \"./TLSDomain.vue?vue&type=template&id=1daad2c6&scoped=true\"\nimport script from \"./TLSDomain.vue?vue&type=script&lang=js\"\nexport * from \"./TLSDomain.vue?vue&type=script&lang=js\"\n\nimport \"./TLSDomain.vue?vue&type=style&index=0&id=1daad2c6&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1daad2c6\"]])\n\nexport default __exports__","import { render } from \"./TLSDomains.vue?vue&type=template&id=b92792de&scoped=true\"\nimport script from \"./TLSDomains.vue?vue&type=script&lang=js\"\nexport * from \"./TLSDomains.vue?vue&type=script&lang=js\"\n\nimport \"./TLSDomains.vue?vue&type=style&index=0&id=b92792de&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b92792de\"]])\n\nexport default __exports__","import { render } from \"./TLSConfiguration.vue?vue&type=template&id=548c5b1d\"\nimport script from \"./TLSConfiguration.vue?vue&type=script&lang=js\"\nexport * from \"./TLSConfiguration.vue?vue&type=script&lang=js\"\n\nimport \"./TLSConfiguration.vue?vue&type=style&index=0&id=548c5b1d&lang=scss\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport merge from 'lodash/merge';\nimport { allHashSettled } from '@shell/utils/promise';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport { SECRET } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport ResourceManager from '@shell/mixins/resource-manager';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Tabbed from '@shell/components/Tabbed';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport ArrayList from '@shell/components/form/ArrayList';\nimport ArrayListSelect from '@shell/components/form/ArrayListSelect';\nimport { Card } from '@components/Card';\n\nexport default {\n  name: 'CRUTLSOption',\n  inheritAttrs: false,\n  emits: ['input'],\n  components: {\n    CruResource,\n    NameNsDescription,\n    Labels,\n    Tab,\n    Tabbed,\n    LabeledSelect,\n    Banner,\n    Loading,\n    Checkbox,\n    ArrayList,\n    ArrayListSelect,\n    Card\n  },\n\n  mixins: [CreateEditView, FormValidation, ResourceManager],\n\n  async fetch() {\n    // Configuration pour le ResourceManager\n    const namespace = this.value?.metadata?.namespace || null;\n\n    const secondaryResourceDataConfig = {\n      namespace,\n      data: {\n        [SECRET]: {\n          applyTo: [\n            { var: 'secrets', classify: true }\n          ]\n        }\n      }\n    };\n\n    // Charger les ressources namespaced avec ResourceManager\n    await this.resourceManagerFetchSecondaryResources(secondaryResourceDataConfig);\n  },\n\n  data() {\n    const emptySpec = {\n      minVersion: '',\n      maxVersion: '',\n      cipherSuites: [],\n      clientAuth: {\n        clientAuthType: 'NoClientCert',\n        secretNames: []\n      },\n      alpnProtocols: [],\n      curvePreferences: [],\n      sniStrict: false,\n      disableSessionTickets: false,\n      preferServerCipherSuites: false\n    };\n\n    if (this.mode === _CREATE) {\n      this.value['spec'] = merge(this.value.spec, emptySpec);\n    } else {\n      // Ensure existing spec structure for edit mode - preserve existing values\n      this.value.spec = this.value.spec || {};\n      this.value.spec.cipherSuites = this.value.spec.cipherSuites || [];\n      this.value.spec.alpnProtocols = this.value.spec.alpnProtocols || [];\n      this.value.spec.curvePreferences = this.value.spec.curvePreferences || [];\n\n      // Only initialize clientAuth if it doesn't exist\n      if (!this.value.spec.clientAuth) {\n        this.value.spec.clientAuth = {\n          clientAuthType: 'NoClientCert',\n          secretNames: []\n        };\n      } else {\n        // Ensure secretNames array exists\n        this.value.spec.clientAuth.secretNames = this.value.spec.clientAuth.secretNames || [];\n      }\n    }\n\n    return {\n      // Ressources chargées par ResourceManager\n      secrets: [],\n\n      // État du composant\n      errors: [],\n\n      // Liste des chemins gérés par les composants enfants\n      fvReportedValidationPaths: [\n        'spec.minVersion',\n        'spec.maxVersion',\n        'spec.clientAuth.clientAuthType',\n        'spec.clientAuth.secretNames'\n      ],\n\n      // FormValidation ruleSets\n      fvFormRuleSets: [\n        {\n          path: 'metadata.name',\n          rules: ['required'],\n          translationKey: 'nameNsDescription.name.label'\n        },\n        {\n          path: 'metadata.namespace',\n          rules: ['required'],\n          translationKey: 'nameNsDescription.namespace.label'\n        }\n      ]\n    };\n  },\n\n  computed: {\n    // Computed for tab error indicators\n    tabErrors() {\n      return {\n        tlsVersions: this.fvGetPathErrors(['spec.minVersion', 'spec.maxVersion']).length > 0,\n        cipherSuites: this.fvGetPathErrors(['spec.cipherSuites', 'spec.preferServerCipherSuites']).length > 0,\n        clientAuth: this.fvGetPathErrors(['spec.clientAuth.clientAuthType', 'spec.clientAuth.secretNames']).length > 0,\n        advanced: this.fvGetPathErrors(['spec.sniStrict', 'spec.disableSessionTickets']).length > 0\n      };\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n    validationPassed() {\n      // Validate both through FormValidation and the component validation events\n      return this.fvFormIsValid;\n    },\n\n    validationErrors() {\n      const errors = [];\n\n      // Include errors from FormValidation\n      return [...this.fvUnreportedValidationErrors, ...errors, ...this.errors];\n    },\n\n    secretTargets() {\n      return this.secrets\n        .filter(secret => secret._type === 'kubernetes.io/tls')\n        .map(secret => ({\n          label: secret.metadata.name,\n          value: secret.metadata.name\n        }));\n    },\n\n    requiresClientCerts() {\n      const authType = this.value.spec?.clientAuth?.clientAuthType;\n      return ['RequireAnyClientCert', 'VerifyClientCertIfGiven', 'RequireAndVerifyClientCert'].includes(authType);\n    },\n\n    tlsVersionOptions() {\n      return this.value?.tlsVersions || [\n        { value: 'VersionTLS10', label: 'TLS 1.0' },\n        { value: 'VersionTLS11', label: 'TLS 1.1' },\n        { value: 'VersionTLS12', label: 'TLS 1.2' },\n        { value: 'VersionTLS13', label: 'TLS 1.3' },\n      ];\n    },\n\n    clientAuthTypeOptions() {\n      return this.value?.clientAuthTypes || [\n        {\n          value: 'NoClientCert',\n          label: 'No Client Certificate',\n          description: 'No client certificate required'\n        },\n        {\n          value: 'RequestClientCert',\n          label: 'Request Client Certificate',\n          description: 'Client certificate is requested but not required'\n        },\n        {\n          value: 'RequireAnyClientCert',\n          label: 'Require Any Client Certificate',\n          description: 'Client certificate is required but not validated'\n        },\n        {\n          value: 'VerifyClientCertIfGiven',\n          label: 'Verify Client Certificate If Given',\n          description: 'Client certificate is verified if provided'\n        },\n        {\n          value: 'RequireAndVerifyClientCert',\n          label: 'Require and Verify Client Certificate',\n          description: 'Client certificate is required and validated'\n        }\n      ];\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  watch: {\n    // Watch namespace changes to reload resources\n    async 'value.metadata.namespace'(neu) {\n      if (neu && !this.$fetchState.pending) {\n        const config = {\n          namespace: neu,\n          data: {\n            [SECRET]: {\n              applyTo: [{ var: 'secrets', classify: true }]\n            }\n          }\n        };\n\n        await this.resourceManagerFetchSecondaryResources(config);\n      }\n    }\n  },\n\n  methods: {\n    willSave() {\n      // Nettoyer les valeurs par défaut si elles ne sont pas définies\n      if (!this.value.spec) {\n        this.value.spec = {};\n      }\n\n      // Clean up empty arrays and undefined values\n      const spec = this.value.spec;\n\n      // Remove empty strings for TLS versions (allow them to be undefined)\n      if (spec.minVersion === '') {\n        delete spec.minVersion;\n      }\n      if (spec.maxVersion === '') {\n        delete spec.maxVersion;\n      }\n\n      // Clean up empty arrays\n      if (spec.cipherSuites && spec.cipherSuites.length === 0) {\n        delete spec.cipherSuites;\n      }\n      if (spec.alpnProtocols && spec.alpnProtocols.length === 0) {\n        delete spec.alpnProtocols;\n      }\n      if (spec.curvePreferences && spec.curvePreferences.length === 0) {\n        delete spec.curvePreferences;\n      }\n\n      // Clean up boolean defaults\n      if (spec.sniStrict === false) {\n        delete spec.sniStrict;\n      }\n      if (spec.disableSessionTickets === false) {\n        delete spec.disableSessionTickets;\n      }\n      if (spec.preferServerCipherSuites === false) {\n        delete spec.preferServerCipherSuites;\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"validationPassed\"\n    :errors=\"validationErrors\"\n    @error=\"e => errors = e\"\n    @finish=\"save\"\n  >\n    <div v-if=\"value\">\n      <div>\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n        />\n      </div>\n\n      <Tabbed :side-tabs=\"true\">\n        <!-- TLS Versions Tab -->\n        <Tab\n          name=\"tls-versions\"\n          :label=\"t('traefik.tlsOption.tabs.tlsVersions')\"\n          :weight=\"10\"\n          :error=\"tabErrors.tlsVersions\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.tlsVersions.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"tls-versions-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-lock\" />\n                    {{ t('traefik.tlsOption.tabs.tlsVersions') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <div class=\"row\">\n                    <div class=\"col span-6\">\n                      <LabeledSelect\n                        v-model:value=\"value.spec.minVersion\"\n                        :label=\"t('traefik.tlsOption.minVersion.label')\"\n                        :options=\"tlsVersionOptions\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.minVersion.tooltip')\"\n                        option-key=\"value\"\n                        option-label=\"label\"\n                        :searchable=\"false\"\n                        :clearable=\"true\"\n                        :rules=\"fvGetAndReportPathRules('spec.minVersion')\"\n                      />\n                    </div>\n                    <div class=\"col span-6\">\n                      <LabeledSelect\n                        v-model:value=\"value.spec.maxVersion\"\n                        :label=\"t('traefik.tlsOption.maxVersion.label')\"\n                        :options=\"tlsVersionOptions\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.maxVersion.tooltip')\"\n                        option-key=\"value\"\n                        option-label=\"label\"\n                        :searchable=\"false\"\n                        :clearable=\"true\"\n                        :rules=\"fvGetAndReportPathRules('spec.maxVersion')\"\n                      />\n                    </div>\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Cipher Suites Tab -->\n        <Tab\n          name=\"cipher-suites\"\n          :label=\"t('traefik.tlsOption.tabs.cipherSuites')\"\n          :weight=\"9\"\n          :error=\"tabErrors.cipherSuites\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.cipherSuites.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"cipher-suites-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-shield\" />\n                    {{ t('traefik.tlsOption.cipherSuites.label') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <ArrayList\n                    v-model:value=\"value.spec.cipherSuites\"\n                    :title=\"t('traefik.tlsOption.cipherSuites.label')\"\n                    :mode=\"mode\"\n                    :add-label=\"t('traefik.tlsOption.cipherSuites.add')\"\n                    :placeholder=\"t('traefik.tlsOption.cipherSuites.placeholder')\"\n                    :tooltip=\"t('traefik.tlsOption.cipherSuites.tooltip')\"\n                    :initial-empty-row=\"false\"\n                    default-add-value=\"\"\n                    add-allowed\n                  />\n\n                  <div class=\"mt-20\">\n                    <Checkbox\n                      v-model:value=\"value.spec.preferServerCipherSuites\"\n                      :label=\"t('traefik.tlsOption.preferServerCipherSuites.label')\"\n                      :mode=\"mode\"\n                      :tooltip=\"t('traefik.tlsOption.preferServerCipherSuites.tooltip')\"\n                    />\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Client Authentication Tab -->\n        <Tab\n          name=\"client-auth\"\n          :label=\"t('traefik.tlsOption.tabs.clientAuth')\"\n          :weight=\"8\"\n          :error=\"tabErrors.clientAuth\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.clientAuth.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"client-auth-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-user\" />\n                    {{ t('traefik.tlsOption.clientAuth.label') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <div class=\"row\">\n                    <div class=\"col span-12\">\n                      <LabeledSelect\n                        v-model:value=\"value.spec.clientAuth.clientAuthType\"\n                        :label=\"t('traefik.tlsOption.clientAuth.type.label')\"\n                        :options=\"clientAuthTypeOptions\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.clientAuth.type.tooltip')\"\n                        option-key=\"value\"\n                        option-label=\"label\"\n                        :searchable=\"false\"\n                        :rules=\"fvGetAndReportPathRules('spec.clientAuth.clientAuthType')\"\n                      />\n                    </div>\n                  </div>\n\n                  <div\n                    class=\"row mt-20\"\n                  >\n                    <div class=\"col span-12\">\n                      <ArrayListSelect\n                        v-model:value=\"value.spec.clientAuth.secretNames\"\n                        :options=\"secretTargets\"\n                        :array-list-props=\"{\n                          title: t('traefik.tlsOption.clientAuth.secrets.label'),\n                          addLabel: t('traefik.tlsOption.clientAuth.secrets.add'),\n                          mode: mode\n                        }\"\n                        :select-props=\"{\n                          placeholder: t('traefik.tlsOption.clientAuth.secrets.placeholder'),\n                          searchable: true,\n                          clearable: true\n                        }\"\n                        :loading=\"!secrets || $fetchState.pending\"\n                        :disabled=\"mode === 'view'\"\n                      />\n                    </div>\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Advanced Options Tab -->\n        <Tab\n          name=\"advanced\"\n          :label=\"t('traefik.tlsOption.tabs.advanced')\"\n          :weight=\"7\"\n          :error=\"tabErrors.advanced\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <Banner\n                color=\"info\"\n                :label=\"t('traefik.tlsOption.advanced.description')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Card class=\"advanced-options-card\" :show-actions=\"false\">\n                <template #title>\n                  <h4 class=\"card-title\">\n                    <i class=\"icon icon-settings\" />\n                    {{ t('traefik.tlsOption.tabs.advanced') }}\n                  </h4>\n                </template>\n                <template #body>\n                  <!-- ALPN Protocols -->\n                  <div class=\"mb-20\">\n                    <h5>{{ t('traefik.tlsOption.alpnProtocols.label') }}</h5>\n                    <ArrayList\n                      v-model:value=\"value.spec.alpnProtocols\"\n                      :title=\"t('traefik.tlsOption.alpnProtocols.label')\"\n                      :mode=\"mode\"\n                      :add-label=\"t('traefik.tlsOption.alpnProtocols.add')\"\n                      :placeholder=\"t('traefik.tlsOption.alpnProtocols.placeholder')\"\n                      :tooltip=\"t('traefik.tlsOption.alpnProtocols.tooltip')\"\n                      :initial-empty-row=\"false\"\n                      default-add-value=\"\"\n                      add-allowed\n                    />\n                  </div>\n\n                  <!-- Curve Preferences -->\n                  <div class=\"mb-20\">\n                    <h5>{{ t('traefik.tlsOption.curvePreferences.label') }}</h5>\n                    <ArrayList\n                      v-model:value=\"value.spec.curvePreferences\"\n                      :title=\"t('traefik.tlsOption.curvePreferences.label')\"\n                      :mode=\"mode\"\n                      :add-label=\"t('traefik.tlsOption.curvePreferences.add')\"\n                      :placeholder=\"t('traefik.tlsOption.curvePreferences.placeholder')\"\n                      :tooltip=\"t('traefik.tlsOption.curvePreferences.tooltip')\"\n                      :initial-empty-row=\"false\"\n                      default-add-value=\"\"\n                      add-allowed\n                    />\n                  </div>\n\n                  <!-- Boolean Options -->\n                  <div class=\"row\">\n                    <div class=\"col span-6\">\n                      <Checkbox\n                        v-model:value=\"value.spec.sniStrict\"\n                        :label=\"t('traefik.tlsOption.sniStrict.label')\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.sniStrict.tooltip')\"\n                      />\n                    </div>\n                    <div class=\"col span-6\">\n                      <Checkbox\n                        v-model:value=\"value.spec.disableSessionTickets\"\n                        :label=\"t('traefik.tlsOption.disableSessionTickets.label')\"\n                        :mode=\"mode\"\n                        :tooltip=\"t('traefik.tlsOption.disableSessionTickets.tooltip')\"\n                      />\n                    </div>\n                  </div>\n                </template>\n              </Card>\n            </div>\n          </div>\n        </Tab>\n\n        <!-- Labels & Annotations Tab -->\n        <Tab\n          name=\"labels\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"0\"\n        >\n          <Labels\n            :value=\"value\"\n            :mode=\"mode\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n  </CruResource>\n</template>\n\n<style lang=\"scss\" scoped>\n.card-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--input-label);\n\n  .icon {\n    color: var(--primary);\n    font-size: 1.1em;\n  }\n}\n\n.tls-versions-card,\n.cipher-suites-card,\n.client-auth-card,\n.advanced-options-card {\n  border: 1px solid var(--border);\n  border-radius: var(--border-radius);\n\n}\n\nh5 {\n  color: var(--input-label);\n  margin-bottom: 10px;\n  font-weight: 500;\n}\n\n.mt-20 {\n  margin-top: 20px;\n}\n\n.mb-20 {\n  margin-bottom: 20px;\n}\n</style>","import { render } from \"./index.vue?vue&type=template&id=67990633&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=67990633&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-67990633\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".domains-section{margin-top:20px;padding-top:20px;border-top:1px solid var(--border)}.domains-section h5{margin-bottom:15px;color:var(--text-color)}.remove-btn{margin-top:30px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./index.vue?vue&type=style&index=0&id=67990633&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5da12ef7\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./IngressClassTab.vue?vue&type=style&index=0&id=6071656f&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"99e52fa6\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["___CSS_LOADER_EXPORT___","push","module","id","content","__esModule","default","locals","exports","add","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_Tabbed","$props","mode","useTabbedHash","onAddTab","$options","addRoute","onRemoveTab","removeRoute","_Fragment","_renderList","value","spec","routes","route","idx","_createBlock","_component_Tab","key","vKey","name","label","routeLabel","error","$data","routeValidations","_component_Route","index","serviceTargets","middlewareTargets","length","isTcp","onRemove","$event","onValidationChanged","valid","routeValidationChanged","_toDisplayString","routeTitle","canRemove","type","onClick","_cache","args","remove","_ctx","t","_hoisted_4","_component_LabeledInput","ref","match","placeholder","tooltip","required","matchError","_hoisted_5","_component_ArrayListGrouped","services","port","kind","onAdd","_withCtx","row","_hoisted_6","_hoisted_7","_component_LabeledSelect","options","updateServiceName","_hoisted_8","getPortOptions","updateServicePort","_hoisted_9","_component_Banner","color","middlewares","namespace","_hoisted_10","_hoisted_11","middlewareOptions","target","find","m","emits","components","LabeledInput","LabeledSelect","ArrayListGrouped","Banner","props","Object","Number","Array","String","Boolean","data","created","this","computed","isValid","validMatch","validServices","every","s","map","middleware","watch","handler","$emit","immediate","methods","focus","$refs","service","serviceName","serviceNameValue","selectedService","ports","firstPort","portValue","portValueClean","__exports__","Route","Tab","Tabbed","undefined","beforeUpdate","random32","allRoutesValidated","keys","values","v","currentRoutesCount","validationKeys","forEach","numericIdx","parseInt","updateValidationStatus","routesCount","i","hasMatch","hasValidServices","newRoute","removeAt","newValidations","oldIdx","render","_component_CruResource","doneRoute","resource","subtypes","validationPassed","errors","validationErrors","onError","e","onFinish","save","isView","_component_NameNsDescription","weight","tabErrors","entrypoints","entryPointsValid","entryPointsString","isLoadingSecondaryResources","_component_Loading","_component_Routes","middlewareTcpTargets","val","routesValid","tls","_component_TLSConfiguration","secretTargets","tlsOptionsTargets","tlsStoresTargets","metadata","onTlsValidationChanged","tlsValid","_component_IngressClassTab","ingressClasses","_component_Labels","inheritAttrs","CruResource","NameNsDescription","Routes","TLSConfiguration","Labels","Loading","IngressClassTab","mixins","CreateEditView","FormValidation","ResourceManager","fetch","secondaryResourceDataConfig","SERVICE","applyTo","var","classify","SECRET","resourceManagerFetchSecondaryResources","promises","$store","dispatch","opt","force","hash","allHashSettled","status","emptySpec","entryPoints","_CREATE","merge","secrets","middlewaretcps","tlsOptions","tlsStores","join","fvReportedValidationPaths","fvFormRuleSets","path","rules","translationKey","fvGetPathErrors","_VIEW","fvFormIsValid","fvUnreportedValidationErrors","filter","secret","_type","tlsOption","tlsStore","registerBeforeHook","willSave","deep","split","ep","trim","neu","$fetchState","pending","config","domains","domain","hasIngressClasses","currentIngressClass","ingressClassOptions","disabled","get","annotations","set","ingressClass","multiple","taggable","entryPointOptions","isArray","includes","_component_RadioGroup","tlsMode","tlsModeChanged","labels","hasTlsFields","supportPassthrough","_component_Checkbox","passthrough","tlsSecretValue","clearable","updateSecretName","tlsOptionsValue","ensureOptionsObject","tlsCertResolverValue","updateCertResolver","tlsStoreValue","ensureStoreObject","_hoisted_12","_component_TLSDomains","defaultAddValue","handleRemove","_component_TLSDomain","domainValidationChanged","main","sansAsString","sans","TLSDomain","_EDIT","domainValidations","mounted","allDomainsValidated","RadioGroup","Checkbox","TLSDomains","initTlsMode","ensureDomainKeys","secretName","certResolver","store","enabled","updatePassthrough","updated","hasFields","tlsVersions","_component_Card","title","body","minVersion","tlsVersionOptions","searchable","fvGetAndReportPathRules","maxVersion","cipherSuites","_hoisted_13","_hoisted_14","_component_ArrayList","_hoisted_15","preferServerCipherSuites","clientAuth","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","clientAuthType","clientAuthTypeOptions","_hoisted_23","_hoisted_24","_component_ArrayListSelect","secretNames","loading","advanced","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","alpnProtocols","_hoisted_31","curvePreferences","_hoisted_32","_hoisted_33","sniStrict","_hoisted_34","disableSessionTickets","ArrayList","ArrayListSelect","Card","requiresClientCerts","authType","clientAuthTypes","description"],"sourceRoot":""}